{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/CompanyList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './CompanyList.css'; // Ensure you import your CSS here\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyList = ({\n  year\n}) => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchCompanies = async () => {\n    if (!year) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`http://localhost:1000/api/companies?year=${year}`);\n      // Log the response to see if it's structured as expected\n      console.log(response.data);\n      setCompanies(response.data);\n    } catch (error) {\n      // Handle specific error cases for better debugging\n      if (error.response) {\n        console.error('Response data:', error.response.data);\n        console.error('Response status:', error.response.status);\n        setError(`Error: ${error.response.data.message || 'Failed to fetch companies.'}`);\n      } else if (error.request) {\n        console.error('Request data:', error.request);\n        setError('No response received from the server.');\n      } else {\n        console.error('Error message:', error.message);\n        setError('Error setting up request.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCompanies();\n  }, [year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Companies Visited in \", year, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), \" \", loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 32\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 34\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-list-items\",\n      children: [\" \", companies.length > 0 ? companies.map(company => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", company.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 41\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Placed: \", company.placedCount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 70\n        }, this), \" \"]\n      }, company.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 66\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No companies found for this year. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 39\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 71\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 18\n  }, this);\n};\n_s(CompanyList, \"qz1RBxjcaaHg43Su66WKtLuc0kA=\");\n_c = CompanyList;\nexport default CompanyList;\nvar _c;\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CompanyList","year","_s","companies","setCompanies","loading","setLoading","error","setError","fetchCompanies","response","get","console","log","data","status","message","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","length","map","company","name","placedCount","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/CompanyList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './CompanyList.css'; // Ensure you import your CSS here\n\nconst CompanyList = ({ year }) => {\n        const [companies, setCompanies] = useState([]);\n        const [loading, setLoading] = useState(false);\n        const [error, setError] = useState(null);\n\n        const fetchCompanies = async() => {\n            if (!year) return;\n\n            setLoading(true);\n            setError(null);\n\n            try {\n                const response = await axios.get(`http://localhost:1000/api/companies?year=${year}`);\n                // Log the response to see if it's structured as expected\n                console.log(response.data);\n                setCompanies(response.data);\n            } catch (error) {\n                // Handle specific error cases for better debugging\n                if (error.response) {\n                    console.error('Response data:', error.response.data);\n                    console.error('Response status:', error.response.status);\n                    setError(`Error: ${error.response.data.message || 'Failed to fetch companies.'}`);\n                } else if (error.request) {\n                    console.error('Request data:', error.request);\n                    setError('No response received from the server.');\n                } else {\n                    console.error('Error message:', error.message);\n                    setError('Error setting up request.');\n                }\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        useEffect(() => {\n            fetchCompanies();\n        }, [year]);\n\n        return ( <\n                div className = \"company-list\" >\n                <\n                h2 > Companies Visited in { year } < /h2> {\n                    loading && < p > Loading... < /p>} {\n                        error && < p style = {\n                                { color: 'red' } } > { error } < /p>} <\n                            div className = \"company-list-items\" > {\n                                companies.length > 0 ? (\n                                    companies.map((company) => ( <\n                                        div key = { company.name }\n                                        className = \"company-card\" >\n                                        <\n                                        h3 > { company.name } < /h3> <\n                                        p > Placed: { company.placedCount } < /p> <\n                                        /div>\n                                    ))\n                                ) : ( <\n                                    p > No companies found\n                                    for this year. < /p>\n                                )\n                            } <\n                            /div> <\n                            /div>\n                    );\n                };\n\n                export default CompanyList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}