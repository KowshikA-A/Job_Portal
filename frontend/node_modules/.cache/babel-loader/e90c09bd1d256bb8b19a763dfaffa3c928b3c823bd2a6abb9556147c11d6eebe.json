{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList({\n  filter,\n  year,\n  searchTerm,\n  schoolFilter,\n  typeFilter\n}) {\n  _s();\n  const [students, setStudents] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n\n  // Helper function to safely handle string toLowerCase conversion\n  const safeToLowerCase = str => str ? str.toLowerCase() : '';\n  useEffect(() => {\n    const loadStudents = async () => {\n      try {\n        setLoading(true);\n\n        // Fetch students based on all provided filters\n        const data = await fetchStudents(filter, year, searchTerm, schoolFilter, typeFilter);\n        console.log('Fetched student data:', data); // Log to verify the data\n\n        if (Array.isArray(data)) {\n          // Group students by Reg_No after applying all filters\n          const groupedData = groupByRegNo(data);\n          setStudents(groupedData);\n        } else {\n          console.error('Fetched data is not an array:', data);\n          setError('Unexpected data format from server.');\n        }\n      } catch (error) {\n        console.error('Error loading students:', error);\n        setError('Failed to load student data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadStudents();\n  }, [filter, year, searchTerm, schoolFilter, typeFilter]); // Trigger the effect whenever any of the filters change\n\n  const handleStudentClick = student => {\n    setSelectedStudent(student);\n  };\n  const closeModal = () => {\n    setSelectedStudent(null);\n  };\n\n  // Memoizing the student cards for optimized re-rendering\n  const studentCards = useMemo(() => {\n    return Object.values(students).map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleStudentClick(student),\n      children: [/*#__PURE__*/_jsxDEV(StudentCard, {\n        student: student\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), \" \"]\n    }, student.Reg_No, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 59\n    }, this));\n  }, [students]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: '20px',\n        fontSize: '30px'\n      },\n      children: \" Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-cards-container\",\n      children: [\" \", Object.keys(students).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No students found matching this criteria. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 52\n      }, this) : studentCards // Display the memoized student cards\n      , \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 74\n    }, this), selectedStudent && /*#__PURE__*/_jsxDEV(StudentDetailModal, {\n      student: selectedStudent,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 34\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"PW/7PmXMY8Xoj7eP7oRhh+fHHy8=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","StudentCard","StudentDetailModal","fetchStudents","groupByRegNo","jsxDEV","_jsxDEV","StudentList","filter","year","searchTerm","schoolFilter","typeFilter","_s","students","setStudents","loading","setLoading","error","setError","selectedStudent","setSelectedStudent","safeToLowerCase","str","toLowerCase","loadStudents","data","console","log","Array","isArray","groupedData","handleStudentClick","student","closeModal","studentCards","Object","values","map","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Reg_No","className","style","marginLeft","fontSize","keys","length","onClose","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\n\nfunction StudentList({ filter, year, searchTerm, schoolFilter, typeFilter }) {\n    const [students, setStudents] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedStudent, setSelectedStudent] = useState(null);\n\n    // Helper function to safely handle string toLowerCase conversion\n    const safeToLowerCase = (str) => (str ? str.toLowerCase() : '');\n\n    useEffect(() => {\n        const loadStudents = async() => {\n            try {\n                setLoading(true);\n\n                // Fetch students based on all provided filters\n                const data = await fetchStudents(filter, year, searchTerm, schoolFilter, typeFilter);\n                console.log('Fetched student data:', data); // Log to verify the data\n\n                if (Array.isArray(data)) {\n                    // Group students by Reg_No after applying all filters\n                    const groupedData = groupByRegNo(data);\n                    setStudents(groupedData);\n                } else {\n                    console.error('Fetched data is not an array:', data);\n                    setError('Unexpected data format from server.');\n                }\n            } catch (error) {\n                console.error('Error loading students:', error);\n                setError('Failed to load student data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadStudents();\n    }, [filter, year, searchTerm, schoolFilter, typeFilter]); // Trigger the effect whenever any of the filters change\n\n    const handleStudentClick = (student) => {\n        setSelectedStudent(student);\n    };\n\n    const closeModal = () => {\n        setSelectedStudent(null);\n    };\n\n    // Memoizing the student cards for optimized re-rendering\n    const studentCards = useMemo(() => {\n        return Object.values(students).map((student) => ( <\n            div key = { student.Reg_No }\n            onClick = {\n                () => handleStudentClick(student) } >\n            <\n            StudentCard student = { student }\n            /> <\n            /div>\n        ));\n    }, [students]);\n\n    if (loading) {\n        return <p > Loading... < /p>;\n    }\n\n    if (error) {\n        return <p className = \"error-message\" > { error } < /p>;\n    }\n\n    return ( <\n        div className = \"student-list\" >\n        <\n        h2 style = {\n            { marginLeft: '20px', fontSize: '30px' } } > Students < /h2> <\n        div className = \"student-cards-container\" > {\n            Object.keys(students).length === 0 ? ( <\n                p > No students found matching this criteria. < /p>\n            ) : (\n                studentCards // Display the memoized student cards\n            )\n        } <\n        /div>\n\n        {\n            selectedStudent && ( <\n                StudentDetailModal student = { selectedStudent }\n                onClose = { closeModal }\n                />\n            )\n        } <\n        /div>\n    );\n}\n\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}