{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js\",\n  _s = $RefreshSig$();\n// Monitoring.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // To make API requests\nimport { Bar } from 'react-chartjs-2'; // For the chart\nimport 'chart.js/auto';\nimport './Monitoring.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Monitoring() {\n  _s();\n  const [numYears, setNumYears] = useState(1);\n  const [selectedYears, setSelectedYears] = useState([]);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState('');\n  const [placementData, setPlacementData] = useState([]);\n  useEffect(() => {\n    // Fetch the list of companies from your API\n    axios.get('/api/company') // Updated to use /api/company\n    .then(response => {\n      setCompanyList(response.data);\n    }).catch(error => {\n      console.error('Error fetching companies:', error);\n    });\n  }, []);\n  const handleNumYearsChange = e => {\n    setNumYears(Number(e.target.value));\n    setSelectedYears(new Array(Number(e.target.value)).fill(''));\n  };\n  const handleYearChange = (index, e) => {\n    const newSelectedYears = [...selectedYears];\n    newSelectedYears[index] = e.target.value;\n    setSelectedYears(newSelectedYears);\n  };\n  const handleCompanyChange = e => {\n    setSelectedCompany(e.target.value);\n  };\n  const fetchPlacementData = () => {\n    // Prepare the payload with selected years and company\n    const payload = {\n      years: selectedYears,\n      company: selectedCompany || null // If no company is selected, send null\n    };\n\n    // Use POST to fetch placement data\n    axios.post('/api/placements', payload) // Ensure the endpoint matches your backend\n    .then(response => {\n      setPlacementData(response.data);\n    }).catch(error => {\n      console.error('Error fetching placement data:', error);\n    });\n  };\n  const chartData = {\n    labels: placementData.map(item => item.status),\n    datasets: [{\n      label: `Placements for ${selectedCompany || 'All Companies'}`,\n      data: placementData.map(item => item.count),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monitoring-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Monitoring Placements \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numYears\",\n      children: \" Select number of years to compare: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 43\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"numYears\",\n      type: \"number\",\n      value: numYears,\n      onChange: handleNumYearsChange,\n      min: \"1\",\n      max: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 83\n    }, this), Array.from({\n      length: numYears\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `year${index}`,\n        children: [\" Select Year \", index + 1, \": \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n        id: `year${index}`,\n        value: selectedYears[index] || '',\n        onChange: e => handleYearChange(index, e),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \" Select Year \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2023\",\n          children: \" 2023 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 60\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022\",\n          children: \" 2022 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 57\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021\",\n          children: \" 2021 \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 57\n        }, this), \" \", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 91\n      }, this), \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 66\n    }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"company\",\n      children: \" Select Company(Optional): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"company\",\n      value: selectedCompany,\n      onChange: handleCompanyChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" All Companies \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), \" \", companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: company.name,\n        children: [\" \", company.name, \" \"]\n      }, company.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 44\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 73\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPlacementData,\n      children: \" Get Placement Data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this), placementData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-chart\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 43\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 14\n  }, this);\n}\n_s(Monitoring, \"ZPHvLEIll+Kp8wfP0PymDJW7GY4=\");\n_c = Monitoring;\nexport default Monitoring;\nvar _c;\n$RefreshReg$(_c, \"Monitoring\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","Monitoring","_s","numYears","setNumYears","selectedYears","setSelectedYears","companyList","setCompanyList","selectedCompany","setSelectedCompany","placementData","setPlacementData","get","then","response","data","catch","error","console","handleNumYearsChange","e","Number","target","value","Array","fill","handleYearChange","index","newSelectedYears","handleCompanyChange","fetchPlacementData","payload","years","company","post","chartData","labels","map","item","status","datasets","label","count","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","min","max","from","length","_","name","onClick","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js"],"sourcesContent":["// Monitoring.js\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // To make API requests\nimport { Bar } from 'react-chartjs-2'; // For the chart\nimport 'chart.js/auto';\nimport './Monitoring.css'; // Import the CSS file\n\nfunction Monitoring() {\n    const [numYears, setNumYears] = useState(1);\n    const [selectedYears, setSelectedYears] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [selectedCompany, setSelectedCompany] = useState('');\n    const [placementData, setPlacementData] = useState([]);\n\n    useEffect(() => {\n        // Fetch the list of companies from your API\n        axios.get('/api/company') // Updated to use /api/company\n            .then((response) => {\n                setCompanyList(response.data);\n            })\n            .catch((error) => {\n                console.error('Error fetching companies:', error);\n            });\n    }, []);\n\n    const handleNumYearsChange = (e) => {\n        setNumYears(Number(e.target.value));\n        setSelectedYears(new Array(Number(e.target.value)).fill(''));\n    };\n\n    const handleYearChange = (index, e) => {\n        const newSelectedYears = [...selectedYears];\n        newSelectedYears[index] = e.target.value;\n        setSelectedYears(newSelectedYears);\n    };\n\n    const handleCompanyChange = (e) => {\n        setSelectedCompany(e.target.value);\n    };\n\n    const fetchPlacementData = () => {\n        // Prepare the payload with selected years and company\n        const payload = {\n            years: selectedYears,\n            company: selectedCompany || null, // If no company is selected, send null\n        };\n\n        // Use POST to fetch placement data\n        axios.post('/api/placements', payload) // Ensure the endpoint matches your backend\n            .then((response) => {\n                setPlacementData(response.data);\n            })\n            .catch((error) => {\n                console.error('Error fetching placement data:', error);\n            });\n    };\n\n    const chartData = {\n        labels: placementData.map(item => item.status),\n        datasets: [{\n            label: `Placements for ${selectedCompany || 'All Companies'}`,\n            data: placementData.map(item => item.count),\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n        }],\n    };\n\n    return ( <\n        div className = \"monitoring-container\" >\n        <\n        h2 > Monitoring Placements < /h2> <\n        label htmlFor = \"numYears\" > Select number of years to compare: < /label> <\n        input id = \"numYears\"\n        type = \"number\"\n        value = { numYears }\n        onChange = { handleNumYearsChange }\n        min = \"1\"\n        max = \"5\" / >\n\n        {\n            Array.from({ length: numYears }).map((_, index) => ( <\n                div key = { index } >\n                <\n                label htmlFor = { `year${index}` } > Select Year { index + 1 }: < /label> <\n                select id = { `year${index}` }\n                value = { selectedYears[index] || '' }\n                onChange = {\n                    (e) => handleYearChange(index, e) } >\n                <\n                option value = \"\" > Select Year < /option> <\n                option value = \"2023\" > 2023 < /option> <\n                option value = \"2022\" > 2022 < /option> <\n                option value = \"2021\" > 2021 < /option> { /* Add more options as necessary */ } <\n                /select> <\n                /div>\n            ))\n        }\n\n        <\n        label htmlFor = \"company\" > Select Company(Optional): < /label> <\n        select id = \"company\"\n        value = { selectedCompany }\n        onChange = { handleCompanyChange } >\n        <\n        option value = \"\" > All Companies < /option> {\n            companyList.map((company) => ( <\n                option key = { company.id }\n                value = { company.name } > { company.name } < /option>\n            ))\n        } <\n        /select>\n\n        <\n        button onClick = { fetchPlacementData } > Get Placement Data < /button>\n\n        {\n            placementData.length > 0 && ( <\n                div className = \"monitoring-chart\" >\n                <\n                Bar data = { chartData }\n                /> <\n                /div>\n            )\n        } <\n        /div>\n    );\n}\n\nexport default Monitoring;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}