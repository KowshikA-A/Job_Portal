{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/MoreData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport './MoreData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoreData = () => {\n  _s();\n  const [years, setYears] = useState([]);\n  const [firstYear, setFirstYear] = useState('');\n  const [secondYear, setSecondYear] = useState('');\n  const [data, setData] = useState(null);\n\n  // Fetch unique years from the backend\n  useEffect(() => {\n    const fetchUniqueYears = async () => {\n      try {\n        const response = await axios.get('http://localhost:1000/api/suggest-years');\n        console.log('Fetched years:', response.data.years);\n        setYears(response.data.years || []);\n      } catch (error) {\n        console.error('Error fetching years:', error);\n      }\n    };\n    fetchUniqueYears();\n  }, []);\n\n  // Function to generate a range of the next 5 years starting from the selected year\n  const generateYearRange = startYear => {\n    const start = parseInt(startYear, 10);\n    return Array.from({\n      length: 5\n    }, (v, i) => start + i);\n  };\n\n  // Function to handle the compare logic, fetch data, and set the bar chart data\n  const handleCompare = async () => {\n    if (firstYear && secondYear) {\n      const firstYearRange = generateYearRange(firstYear);\n      const secondYearRange = generateYearRange(secondYear);\n      try {\n        const response = await axios.post('http://localhost:1000/api/compare-years', {\n          firstYearRange,\n          secondYearRange\n        });\n\n        // Check if response has data\n        if (response.data) {\n          const {\n            firstYearData,\n            secondYearData\n          } = response.data;\n\n          // Debug: Check the structure of the returned data\n          console.log('First Year Data:', firstYearData);\n          console.log('Second Year Data:', secondYearData);\n\n          // Prepare data for the grouped bar chart\n          const labels = ['Applied', 'Shortlisted', 'Not placed', 'Placed']; // Adjusted casing here\n          const firstYearCounts = labels.map(label => {\n            const entry = firstYearData.find(item => item._id.toLowerCase() === label.toLowerCase()); // Casing adjustment\n            console.log(`Entry for ${label} in firstYearData:`, entry); // Debugging\n            return entry ? entry.count : 0; // Default to 0 if no data found\n          });\n          const secondYearCounts = labels.map(label => {\n            const entry = secondYearData.find(item => item._id.toLowerCase() === label.toLowerCase()); // Casing adjustment\n            console.log(`Entry for ${label} in secondYearData:`, entry); // Debugging\n            return entry ? entry.count : 0; // Default to 0 if no data found\n          });\n\n          // Log counts for verification\n          console.log('First Year Counts:', firstYearCounts);\n          console.log('Second Year Counts:', secondYearCounts);\n          const chartData = {\n            labels,\n            datasets: [{\n              label: `Data for ${firstYearRange.join(', ')}`,\n              data: firstYearCounts,\n              backgroundColor: 'rgba(75, 192, 192, 0.6)'\n            }, {\n              label: `Data for ${secondYearRange.join(', ')}`,\n              data: secondYearCounts,\n              backgroundColor: 'rgba(153, 102, 255, 0.6)'\n            }]\n          };\n          setData(chartData); // Update the chart with the fetched data\n        } else {\n          console.error('No data returned from API.');\n        }\n      } catch (error) {\n        console.error('Error comparing year ranges:', error);\n      }\n    } else {\n      console.log('Please select both years.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"more-data-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Compare Placement Statistics \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdowns\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: firstYear,\n          onChange: e => setFirstYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Select Year for First Range \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this), \" \", years.length > 0 ? years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [\" \", year, \" \"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 39\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" No Years Available \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 19\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: secondYear,\n          onChange: e => setSecondYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Select Year for Second Range \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 9\n          }, this), \" \", years.length > 0 ? years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [\" \", year, \" \"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 39\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" No Years Available \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 19\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCompare,\n          className: \"submit-btn\",\n          children: \" Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 50\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: {\n          responsive: true,\n          scales: {\n            y: {\n              beginAtZero: true,\n              title: {\n                display: true,\n                text: 'Counts'\n              }\n            },\n            x: {\n              title: {\n                display: true,\n                text: 'Application Status'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 23\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 14\n  }, this);\n};\n_s(MoreData, \"iD9GM8VgJPFHxN4NR+R7LvyZZAQ=\");\n_c = MoreData;\nexport default MoreData;\nvar _c;\n$RefreshReg$(_c, \"MoreData\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","MoreData","_s","years","setYears","firstYear","setFirstYear","secondYear","setSecondYear","data","setData","fetchUniqueYears","response","get","console","log","error","generateYearRange","startYear","start","parseInt","Array","from","length","v","i","handleCompare","firstYearRange","secondYearRange","post","firstYearData","secondYearData","labels","firstYearCounts","map","label","entry","find","item","_id","toLowerCase","count","secondYearCounts","chartData","datasets","join","backgroundColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","year","onClick","options","responsive","scales","y","beginAtZero","title","display","text","x","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/MoreData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport './MoreData.css';\n\nconst MoreData = () => {\n    const [years, setYears] = useState([]);\n    const [firstYear, setFirstYear] = useState('');\n    const [secondYear, setSecondYear] = useState('');\n    const [data, setData] = useState(null);\n\n    // Fetch unique years from the backend\n    useEffect(() => {\n        const fetchUniqueYears = async() => {\n            try {\n                const response = await axios.get('http://localhost:1000/api/suggest-years');\n                console.log('Fetched years:', response.data.years);\n                setYears(response.data.years || []);\n            } catch (error) {\n                console.error('Error fetching years:', error);\n            }\n        };\n\n        fetchUniqueYears();\n    }, []);\n\n    // Function to generate a range of the next 5 years starting from the selected year\n    const generateYearRange = (startYear) => {\n        const start = parseInt(startYear, 10);\n        return Array.from({ length: 5 }, (v, i) => start + i);\n    };\n\n    // Function to handle the compare logic, fetch data, and set the bar chart data\n    const handleCompare = async() => {\n        if (firstYear && secondYear) {\n            const firstYearRange = generateYearRange(firstYear);\n            const secondYearRange = generateYearRange(secondYear);\n\n            try {\n                const response = await axios.post('http://localhost:1000/api/compare-years', {\n                    firstYearRange,\n                    secondYearRange,\n                });\n\n                // Check if response has data\n                if (response.data) {\n                    const { firstYearData, secondYearData } = response.data;\n\n                    // Debug: Check the structure of the returned data\n                    console.log('First Year Data:', firstYearData);\n                    console.log('Second Year Data:', secondYearData);\n\n                    // Prepare data for the grouped bar chart\n                    const labels = ['Applied', 'Shortlisted', 'Not placed', 'Placed']; // Adjusted casing here\n                    const firstYearCounts = labels.map(label => {\n                        const entry = firstYearData.find(item => item._id.toLowerCase() === label.toLowerCase()); // Casing adjustment\n                        console.log(`Entry for ${label} in firstYearData:`, entry); // Debugging\n                        return entry ? entry.count : 0; // Default to 0 if no data found\n                    });\n                    const secondYearCounts = labels.map(label => {\n                        const entry = secondYearData.find(item => item._id.toLowerCase() === label.toLowerCase()); // Casing adjustment\n                        console.log(`Entry for ${label} in secondYearData:`, entry); // Debugging\n                        return entry ? entry.count : 0; // Default to 0 if no data found\n                    });\n\n                    // Log counts for verification\n                    console.log('First Year Counts:', firstYearCounts);\n                    console.log('Second Year Counts:', secondYearCounts);\n\n                    const chartData = {\n                        labels,\n                        datasets: [{\n                                label: `Data for ${firstYearRange.join(', ')}`,\n                                data: firstYearCounts,\n                                backgroundColor: 'rgba(75, 192, 192, 0.6)',\n                            },\n                            {\n                                label: `Data for ${secondYearRange.join(', ')}`,\n                                data: secondYearCounts,\n                                backgroundColor: 'rgba(153, 102, 255, 0.6)',\n                            },\n                        ],\n                    };\n\n                    setData(chartData); // Update the chart with the fetched data\n                } else {\n                    console.error('No data returned from API.');\n                }\n            } catch (error) {\n                console.error('Error comparing year ranges:', error);\n            }\n        } else {\n            console.log('Please select both years.');\n        }\n    };\n\n    return ( <\n        div className = \"more-data-page\" >\n        <\n        h2 > Compare Placement Statistics < /h2> <\n        div className = \"selectors\" >\n        <\n        div className = \"dropdowns\" >\n        <\n        select value = { firstYear }\n        onChange = {\n            (e) => setFirstYear(e.target.value) } >\n        <\n        option value = \"\" > Select Year\n        for First Range < /option> {\n            years.length > 0 ? (\n                years.map((year) => ( <\n                    option key = { year }\n                    value = { year } > { year } < /option>\n                ))\n            ) : ( <\n                option value = \"\" > No Years Available < /option>\n            )\n        } <\n        /select>\n\n        <\n        select value = { secondYear }\n        onChange = {\n            (e) => setSecondYear(e.target.value) } >\n        <\n        option value = \"\" > Select Year\n        for Second Range < /option> {\n            years.length > 0 ? (\n                years.map((year) => ( <\n                    option key = { year }\n                    value = { year } > { year } < /option>\n                ))\n            ) : ( <\n                option value = \"\" > No Years Available < /option>\n            )\n        } <\n        /select> <\n        /div>\n\n        <\n        div className = \"button-container\" >\n        <\n        button onClick = { handleCompare }\n        className = \"submit-btn\" > Submit < /button> <\n        /div> <\n        /div>\n\n        {\n            data && ( <\n                div className = \"results\" >\n                <\n                Bar data = { data }\n                options = {\n                    {\n                        responsive: true,\n                        scales: {\n                            y: {\n                                beginAtZero: true,\n                                title: {\n                                    display: true,\n                                    text: 'Counts',\n                                },\n                            },\n                            x: {\n                                title: {\n                                    display: true,\n                                    text: 'Application Status',\n                                },\n                            },\n                        },\n                    }\n                }\n                /> <\n                /div>\n            )\n        } <\n        /div>\n    );\n};\n\nexport default MoreData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}