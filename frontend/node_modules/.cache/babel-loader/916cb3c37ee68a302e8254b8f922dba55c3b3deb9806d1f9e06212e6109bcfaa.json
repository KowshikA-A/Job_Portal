{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/CompanyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './CompanyList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CompanyList({\n  year\n}) {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_URL}/api/companies?year=${year}`);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Fetched companies:', data); // Debugging output\n        setCompanies(data);\n      } catch (error) {\n        console.error('Error fetching company data:', error); // Debugging output\n        setError('Error fetching company data. Please try again later.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCompanies();\n  }, [year]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Error: \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"company-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Companies Visited \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"company-list-items\",\n      children: [\" \", companies.length > 0 ? companies.map((company, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"company-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", company.name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Total Students Placed: \", company.placedCount, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 50\n        }, this), \" \"]\n      }, company.name + index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 53\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No companies found \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 39\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 14\n  }, this);\n}\n_s(CompanyList, \"yiHW6JhPhXEO1IWZQ8B6P5YKOfQ=\");\n_c = CompanyList;\nexport default CompanyList;\nvar _c;\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CompanyList","year","_s","companies","setCompanies","loading","setLoading","error","setError","fetchCompanies","response","fetch","process","env","REACT_APP_API_URL","ok","Error","data","json","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","company","index","name","placedCount","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/CompanyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './CompanyList.css';\n\nfunction CompanyList({ year }) {\n    const [companies, setCompanies] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        const fetchCompanies = async() => {\n            setLoading(true);\n            setError(null);\n\n            try {\n                const response = await fetch(`${process.env.REACT_APP_API_URL}/api/companies?year=${year}`);\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                const data = await response.json();\n                console.log('Fetched companies:', data); // Debugging output\n                setCompanies(data);\n            } catch (error) {\n                console.error('Error fetching company data:', error); // Debugging output\n                setError('Error fetching company data. Please try again later.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        fetchCompanies();\n    }, [year]);\n\n    if (loading) {\n        return <p > Loading... < /p>;\n    }\n\n    if (error) {\n        return <p > Error: { error } < /p>;\n    }\n\n    return ( <\n        div className = \"company-list\" >\n        <\n        h2 > Companies Visited < /h2> <\n        div className = \"company-list-items\" > {\n            companies.length > 0 ? (\n                companies.map((company, index) => ( <\n                    div key = { company.name + index }\n                    className = \"company-card\" >\n                    <\n                    h3 > { company.name } < /h3> <\n                    p > Total Students Placed: { company.placedCount } < /p> <\n                    /div>\n                ))\n            ) : ( <\n                p > No companies found < /p>\n            )\n        } <\n        /div> <\n        /div>\n    );\n}\n\nexport default CompanyList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}