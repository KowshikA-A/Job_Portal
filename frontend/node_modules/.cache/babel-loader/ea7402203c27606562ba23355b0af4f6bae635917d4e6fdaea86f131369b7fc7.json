{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/MoreData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport './MoreData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoreData = () => {\n  _s();\n  const [years, setYears] = useState([]);\n  const [firstYear, setFirstYear] = useState('');\n  const [secondYear, setSecondYear] = useState('');\n  const [data, setData] = useState(null);\n\n  // Fetch unique years from the backend\n  useEffect(() => {\n    const fetchUniqueYears = async () => {\n      try {\n        const response = await axios.get('http://localhost:1000/api/suggest-years');\n        setYears(response.data.years); // Assuming the API response has a `years` array\n      } catch (error) {\n        console.error('Error fetching years:', error);\n      }\n    };\n    fetchUniqueYears();\n  }, []);\n\n  // Function to generate a range of next 5 years starting from the selected year\n  const generateYearRange = startYear => {\n    const start = parseInt(startYear, 10);\n    return Array.from({\n      length: 5\n    }, (v, i) => start + i);\n  };\n\n  // Function to handle the compare logic, fetch data, and set the bar chart data\n  const handleCompare = async () => {\n    if (firstYear && secondYear) {\n      const firstYearRange = generateYearRange(firstYear);\n      const secondYearRange = generateYearRange(secondYear);\n      try {\n        const response = await axios.post('http://localhost:1000/api/compare-years', {\n          firstYearRange,\n          secondYearRange\n        });\n        const {\n          firstYearData,\n          secondYearData\n        } = response.data;\n\n        // Prepare data for the grouped bar chart\n        const chartData = {\n          labels: response.data.companies,\n          // Assuming the API returns company names\n          datasets: [{\n            label: `Data for ${firstYearRange.join(', ')}`,\n            data: firstYearData,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)'\n          }, {\n            label: `Data for ${secondYearRange.join(', ')}`,\n            data: secondYearData,\n            backgroundColor: 'rgba(153, 102, 255, 0.6)'\n          }]\n        };\n        setData(chartData); // Update the chart with the fetched data\n      } catch (error) {\n        console.error('Error comparing year ranges:', error);\n      }\n    } else {\n      console.log('Please select both years.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"more-data-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Compare Placement Statistics \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: firstYear,\n          onChange: e => setFirstYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Select Starting Year for First Range \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 9\n          }, this), \" \", years.length > 0 ? years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [\" \", year, \" \"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 39\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" No Years Available \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 19\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: secondYear,\n          onChange: e => setSecondYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Select Starting Year for Second Range \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 9\n          }, this), \" \", years.length > 0 ? years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [\" \", year, \" \"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 39\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" No Years Available \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCompare,\n          className: \"submit-btn\",\n          children: \"Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 50\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: {\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 23\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 14\n  }, this);\n};\n_s(MoreData, \"iD9GM8VgJPFHxN4NR+R7LvyZZAQ=\");\n_c = MoreData;\nexport default MoreData;\nvar _c;\n$RefreshReg$(_c, \"MoreData\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","MoreData","_s","years","setYears","firstYear","setFirstYear","secondYear","setSecondYear","data","setData","fetchUniqueYears","response","get","error","console","generateYearRange","startYear","start","parseInt","Array","from","length","v","i","handleCompare","firstYearRange","secondYearRange","post","firstYearData","secondYearData","chartData","labels","companies","datasets","label","join","backgroundColor","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","year","onClick","options","responsive","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/MoreData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport './MoreData.css';\n\nconst MoreData = () => {\n    const [years, setYears] = useState([]);\n    const [firstYear, setFirstYear] = useState('');\n    const [secondYear, setSecondYear] = useState('');\n    const [data, setData] = useState(null);\n\n    // Fetch unique years from the backend\n    useEffect(() => {\n        const fetchUniqueYears = async() => {\n            try {\n                const response = await axios.get('http://localhost:1000/api/suggest-years');\n                setYears(response.data.years); // Assuming the API response has a `years` array\n            } catch (error) {\n                console.error('Error fetching years:', error);\n            }\n        };\n\n        fetchUniqueYears();\n    }, []);\n\n    // Function to generate a range of next 5 years starting from the selected year\n    const generateYearRange = (startYear) => {\n        const start = parseInt(startYear, 10);\n        return Array.from({ length: 5 }, (v, i) => start + i);\n    };\n\n    // Function to handle the compare logic, fetch data, and set the bar chart data\n    const handleCompare = async() => {\n        if (firstYear && secondYear) {\n            const firstYearRange = generateYearRange(firstYear);\n            const secondYearRange = generateYearRange(secondYear);\n\n            try {\n                const response = await axios.post('http://localhost:1000/api/compare-years', {\n                    firstYearRange,\n                    secondYearRange\n                });\n\n                const { firstYearData, secondYearData } = response.data;\n\n                // Prepare data for the grouped bar chart\n                const chartData = {\n                    labels: response.data.companies, // Assuming the API returns company names\n                    datasets: [{\n                            label: `Data for ${firstYearRange.join(', ')}`,\n                            data: firstYearData,\n                            backgroundColor: 'rgba(75, 192, 192, 0.6)'\n                        },\n                        {\n                            label: `Data for ${secondYearRange.join(', ')}`,\n                            data: secondYearData,\n                            backgroundColor: 'rgba(153, 102, 255, 0.6)'\n                        }\n                    ]\n                };\n\n                setData(chartData); // Update the chart with the fetched data\n            } catch (error) {\n                console.error('Error comparing year ranges:', error);\n            }\n        } else {\n            console.log('Please select both years.');\n        }\n    };\n\n    return ( <\n        div className = \"more-data-page\" >\n        <\n        h2 > Compare Placement Statistics < /h2> <\n        div className = \"selectors\" >\n        <\n        div className = \"dropdown\" >\n        <\n        select value = { firstYear }\n        onChange = {\n            (e) => setFirstYear(e.target.value) } >\n        <\n        option value = \"\" > Select Starting Year\n        for First Range < /option> {\n            years.length > 0 ? (\n                years.map((year) => ( <\n                    option key = { year }\n                    value = { year } > { year } <\n                    /option>\n                ))\n            ) : ( <\n                option value = \"\" > No Years Available < /option>\n            )\n        } <\n        /select> <\n        /div>\n\n        <\n        div className = \"dropdown\" >\n        <\n        select value = { secondYear }\n        onChange = {\n            (e) => setSecondYear(e.target.value) } >\n        <\n        option value = \"\" > Select Starting Year\n        for Second Range < /option> {\n            years.length > 0 ? (\n                years.map((year) => ( <\n                    option key = { year }\n                    value = { year } > { year } <\n                    /option>\n                ))\n            ) : ( <\n                option value = \"\" > No Years Available < /option>\n            )\n        } <\n        /select> <\n        /div>\n\n        <\n        div className = \"button-container\" >\n        <\n        button onClick = { handleCompare }\n        className = \"submit-btn\" >\n        Submit <\n        /button> <\n        /div> <\n        /div>\n\n        {\n            data && ( <\n                div className = \"results\" >\n                <\n                Bar data = { data }\n                options = {\n                    { responsive: true } }\n                /> <\n                /div>\n            )\n        } <\n        /div>\n    );\n};\n\nexport default MoreData;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAW;MAChC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,yCAAyC,CAAC;QAC3ET,QAAQ,CAACQ,QAAQ,CAACH,IAAI,CAACN,KAAK,CAAC,CAAC,CAAC;MACnC,CAAC,CAAC,OAAOW,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MACjD;IACJ,CAAC;IAEDH,gBAAgB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,iBAAiB,GAAIC,SAAS,IAAK;IACrC,MAAMC,KAAK,GAAGC,QAAQ,CAACF,SAAS,EAAE,EAAE,CAAC;IACrC,OAAOG,KAAK,CAACC,IAAI,CAAC;MAAEC,MAAM,EAAE;IAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAKN,KAAK,GAAGM,CAAC,CAAC;EACzD,CAAC;;EAED;EACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAW;IAC7B,IAAIpB,SAAS,IAAIE,UAAU,EAAE;MACzB,MAAMmB,cAAc,GAAGV,iBAAiB,CAACX,SAAS,CAAC;MACnD,MAAMsB,eAAe,GAAGX,iBAAiB,CAACT,UAAU,CAAC;MAErD,IAAI;QACA,MAAMK,QAAQ,GAAG,MAAMf,KAAK,CAAC+B,IAAI,CAAC,yCAAyC,EAAE;UACzEF,cAAc;UACdC;QACJ,CAAC,CAAC;QAEF,MAAM;UAAEE,aAAa;UAAEC;QAAe,CAAC,GAAGlB,QAAQ,CAACH,IAAI;;QAEvD;QACA,MAAMsB,SAAS,GAAG;UACdC,MAAM,EAAEpB,QAAQ,CAACH,IAAI,CAACwB,SAAS;UAAE;UACjCC,QAAQ,EAAE,CAAC;YACHC,KAAK,EAAE,YAAYT,cAAc,CAACU,IAAI,CAAC,IAAI,CAAC,EAAE;YAC9C3B,IAAI,EAAEoB,aAAa;YACnBQ,eAAe,EAAE;UACrB,CAAC,EACD;YACIF,KAAK,EAAE,YAAYR,eAAe,CAACS,IAAI,CAAC,IAAI,CAAC,EAAE;YAC/C3B,IAAI,EAAEqB,cAAc;YACpBO,eAAe,EAAE;UACrB,CAAC;QAET,CAAC;QAED3B,OAAO,CAACqB,SAAS,CAAC,CAAC,CAAC;MACxB,CAAC,CAAC,OAAOjB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACxD;IACJ,CAAC,MAAM;MACHC,OAAO,CAACuB,GAAG,CAAC,2BAA2B,CAAC;IAC5C;EACJ,CAAC;EAED,oBAAStC,OAAA;IACDuC,SAAS,EAAG,gBAAgB;IAAAC,QAAA,gBAChCxC,OAAA;MAAAwC,QAAA,EACI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAAA5C,OAAA;MACrCuC,SAAS,EAAG,WAAW;MAAAC,QAAA,gBAC3BxC,OAAA;QACIuC,SAAS,EAAG,UAAU;QAAAC,QAAA,gBAC1BxC,OAAA;UACO6C,KAAK,EAAKxC,SAAW;UAC5ByC,QAAQ,EACHC,CAAC,IAAKzC,YAAY,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAG;UAAAL,QAAA,gBACzCxC,OAAA;YACO6C,KAAK,EAAG,EAAE;YAAAL,QAAA,EAAE;UACH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,KAAC,EACvBzC,KAAK,CAACmB,MAAM,GAAG,CAAC,GACZnB,KAAK,CAAC8C,GAAG,CAAEC,IAAI,iBAAOlD,OAAA;YAElB6C,KAAK,EAAKK,IAAM;YAAAV,QAAA,GAAE,GAAC,EAAEU,IAAI,EAAE,GAAC;UAAA,GADbA,IAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACV,CAAC,gBACA5C,OAAA;YACK6C,KAAK,EAAG,EAAE;YAAAL,QAAA,EAAE;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CACnD,EACJ,GAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEL5C,OAAA;QACIuC,SAAS,EAAG,UAAU;QAAAC,QAAA,gBAC1BxC,OAAA;UACO6C,KAAK,EAAKtC,UAAY;UAC7BuC,QAAQ,EACHC,CAAC,IAAKvC,aAAa,CAACuC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAG;UAAAL,QAAA,gBAC1CxC,OAAA;YACO6C,KAAK,EAAG,EAAE;YAAAL,QAAA,EAAE;UACF;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,KAAC,EACxBzC,KAAK,CAACmB,MAAM,GAAG,CAAC,GACZnB,KAAK,CAAC8C,GAAG,CAAEC,IAAI,iBAAOlD,OAAA;YAElB6C,KAAK,EAAKK,IAAM;YAAAV,QAAA,GAAE,GAAC,EAAEU,IAAI,EAAE,GAAC;UAAA,GADbA,IAAI;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACV,CAAC,gBACA5C,OAAA;YACK6C,KAAK,EAAG,EAAE;YAAAL,QAAA,EAAE;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CACnD,EACJ,GAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAEL5C,OAAA;QACIuC,SAAS,EAAG,kBAAkB;QAAAC,QAAA,gBAClCxC,OAAA;UACOmD,OAAO,EAAK1B,aAAe;UAClCc,SAAS,EAAG,YAAY;UAAAC,QAAA,EAAE;QACnB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,KAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,EAGDnC,IAAI,iBAAMT,OAAA;MACFuC,SAAS,EAAG,SAAS;MAAAC,QAAA,gBACzBxC,OAAA,CACAF,GAAG;QAACW,IAAI,EAAKA,IAAM;QACnB2C,OAAO,EACH;UAAEC,UAAU,EAAE;QAAK;MAAG;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACP,EACJ,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEb,CAAC;AAAC1C,EAAA,CAzIID,QAAQ;AAAAqD,EAAA,GAARrD,QAAQ;AA2Id,eAAeA,QAAQ;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}