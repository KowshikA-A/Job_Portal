{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './Monitoring.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Monitoring() {\n  _s();\n  const [numYears, setNumYears] = useState(2);\n  const [selectedYears, setSelectedYears] = useState([]);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState('');\n  const [placementData, setPlacementData] = useState([]);\n\n  // Fetch company list from the database based on the selected years\n  useEffect(() => {\n    const fetchCompanies = async () => {\n      try {\n        const response = await axios.get('/api/company'); // Updated API endpoint\n        if (Array.isArray(response.data)) {\n          setCompanyList(response.data);\n        } else {\n          console.error('Invalid company data structure:', response.data);\n        }\n      } catch (error) {\n        console.error('Error fetching companies:', error);\n      }\n    };\n    fetchCompanies();\n  }, []);\n  const handleNumYearsChange = e => {\n    const num = Number(e.target.value);\n    if (num >= 2 && num <= 20) {\n      setNumYears(num);\n      setSelectedYears(new Array(num).fill(''));\n    } else {\n      alert(\"Please select a number of years between 2 and 20.\");\n    }\n  };\n\n  // Ensure same years can't be selected multiple times\n  const handleYearChange = (index, e) => {\n    const newYear = e.target.value;\n    if (selectedYears.includes(newYear)) {\n      alert('Year already selected! Please select a different year.');\n      return;\n    }\n    const newSelectedYears = [...selectedYears];\n    newSelectedYears[index] = newYear;\n    setSelectedYears(newSelectedYears);\n  };\n  const handleCompanyChange = e => {\n    setSelectedCompany(e.target.value);\n  };\n\n  // Fetch the placement data based on selected years and company\n  const fetchPlacementData = async () => {\n    const payload = {\n      years: selectedYears,\n      company: selectedCompany || null\n    };\n    try {\n      const response = await axios.post('/api/placement', payload); // Assuming /api/placement endpoint for placement data\n      if (Array.isArray(response.data)) {\n        // Ensure the response contains year, ApplicationStatus, and count, and remove duplicates\n        const uniqueData = response.data.filter((item, index, self) => index === self.findIndex(t => t.ApplicationStatus === item.ApplicationStatus));\n        setPlacementData(uniqueData);\n      } else {\n        console.error('Invalid placement data structure:', response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching placement data:', error);\n    }\n  };\n\n  // Prepare data for the bar chart\n  const chartData = {\n    labels: [...new Set(placementData.map(item => item.ApplicationStatus))],\n    // Remove duplicate labels\n    datasets: selectedYears.map((year, index) => {\n      const yearData = placementData.filter(item => item.year === year);\n      return {\n        label: `${year} Placements`,\n        data: yearData.map(item => item.count),\n        backgroundColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 0.6)`,\n        borderColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 1)`,\n        borderWidth: 1\n      };\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monitoring-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Monitoring Placements \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numYears\",\n      children: \" Select number of years to compare(min 2, max 20): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 43\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"numYears\",\n      type: \"number\",\n      value: numYears,\n      onChange: handleNumYearsChange,\n      min: \"2\",\n      max: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 98\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-selection-container\",\n      children: [\" \", Array.from({\n        length: numYears\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `year${index}`,\n          children: [\" Year \", index + 1, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: `year${index}`,\n          value: selectedYears[index] || '',\n          onChange: e => handleYearChange(index, e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Select Year \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), \" \", Array.from({\n            length: 20\n          }, (_, i) => 2025 - i).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [\" \", year, \" \"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 84\n          }, this)), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 84\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 66\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"company\",\n      children: \" Select Company(Optional): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"company\",\n      value: selectedCompany,\n      onChange: handleCompanyChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" All Companies \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), \" \", companyList.length > 0 ? companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: company.name,\n        children: [\" \", company.name, \" \"]\n      }, company._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 48\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" No Companies Available \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 73\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"onee\",\n      onClick: fetchPlacementData,\n      children: \"Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 18\n    }, this), \" \", placementData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-chart\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 43\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 14\n  }, this);\n}\n_s(Monitoring, \"DCIJ1D09J/xRPoYSnfvkgzG0mnk=\");\n_c = Monitoring;\nexport default Monitoring;\nvar _c;\n$RefreshReg$(_c, \"Monitoring\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","Monitoring","_s","numYears","setNumYears","selectedYears","setSelectedYears","companyList","setCompanyList","selectedCompany","setSelectedCompany","placementData","setPlacementData","fetchCompanies","response","get","Array","isArray","data","console","error","handleNumYearsChange","e","num","Number","target","value","fill","alert","handleYearChange","index","newYear","includes","newSelectedYears","handleCompanyChange","fetchPlacementData","payload","years","company","post","uniqueData","filter","item","self","findIndex","t","ApplicationStatus","chartData","labels","Set","map","datasets","year","yearData","label","count","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","min","max","from","length","_","i","name","_id","onClick","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './Monitoring.css';\n\nfunction Monitoring() {\n    const [numYears, setNumYears] = useState(2);\n    const [selectedYears, setSelectedYears] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [selectedCompany, setSelectedCompany] = useState('');\n    const [placementData, setPlacementData] = useState([]);\n\n    // Fetch company list from the database based on the selected years\n    useEffect(() => {\n        const fetchCompanies = async() => {\n            try {\n                const response = await axios.get('/api/company'); // Updated API endpoint\n                if (Array.isArray(response.data)) {\n                    setCompanyList(response.data);\n                } else {\n                    console.error('Invalid company data structure:', response.data);\n                }\n            } catch (error) {\n                console.error('Error fetching companies:', error);\n            }\n        };\n\n        fetchCompanies();\n    }, []);\n\n    const handleNumYearsChange = (e) => {\n        const num = Number(e.target.value);\n        if (num >= 2 && num <= 20) {\n            setNumYears(num);\n            setSelectedYears(new Array(num).fill(''));\n        } else {\n            alert(\"Please select a number of years between 2 and 20.\");\n        }\n    };\n\n    // Ensure same years can't be selected multiple times\n    const handleYearChange = (index, e) => {\n        const newYear = e.target.value;\n        if (selectedYears.includes(newYear)) {\n            alert('Year already selected! Please select a different year.');\n            return;\n        }\n        const newSelectedYears = [...selectedYears];\n        newSelectedYears[index] = newYear;\n        setSelectedYears(newSelectedYears);\n    };\n\n    const handleCompanyChange = (e) => {\n        setSelectedCompany(e.target.value);\n    };\n\n    // Fetch the placement data based on selected years and company\n    const fetchPlacementData = async() => {\n        const payload = {\n            years: selectedYears,\n            company: selectedCompany || null,\n        };\n\n        try {\n            const response = await axios.post('/api/placement', payload); // Assuming /api/placement endpoint for placement data\n            if (Array.isArray(response.data)) {\n                // Ensure the response contains year, ApplicationStatus, and count, and remove duplicates\n                const uniqueData = response.data.filter(\n                    (item, index, self) =>\n                    index === self.findIndex((t) => t.ApplicationStatus === item.ApplicationStatus)\n                );\n                setPlacementData(uniqueData);\n            } else {\n                console.error('Invalid placement data structure:', response.data);\n            }\n        } catch (error) {\n            console.error('Error fetching placement data:', error);\n        }\n    };\n\n    // Prepare data for the bar chart\n    const chartData = {\n        labels: [...new Set(placementData.map(item => item.ApplicationStatus))], // Remove duplicate labels\n        datasets: selectedYears.map((year, index) => {\n            const yearData = placementData.filter(item => item.year === year);\n            return {\n                label: `${year} Placements`,\n                data: yearData.map(item => item.count),\n                backgroundColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 0.6)`,\n                borderColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 1)`,\n                borderWidth: 1,\n            };\n        }),\n    };\n\n    return ( <\n        div className = \"monitoring-container\" >\n        <\n        h2 > Monitoring Placements < /h2> <\n        label htmlFor = \"numYears\" > Select number of years to compare(min 2, max 20): < /label> <\n        input id = \"numYears\"\n        type = \"number\"\n        value = { numYears }\n        onChange = { handleNumYearsChange }\n        min = \"2\"\n        max = \"20\" /\n        >\n        <\n        div className = \"year-selection-container\" > {\n            Array.from({ length: numYears }).map((_, index) => ( <\n                div key = { index }\n                className = \"year-dropdown\" >\n                <\n                label htmlFor = { `year${index}` } > Year { index + 1 }: < /label> <\n                select id = { `year${index}` }\n                value = { selectedYears[index] || '' }\n                onChange = {\n                    (e) => handleYearChange(index, e) } >\n                <\n                option value = \"\" > Select Year < /option> {\n                    Array.from({ length: 20 }, (_, i) => 2025 - i).map((year) => ( <\n                        option key = { year }\n                        value = { year } > { year } <\n                        /option>\n                    ))\n                } <\n                /select> <\n                /div>\n            ))\n        } <\n        /div> <\n        label htmlFor = \"company\" > Select Company(Optional): < /label> <\n        select id = \"company\"\n        value = { selectedCompany }\n        onChange = { handleCompanyChange } >\n        <\n        option value = \"\" > All Companies < /option> {\n            companyList.length > 0 ? (\n                companyList.map((company) => ( <\n                    option key = { company._id }\n                    value = { company.name } > { company.name } <\n                    /option>\n                ))\n            ) : ( <\n                option value = \"\" > No Companies Available < /option>\n            )\n        } <\n        /select> <\n        button className = \"onee\"\n        onClick = { fetchPlacementData } >\n        Submit <\n        /button> {\n            placementData.length > 0 && ( <\n                div className = \"monitoring-chart\" >\n                <\n                Bar data = { chartData }\n                /> <\n                /div>\n            )\n        } <\n        /div>\n    );\n}\n\nexport default Monitoring;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAO,eAAe;AACtB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAW;MAC9B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QAClD,IAAIC,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAE;UAC9BV,cAAc,CAACM,QAAQ,CAACI,IAAI,CAAC;QACjC,CAAC,MAAM;UACHC,OAAO,CAACC,KAAK,CAAC,iCAAiC,EAAEN,QAAQ,CAACI,IAAI,CAAC;QACnE;MACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IAEDP,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMQ,oBAAoB,GAAIC,CAAC,IAAK;IAChC,MAAMC,GAAG,GAAGC,MAAM,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;IAClC,IAAIH,GAAG,IAAI,CAAC,IAAIA,GAAG,IAAI,EAAE,EAAE;MACvBnB,WAAW,CAACmB,GAAG,CAAC;MAChBjB,gBAAgB,CAAC,IAAIU,KAAK,CAACO,GAAG,CAAC,CAACI,IAAI,CAAC,EAAE,CAAC,CAAC;IAC7C,CAAC,MAAM;MACHC,KAAK,CAAC,mDAAmD,CAAC;IAC9D;EACJ,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAER,CAAC,KAAK;IACnC,MAAMS,OAAO,GAAGT,CAAC,CAACG,MAAM,CAACC,KAAK;IAC9B,IAAIrB,aAAa,CAAC2B,QAAQ,CAACD,OAAO,CAAC,EAAE;MACjCH,KAAK,CAAC,wDAAwD,CAAC;MAC/D;IACJ;IACA,MAAMK,gBAAgB,GAAG,CAAC,GAAG5B,aAAa,CAAC;IAC3C4B,gBAAgB,CAACH,KAAK,CAAC,GAAGC,OAAO;IACjCzB,gBAAgB,CAAC2B,gBAAgB,CAAC;EACtC,CAAC;EAED,MAAMC,mBAAmB,GAAIZ,CAAC,IAAK;IAC/BZ,kBAAkB,CAACY,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;;EAED;EACA,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAW;IAClC,MAAMC,OAAO,GAAG;MACZC,KAAK,EAAEhC,aAAa;MACpBiC,OAAO,EAAE7B,eAAe,IAAI;IAChC,CAAC;IAED,IAAI;MACA,MAAMK,QAAQ,GAAG,MAAMjB,KAAK,CAAC0C,IAAI,CAAC,gBAAgB,EAAEH,OAAO,CAAC,CAAC,CAAC;MAC9D,IAAIpB,KAAK,CAACC,OAAO,CAACH,QAAQ,CAACI,IAAI,CAAC,EAAE;QAC9B;QACA,MAAMsB,UAAU,GAAG1B,QAAQ,CAACI,IAAI,CAACuB,MAAM,CACnC,CAACC,IAAI,EAAEZ,KAAK,EAAEa,IAAI,KAClBb,KAAK,KAAKa,IAAI,CAACC,SAAS,CAAEC,CAAC,IAAKA,CAAC,CAACC,iBAAiB,KAAKJ,IAAI,CAACI,iBAAiB,CAClF,CAAC;QACDlC,gBAAgB,CAAC4B,UAAU,CAAC;MAChC,CAAC,MAAM;QACHrB,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEN,QAAQ,CAACI,IAAI,CAAC;MACrE;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;IAC1D;EACJ,CAAC;;EAED;EACA,MAAM2B,SAAS,GAAG;IACdC,MAAM,EAAE,CAAC,GAAG,IAAIC,GAAG,CAACtC,aAAa,CAACuC,GAAG,CAACR,IAAI,IAAIA,IAAI,CAACI,iBAAiB,CAAC,CAAC,CAAC;IAAE;IACzEK,QAAQ,EAAE9C,aAAa,CAAC6C,GAAG,CAAC,CAACE,IAAI,EAAEtB,KAAK,KAAK;MACzC,MAAMuB,QAAQ,GAAG1C,aAAa,CAAC8B,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACU,IAAI,KAAKA,IAAI,CAAC;MACjE,OAAO;QACHE,KAAK,EAAE,GAAGF,IAAI,aAAa;QAC3BlC,IAAI,EAAEmC,QAAQ,CAACH,GAAG,CAACR,IAAI,IAAIA,IAAI,CAACa,KAAK,CAAC;QACtCC,eAAe,EAAE,QAAQ,CAAC1B,KAAK,GAAG,CAAC,IAAI,EAAE,KAAK,CAACA,KAAK,GAAG,CAAC,IAAI,GAAG,KAAK,CAACA,KAAK,GAAG,CAAC,IAAI,GAAG,QAAQ;QAC7F2B,WAAW,EAAE,QAAQ,CAAC3B,KAAK,GAAG,CAAC,IAAI,EAAE,KAAK,CAACA,KAAK,GAAG,CAAC,IAAI,GAAG,KAAK,CAACA,KAAK,GAAG,CAAC,IAAI,GAAG,MAAM;QACvF4B,WAAW,EAAE;MACjB,CAAC;IACL,CAAC;EACL,CAAC;EAED,oBAAS1D,OAAA;IACD2D,SAAS,EAAG,sBAAsB;IAAAC,QAAA,gBACtC5D,OAAA;MAAA4D,QAAA,EACI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAAAhE,OAAA;MAC5BiE,OAAO,EAAG,UAAU;MAAAL,QAAA,EAAE;IAAmD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,eAAAhE,OAAA;MACnFkE,EAAE,EAAG,UAAU;MACrBC,IAAI,EAAG,QAAQ;MACfzC,KAAK,EAAKvB,QAAU;MACpBiE,QAAQ,EAAK/C,oBAAsB;MACnCgD,GAAG,EAAG,GAAG;MACTC,GAAG,EAAG;IAAI;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACDhE,OAAA;MACI2D,SAAS,EAAG,0BAA0B;MAAAC,QAAA,GAAE,GAAC,EACzC5C,KAAK,CAACuD,IAAI,CAAC;QAAEC,MAAM,EAAErE;MAAS,CAAC,CAAC,CAAC+C,GAAG,CAAC,CAACuB,CAAC,EAAE3C,KAAK,kBAAO9B,OAAA;QAEjD2D,SAAS,EAAG,eAAe;QAAAC,QAAA,gBAC3B5D,OAAA;UACMiE,OAAO,EAAK,OAAOnC,KAAK,EAAI;UAAA8B,QAAA,GAAE,QAAM,EAAE9B,KAAK,GAAG,CAAC,EAAE,IAAE;QAAA;UAAA+B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,eAAAhE,OAAA;UAC5DkE,EAAE,EAAK,OAAOpC,KAAK,EAAI;UAC9BJ,KAAK,EAAKrB,aAAa,CAACyB,KAAK,CAAC,IAAI,EAAI;UACtCsC,QAAQ,EACH9C,CAAC,IAAKO,gBAAgB,CAACC,KAAK,EAAER,CAAC,CAAG;UAAAsC,QAAA,gBACvC5D,OAAA;YACO0B,KAAK,EAAG,EAAE;YAAAkC,QAAA,EAAE;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAS,CAAC,KAAC,EACvChD,KAAK,CAACuD,IAAI,CAAC;YAAEC,MAAM,EAAE;UAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,IAAI,GAAGA,CAAC,CAAC,CAACxB,GAAG,CAAEE,IAAI,iBAAOpD,OAAA;YAE3D0B,KAAK,EAAK0B,IAAM;YAAAQ,QAAA,GAAE,GAAC,EAAER,IAAI,EAAE,GAAC;UAAA,GADbA,IAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACV,CAAC,EACL,GAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACK,CAAC,KAAC;MAAA,GAhBGlC,KAAK;QAAA+B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAiBb,CACP,CAAC,EACL,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,KAAC,eAAAhE,OAAA;MACAiE,OAAO,EAAG,SAAS;MAAAL,QAAA,EAAE;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,KAAC,eAAAhE,OAAA;MACzDkE,EAAE,EAAG,SAAS;MACrBxC,KAAK,EAAKjB,eAAiB;MAC3B2D,QAAQ,EAAKlC,mBAAqB;MAAA0B,QAAA,gBAClC5D,OAAA;QACO0B,KAAK,EAAG,EAAE;QAAAkC,QAAA,EAAE;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,KAAC,EACzCzD,WAAW,CAACiE,MAAM,GAAG,CAAC,GAClBjE,WAAW,CAAC2C,GAAG,CAAEZ,OAAO,iBAAOtC,OAAA;QAE3B0B,KAAK,EAAKY,OAAO,CAACqC,IAAM;QAAAf,QAAA,GAAE,GAAC,EAAEtB,OAAO,CAACqC,IAAI,EAAE,GAAC;MAAA,GAD7BrC,OAAO,CAACsC,GAAG;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEnB,CACV,CAAC,gBACAhE,OAAA;QACK0B,KAAK,EAAG,EAAE;QAAAkC,QAAA,EAAE;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CACvD,EACJ,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC,KAAC,eAAAhE,OAAA;MACF2D,SAAS,EAAG,MAAM;MACzBkB,OAAO,EAAK1C,kBAAoB;MAAAyB,QAAA,EAAE;IAC3B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,KAAC,EACLrD,aAAa,CAAC6D,MAAM,GAAG,CAAC,iBAAMxE,OAAA;MACtB2D,SAAS,EAAG,kBAAkB;MAAAC,QAAA,gBAClC5D,OAAA,CACAF,GAAG;QAACoB,IAAI,EAAK6B;MAAW;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,KAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACP,EACJ,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEb;AAAC9D,EAAA,CA7JQD,UAAU;AAAA6E,EAAA,GAAV7E,UAAU;AA+JnB,eAAeA,UAAU;AAAC,IAAA6E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}