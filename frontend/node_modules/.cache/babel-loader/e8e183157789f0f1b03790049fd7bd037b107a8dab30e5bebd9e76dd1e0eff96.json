{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/CTCChart.js\",\n  _s = $RefreshSig$();\n// src/components/CTCChart.js\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CTCChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    // Fetch data from the backend\n    axios.get('/api/students/ctc-by-school-year').then(response => {\n      const data = response.data;\n\n      // Get unique schools and years for dynamic labels and colors\n      const schools = [...new Set(data.map(item => item.school))];\n      const years = [...new Set(data.map(item => item.year))].sort();\n\n      // Create a color for each school\n      const colors = schools.map((_, index) => `hsl(${index * 360 / schools.length}, 70%, 50%)`);\n\n      // Organize data by year and school\n      const datasets = schools.map((school, index) => {\n        const schoolData = years.map(year => {\n          const item = data.find(d => d.school === school && d.year === year);\n          return item ? item.avgCTC : 0; // 0 if no data for that year-school combo\n        });\n        return {\n          label: school,\n          data: schoolData,\n          backgroundColor: colors[index],\n          borderColor: colors[index],\n          borderWidth: 1\n        };\n      });\n\n      // Update chart data\n      setChartData({\n        labels: years,\n        datasets\n      });\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Average CTC by School and Year \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), \" \", chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: {\n        scales: {\n          x: {\n            title: {\n              display: true,\n              text: 'Year'\n            }\n          },\n          y: {\n            beginAtZero: true,\n            title: {\n              display: true,\n              text: 'CTC in LPA'\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            position: 'top'\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading chart data... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 14\n  }, this);\n};\n_s(CTCChart, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = CTCChart;\nexport default CTCChart;\nvar _c;\n$RefreshReg$(_c, \"CTCChart\");","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","jsxDEV","_jsxDEV","CTCChart","_s","chartData","setChartData","get","then","response","data","schools","Set","map","item","school","years","year","sort","colors","_","index","length","datasets","schoolData","find","d","avgCTC","label","backgroundColor","borderColor","borderWidth","labels","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","options","scales","x","title","display","text","y","beginAtZero","plugins","legend","position","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/CTCChart.js"],"sourcesContent":["// src/components/CTCChart.js\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\n\nconst CTCChart = () => {\n    const [chartData, setChartData] = useState(null);\n\n    useEffect(() => {\n        // Fetch data from the backend\n        axios.get('/api/students/ctc-by-school-year')\n            .then(response => {\n                const data = response.data;\n\n                // Get unique schools and years for dynamic labels and colors\n                const schools = [...new Set(data.map(item => item.school))];\n                const years = [...new Set(data.map(item => item.year))].sort();\n\n                // Create a color for each school\n                const colors = schools.map((_, index) => `hsl(${(index * 360) / schools.length}, 70%, 50%)`);\n\n                // Organize data by year and school\n                const datasets = schools.map((school, index) => {\n                    const schoolData = years.map(year => {\n                        const item = data.find(d => d.school === school && d.year === year);\n                        return item ? item.avgCTC : 0; // 0 if no data for that year-school combo\n                    });\n\n                    return {\n                        label: school,\n                        data: schoolData,\n                        backgroundColor: colors[index],\n                        borderColor: colors[index],\n                        borderWidth: 1\n                    };\n                });\n\n                // Update chart data\n                setChartData({\n                    labels: years,\n                    datasets\n                });\n            })\n            .catch(error => console.error(\"Error fetching data:\", error));\n    }, []);\n\n    return ( <\n        div >\n        <\n        h2 > Average CTC by School and Year < /h2> {\n            chartData ? ( <\n                Bar data = { chartData }\n                options = {\n                    {\n                        scales: {\n                            x: {\n                                title: {\n                                    display: true,\n                                    text: 'Year'\n                                }\n                            },\n                            y: {\n                                beginAtZero: true,\n                                title: {\n                                    display: true,\n                                    text: 'CTC in LPA'\n                                }\n                            }\n                        },\n                        plugins: {\n                            legend: {\n                                position: 'top'\n                            }\n                        }\n                    }\n                }\n                />\n            ) : ( <\n                p > Loading chart data... < /p>\n            )\n        } <\n        /div>\n    );\n};\n\nexport default CTCChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}