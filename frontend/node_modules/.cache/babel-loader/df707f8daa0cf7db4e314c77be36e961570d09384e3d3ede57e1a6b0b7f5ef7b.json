{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList({\n  filter,\n  year,\n  searchTerm\n}) {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null); // New error state\n\n  useEffect(() => {\n    const loadStudents = async () => {\n      try {\n        setLoading(true); // Start loading before the request\n        const data = await fetchStudents(filter, year, searchTerm);\n        if (Array.isArray(data)) {\n          const groupedData = groupByRegNo(data);\n          setStudents(groupedData);\n        } else {\n          console.error('Fetched data is not an array:', data);\n          setError('Unexpected data format from server.');\n        }\n      } catch (error) {\n        console.error('Error loading students:', error);\n        setError('Failed to load student data.');\n      } finally {\n        setLoading(false); // Stop loading after the request is done\n      }\n    };\n    loadStudents();\n  }, [filter, year, searchTerm]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: '20px',\n        fontSize: '30px'\n      },\n      children: \" Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-cards-container\",\n      children: [\" \", students.length > 0 ? students.map(student => /*#__PURE__*/_jsxDEV(StudentCard, {\n        student: student\n      }, student.Reg_No, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 43\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No students found matching this criteria. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 29\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"xQFly/JqNiL5t+0iR4wJF+/IEY0=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","StudentCard","fetchStudents","groupByRegNo","jsxDEV","_jsxDEV","StudentList","filter","year","searchTerm","_s","students","setStudents","loading","setLoading","error","setError","loadStudents","data","Array","isArray","groupedData","console","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginLeft","fontSize","length","map","student","Reg_No","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\n\nfunction StudentList({ filter, year, searchTerm }) {\n    const [students, setStudents] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null); // New error state\n\n    useEffect(() => {\n        const loadStudents = async() => {\n            try {\n                setLoading(true); // Start loading before the request\n                const data = await fetchStudents(filter, year, searchTerm);\n\n                if (Array.isArray(data)) {\n                    const groupedData = groupByRegNo(data);\n                    setStudents(groupedData);\n                } else {\n                    console.error('Fetched data is not an array:', data);\n                    setError('Unexpected data format from server.');\n                }\n            } catch (error) {\n                console.error('Error loading students:', error);\n                setError('Failed to load student data.');\n            } finally {\n                setLoading(false); // Stop loading after the request is done\n            }\n        };\n\n        loadStudents();\n    }, [filter, year, searchTerm]);\n\n    if (loading) {\n        return <p > Loading... < /p>; \n    }\n\n    if (error) {\n        return <p className = \"error-message\" > { error } < /p>; \n    }\n\n    return ( <\n        div className = \"student-list\" >\n        <\n        h2 style = {\n            { marginLeft: '20px', fontSize: '30px' }\n        } > Students < /h2> <\n        div className = \"student-cards-container\" > {\n            students.length > 0 ? (\n                students.map(student => ( <\n                    StudentCard key = { student.Reg_No }\n                    student = { student }\n                    />\n                ))\n            ) : ( <\n                p > No students found matching this criteria. < /p>\n            )\n        } <\n        /div> < /\n        div >\n    );\n}\n\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}