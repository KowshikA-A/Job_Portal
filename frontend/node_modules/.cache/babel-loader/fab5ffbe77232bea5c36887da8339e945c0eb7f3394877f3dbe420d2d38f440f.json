{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './UploadPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction UploadPage() {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploadStatus, setUploadStatus] = useState('');\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setUploadStatus(''); // Reset upload status\n  };\n  const handleUploadClick = async () => {\n    if (!selectedFile) {\n      setUploadStatus('Please select a file first.');\n      return;\n    }\n\n    // Handle file upload (send to server)\n    const formData = new FormData();\n    formData.append('file', selectedFile);\n    try {\n      // Simulate file upload, you can replace this with an actual API call\n      // For example: await axios.post('/upload', formData)\n      setUploadStatus('File uploaded successfully!');\n\n      // Reset file input after upload\n      setSelectedFile(null);\n    } catch (error) {\n      setUploadStatus('Error uploading file.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Upload Data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUploadClick,\n      className: \"upload-button\",\n      children: \"Upload \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this), \" \", uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"upload-status\",\n      children: [\" \", uploadStatus, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 14\n  }, this);\n}\n_s(UploadPage, \"Sh/hChyaCqaA9N7dEugjkofgeto=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadPage","_s","selectedFile","setSelectedFile","uploadStatus","setUploadStatus","handleFileChange","e","target","files","handleUploadClick","formData","FormData","append","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './UploadPage.css';\n\nfunction UploadPage() {\n    const [selectedFile, setSelectedFile] = useState(null);\n    const [uploadStatus, setUploadStatus] = useState('');\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n        setUploadStatus(''); // Reset upload status\n    };\n\n    const handleUploadClick = async() => {\n        if (!selectedFile) {\n            setUploadStatus('Please select a file first.');\n            return;\n        }\n\n        // Handle file upload (send to server)\n        const formData = new FormData();\n        formData.append('file', selectedFile);\n\n        try {\n            // Simulate file upload, you can replace this with an actual API call\n            // For example: await axios.post('/upload', formData)\n            setUploadStatus('File uploaded successfully!');\n\n            // Reset file input after upload\n            setSelectedFile(null);\n        } catch (error) {\n            setUploadStatus('Error uploading file.');\n        }\n    };\n\n    return ( <\n        div className = \"upload-container\" >\n        <\n        h2 > Upload Data < /h2> <\n        input type = \"file\"\n        onChange = { handleFileChange }\n        /> <\n        button onClick = { handleUploadClick }\n        className = \"upload-button\" >\n        Upload <\n        /button> {\n            uploadStatus && < p className = \"upload-status\" > { uploadStatus } < /p>} <\n                /div>\n        );\n    }\n\n    export default UploadPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACO,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,gBAAgB,GAAIC,CAAC,IAAK;IAC5BJ,eAAe,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAClCJ,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;EACzB,CAAC;EAED,MAAMK,iBAAiB,GAAG,MAAAA,CAAA,KAAW;IACjC,IAAI,CAACR,YAAY,EAAE;MACfG,eAAe,CAAC,6BAA6B,CAAC;MAC9C;IACJ;;IAEA;IACA,MAAMM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,YAAY,CAAC;IAErC,IAAI;MACA;MACA;MACAG,eAAe,CAAC,6BAA6B,CAAC;;MAE9C;MACAF,eAAe,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOW,KAAK,EAAE;MACZT,eAAe,CAAC,uBAAuB,CAAC;IAC5C;EACJ,CAAC;EAED,oBAASN,OAAA;IACDgB,SAAS,EAAG,kBAAkB;IAAAC,QAAA,gBAClCjB,OAAA;MAAAiB,QAAA,EACI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAAArB,OAAA;MAClBsB,IAAI,EAAG,MAAM;MACnBC,QAAQ,EAAKhB;IAAkB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,KAAC,eAAArB,OAAA;MACIwB,OAAO,EAAKb,iBAAmB;MACtCK,SAAS,EAAG,eAAe;MAAAC,QAAA,EAAE;IACtB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,KAAC,EACLhB,YAAY,iBAAIL,OAAA;MAAIgB,SAAS,EAAG,eAAe;MAAAC,QAAA,GAAE,GAAC,EAAEZ,YAAY,EAAE,GAAC;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClE,CAAC;AAEjB;AAACnB,EAAA,CA7CID,UAAU;AAAAwB,EAAA,GAAVxB,UAAU;AA+Cf,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}