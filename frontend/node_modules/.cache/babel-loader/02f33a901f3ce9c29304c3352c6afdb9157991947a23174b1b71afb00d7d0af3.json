{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // To make API requests\nimport { Bar } from 'react-chartjs-2'; // For the chart\nimport 'chart.js/auto';\nimport './Monitoring.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Monitoring() {\n  _s();\n  const [numYears, setNumYears] = useState(2);\n  const [selectedYears, setSelectedYears] = useState([]);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState('');\n  const [placementData, setPlacementData] = useState([]);\n  useEffect(() => {\n    axios.get('/api/company').then(response => {\n      if (Array.isArray(response.data)) {\n        setCompanyList(response.data);\n      } else {\n        console.error('Invalid company data structure:', response.data);\n      }\n    }).catch(error => {\n      console.error('Error fetching companies:', error);\n    });\n  }, []);\n  const handleNumYearsChange = e => {\n    const num = Number(e.target.value);\n    if (num >= 2 && num <= 20) {\n      setNumYears(num);\n      setSelectedYears(new Array(num).fill(''));\n    } else {\n      alert(\"Please select a number of years between 2 and 20.\");\n    }\n  };\n  const handleYearChange = (index, e) => {\n    const newSelectedYears = [...selectedYears];\n    newSelectedYears[index] = e.target.value;\n    setSelectedYears(newSelectedYears);\n  };\n  const handleCompanyChange = e => {\n    setSelectedCompany(e.target.value);\n  };\n  const fetchPlacementData = () => {\n    const payload = {\n      years: selectedYears,\n      company: selectedCompany || null\n    };\n    axios.post('/api/placement', payload).then(response => {\n      if (Array.isArray(response.data)) {\n        setPlacementData(response.data);\n      } else {\n        console.error('Invalid placement data structure:', response.data);\n      }\n    }).catch(error => {\n      console.error('Error fetching placement data:', error);\n    });\n  };\n  const chartData = {\n    labels: placementData.map(item => typeof item.status === 'string' ? item.status : 'Invalid Status'),\n    datasets: [{\n      label: `Placements for ${selectedCompany || 'All Companies'}`,\n      data: placementData.map(item => typeof item.count === 'number' ? item.count : 0),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monitoring-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Monitoring Placements \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numYears\",\n      children: \" Select Number of Years: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 54\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"numYears\",\n      value: numYears,\n      onChange: handleNumYearsChange,\n      children: [\" \", [...Array(19).keys()].map(i => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: i + 2,\n        children: [\" \", i + 2, \" \"]\n      }, i + 2, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 46\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 72\n    }, this), \" \", Array.from({\n      length: numYears\n    }).map((_, index) => /*#__PURE__*/_jsxDEV(\"select\", {\n      value: selectedYears[index],\n      onChange: e => handleYearChange(index, e),\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" Select Year \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this), \" \", \" \", [2023, 2022, 2021].map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: [\" \", year, \" \"]\n      }, year, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 54\n      }, this)), \" \"]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 66\n    }, this)), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"companySelect\",\n      children: \" Select Company: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 50\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"companySelect\",\n      value: selectedCompany,\n      onChange: handleCompanyChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" All Companies \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), \" \", companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: company,\n        children: [\" \", company, \" \"]\n      }, company, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 42\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 69\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchPlacementData,\n      children: \" Fetch Data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 50\n    }, this), \" \", placementData.length > 0 ? /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 42\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No placement data available for the selected criteria. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 14\n  }, this);\n}\n_s(Monitoring, \"DCIJ1D09J/xRPoYSnfvkgzG0mnk=\");\n_c = Monitoring;\nexport default Monitoring;\nvar _c;\n$RefreshReg$(_c, \"Monitoring\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","Monitoring","_s","numYears","setNumYears","selectedYears","setSelectedYears","companyList","setCompanyList","selectedCompany","setSelectedCompany","placementData","setPlacementData","get","then","response","Array","isArray","data","console","error","catch","handleNumYearsChange","e","num","Number","target","value","fill","alert","handleYearChange","index","newSelectedYears","handleCompanyChange","fetchPlacementData","payload","years","company","post","chartData","labels","map","item","status","datasets","label","count","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","keys","i","from","length","_","year","onClick","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // To make API requests\nimport { Bar } from 'react-chartjs-2'; // For the chart\nimport 'chart.js/auto';\nimport './Monitoring.css'; // Import the CSS file\n\nfunction Monitoring() {\n    const [numYears, setNumYears] = useState(2);\n    const [selectedYears, setSelectedYears] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [selectedCompany, setSelectedCompany] = useState('');\n    const [placementData, setPlacementData] = useState([]);\n\n    useEffect(() => {\n        axios.get('/api/company')\n            .then((response) => {\n                if (Array.isArray(response.data)) {\n                    setCompanyList(response.data);\n                } else {\n                    console.error('Invalid company data structure:', response.data);\n                }\n            })\n            .catch((error) => {\n                console.error('Error fetching companies:', error);\n            });\n    }, []);\n\n    const handleNumYearsChange = (e) => {\n        const num = Number(e.target.value);\n        if (num >= 2 && num <= 20) {\n            setNumYears(num);\n            setSelectedYears(new Array(num).fill(''));\n        } else {\n            alert(\"Please select a number of years between 2 and 20.\");\n        }\n    };\n\n    const handleYearChange = (index, e) => {\n        const newSelectedYears = [...selectedYears];\n        newSelectedYears[index] = e.target.value;\n        setSelectedYears(newSelectedYears);\n    };\n\n    const handleCompanyChange = (e) => {\n        setSelectedCompany(e.target.value);\n    };\n\n    const fetchPlacementData = () => {\n        const payload = {\n            years: selectedYears,\n            company: selectedCompany || null,\n        };\n\n        axios.post('/api/placement', payload)\n            .then((response) => {\n                if (Array.isArray(response.data)) {\n                    setPlacementData(response.data);\n                } else {\n                    console.error('Invalid placement data structure:', response.data);\n                }\n            })\n            .catch((error) => {\n                console.error('Error fetching placement data:', error);\n            });\n    };\n\n    const chartData = {\n        labels: placementData.map(item => (typeof item.status === 'string' ? item.status : 'Invalid Status')),\n        datasets: [{\n            label: `Placements for ${selectedCompany || 'All Companies'}`,\n            data: placementData.map(item => (typeof item.count === 'number' ? item.count : 0)),\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n        }],\n    };\n\n    return ( <\n        div className = \"monitoring-container\" >\n        <\n        h2 > Monitoring Placements < /h2>\n\n        { /* Dropdown to select number of years */ } <\n        label htmlFor = \"numYears\" > Select Number of Years: < /label> <\n        select id = \"numYears\"\n        value = { numYears }\n        onChange = { handleNumYearsChange } > {\n            [...Array(19).keys()].map(i => ( <\n                option key = { i + 2 }\n                value = { i + 2 } > { i + 2 } < /option>\n            ))\n        } <\n        /select>\n\n        { /* Dropdowns for year selection */ } {\n            Array.from({ length: numYears }).map((_, index) => ( <\n                select key = { index }\n                value = { selectedYears[index] }\n                onChange = {\n                    (e) => handleYearChange(index, e) } >\n                <\n                option value = \"\" > Select Year < /option> { /* Replace with your years logic */ } {\n                    [2023, 2022, 2021].map(year => ( <\n                        option key = { year }\n                        value = { year } > { year } < /option>\n                    ))\n                } <\n                /select>\n            ))\n        }\n\n        { /* Dropdown for company selection */ } <\n        label htmlFor = \"companySelect\" > Select Company: < /label> <\n        select id = \"companySelect\"\n        value = { selectedCompany }\n        onChange = { handleCompanyChange } >\n        <\n        option value = \"\" > All Companies < /option> {\n            companyList.map(company => ( <\n                option key = { company }\n                value = { company } > { company } < /option>\n            ))\n        } <\n        /select>\n\n        { /* Button to fetch placement data */ } <\n        button onClick = { fetchPlacementData } > Fetch Data < /button>\n\n        { /* Chart rendering */ } {\n            placementData.length > 0 ? ( <\n                Bar data = { chartData }\n                />\n            ) : ( <\n                p > No placement data available\n                for the selected criteria. < /p>\n            )\n        } <\n        /div>\n    );\n}\n\nexport default Monitoring;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}