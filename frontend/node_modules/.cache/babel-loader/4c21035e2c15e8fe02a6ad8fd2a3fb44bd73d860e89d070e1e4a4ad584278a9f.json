{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [filteredStudents, setFilteredStudents] = useState([]);\n\n  // Assuming you fetch students from an API or have an initial list of students\n  useEffect(() => {\n    // Fetch students (Replace with your actual fetching logic)\n    const fetchStudents = async () => {\n      const response = await fetch('/api/students');\n      const data = await response.json();\n      setStudents(data);\n      setFilteredStudents(data); // Set filtered students initially to all students\n    };\n    fetchStudents();\n  }, []);\n\n  // Handle search functionality\n  const handleSearch = searchTerm => {\n    if (searchTerm.trim() === '') {\n      setFilteredStudents(students); // If no search term, show all students\n    } else {\n      const lowercasedSearchTerm = searchTerm.toLowerCase();\n      const filtered = students.filter(student => student.Reg_No.toLowerCase().includes(lowercasedSearchTerm));\n      setFilteredStudents(filtered);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Student List \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), \" \", filteredStudents.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\" \", filteredStudents.map(student => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", student.Name, \" - \", student.Reg_No, \" \"]\n        }, student._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 55\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 45\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No students found matching this criteria. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"1l7jDUvWMzNEdBW55tdZ+r7chq8=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","Navbar","jsxDEV","_jsxDEV","StudentList","_s","students","setStudents","filteredStudents","setFilteredStudents","fetchStudents","response","fetch","data","json","handleSearch","searchTerm","trim","lowercasedSearchTerm","toLowerCase","filtered","filter","student","Reg_No","includes","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","length","map","Name","_id","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Navbar from './Navbar';\n\nfunction StudentList() {\n    const [students, setStudents] = useState([]);\n    const [filteredStudents, setFilteredStudents] = useState([]);\n\n    // Assuming you fetch students from an API or have an initial list of students\n    useEffect(() => {\n        // Fetch students (Replace with your actual fetching logic)\n        const fetchStudents = async() => {\n            const response = await fetch('/api/students');\n            const data = await response.json();\n            setStudents(data);\n            setFilteredStudents(data); // Set filtered students initially to all students\n        };\n        fetchStudents();\n    }, []);\n\n    // Handle search functionality\n    const handleSearch = (searchTerm) => {\n        if (searchTerm.trim() === '') {\n            setFilteredStudents(students); // If no search term, show all students\n        } else {\n            const lowercasedSearchTerm = searchTerm.toLowerCase();\n            const filtered = students.filter(student =>\n                student.Reg_No.toLowerCase().includes(lowercasedSearchTerm)\n            );\n            setFilteredStudents(filtered);\n        }\n    };\n\n    return ( <\n        div >\n        <\n        Navbar onSearch = { handleSearch }\n        /> <\n        div >\n        <\n        h3 > Student List < /h3> {\n            filteredStudents.length > 0 ? ( <\n                ul > {\n                    filteredStudents.map(student => ( <\n                        li key = { student._id } > { student.Name } - { student.Reg_No } <\n                        /li>\n                    ))\n                } <\n                /ul>\n            ) : ( <\n                p > No students found matching this criteria. < /p>\n            )\n        } <\n        /div> <\n        /div>\n    );\n}\n\nexport default StudentList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9B,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE5D;EACAC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAW;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,CAAC;MAC7C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCP,WAAW,CAACM,IAAI,CAAC;MACjBJ,mBAAmB,CAACI,IAAI,CAAC,CAAC,CAAC;IAC/B,CAAC;IACDH,aAAa,CAAC,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMK,YAAY,GAAIC,UAAU,IAAK;IACjC,IAAIA,UAAU,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MAC1BR,mBAAmB,CAACH,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC,MAAM;MACH,MAAMY,oBAAoB,GAAGF,UAAU,CAACG,WAAW,CAAC,CAAC;MACrD,MAAMC,QAAQ,GAAGd,QAAQ,CAACe,MAAM,CAACC,OAAO,IACpCA,OAAO,CAACC,MAAM,CAACJ,WAAW,CAAC,CAAC,CAACK,QAAQ,CAACN,oBAAoB,CAC9D,CAAC;MACDT,mBAAmB,CAACW,QAAQ,CAAC;IACjC;EACJ,CAAC;EAED,oBAASjB,OAAA;IAAAsB,QAAA,gBAELtB,OAAA,CACAF,MAAM;MAACyB,QAAQ,EAAKX;IAAc;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,KAAC,eAAA3B,OAAA;MAAAsB,QAAA,gBAEHtB,OAAA;QAAAsB,QAAA,EACI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,KAAC,EACrBtB,gBAAgB,CAACuB,MAAM,GAAG,CAAC,gBAAK5B,OAAA;QAAAsB,QAAA,GACxB,GAAC,EACDjB,gBAAgB,CAACwB,GAAG,CAACV,OAAO,iBAAMnB,OAAA;UAAAsB,QAAA,GACJ,GAAC,EAAEH,OAAO,CAACW,IAAI,EAAE,KAAG,EAAEX,OAAO,CAACC,MAAM,EAAE,GAAC;QAAA,GAAtDD,OAAO,CAACY,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CACN,CAAC,EACL,GAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,gBACF3B,OAAA;QAAAsB,QAAA,EACC;MAA2C;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACrD,EACJ,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEb;AAACzB,EAAA,CApDQD,WAAW;AAAA+B,EAAA,GAAX/B,WAAW;AAsDpB,eAAeA,WAAW;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}