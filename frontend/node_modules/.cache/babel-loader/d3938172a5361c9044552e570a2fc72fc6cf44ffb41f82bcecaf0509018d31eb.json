{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/CompanyList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyList = ({\n  year\n}) => {\n  _s();\n  const [companies, setCompanies] = useState([]);\n  const [error, setError] = useState(null);\n  const fetchCompanies = async () => {\n    try {\n      const response = await fetch('/api/companies'); // Ensure this URL is correct\n\n      // Check if the response is OK (status in the range 200-299)\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setCompanies(data);\n    } catch (err) {\n      console.error(\"Error fetching company data:\", err);\n      setError(err.message); // Set error message\n    }\n  };\n  useEffect(() => {\n    fetchCompanies();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: [\" Error: \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Company List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 66\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\" \", companies.length > 0 ? companies.map(company => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", company.name, \" \"]\n      }, company.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 54\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No companies found. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 27\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 42\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 18\n  }, this);\n};\n_s(CompanyList, \"9mOSl/w2Lxfg8M4lsCX7IPqtslE=\");\n_c = CompanyList;\nexport default CompanyList;\nvar _c;\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","CompanyList","year","_s","companies","setCompanies","error","setError","fetchCompanies","response","fetch","ok","Error","status","data","json","err","console","message","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","length","map","company","name","id","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/CompanyList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst CompanyList = ({ year }) => {\n        const [companies, setCompanies] = useState([]);\n        const [error, setError] = useState(null);\n\n        const fetchCompanies = async() => {\n            try {\n                const response = await fetch('/api/companies'); // Ensure this URL is correct\n\n                // Check if the response is OK (status in the range 200-299)\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n\n                const data = await response.json();\n                setCompanies(data);\n            } catch (err) {\n                console.error(\"Error fetching company data:\", err);\n                setError(err.message); // Set error message\n            }\n        };\n\n        useEffect(() => {\n            fetchCompanies();\n        }, []);\n\n        return ( <\n            div > {\n                error && < p style = {\n                    { color: 'red' } } > Error: { error } < /p>} <\n                h2 > Company List < /h2> <\n                ul > {\n                    companies.length > 0 ? (\n                        companies.map((company) => ( <\n                            li key = { company.id } > { company.name } < /li>\n                        ))\n                    ) : ( <\n                        p > No companies found. < /p>\n                    )\n                } <\n                /ul> <\n                /div>\n            );\n        };\n\n        export default CompanyList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMU,cAAc,GAAG,MAAAA,CAAA,KAAW;IAC9B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC;;MAEhD;MACA,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC7D;MAEA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClCV,YAAY,CAACS,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOE,GAAG,EAAE;MACVC,OAAO,CAACX,KAAK,CAAC,8BAA8B,EAAEU,GAAG,CAAC;MAClDT,QAAQ,CAACS,GAAG,CAACE,OAAO,CAAC,CAAC,CAAC;IAC3B;EACJ,CAAC;EAEDrB,SAAS,CAAC,MAAM;IACZW,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,oBAASR,OAAA;IAAAmB,QAAA,GACA,GAAC,EACFb,KAAK,iBAAIN,OAAA;MAAIoB,KAAK,EACd;QAAEC,KAAK,EAAE;MAAM,CAAG;MAAAF,QAAA,GAAE,UAAQ,EAAEb,KAAK,EAAE,GAAC;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAAC,GAAC,eAAAzB,OAAA;MAAAmB,QAAA,EAC7C;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,KAAC,eAAAzB,OAAA;MAAAmB,QAAA,GACrB,GAAC,EACDf,SAAS,CAACsB,MAAM,GAAG,CAAC,GAChBtB,SAAS,CAACuB,GAAG,CAAEC,OAAO,iBAAO5B,OAAA;QAAAmB,QAAA,GACA,GAAC,EAAES,OAAO,CAACC,IAAI,EAAE,GAAC;MAAA,GAAhCD,OAAO,CAACE,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAA2B,CACnD,CAAC,gBACAzB,OAAA;QAAAmB,QAAA,EACC;MAAqB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAC/B,EACJ,GAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEb,CAAC;AAACtB,EAAA,CA1CJF,WAAW;AAAA8B,EAAA,GAAX9B,WAAW;AA4CT,eAAeA,WAAW;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}