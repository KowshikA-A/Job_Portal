{"ast":null,"code":"import axios from 'axios';\nexport const fetchStudents = async (filter, year, searchTerm, schoolFilter, typeFilter) => {\n  try {\n    const params = {\n      searchTerm,\n      year: year || undefined,\n      // Only include if year is provided\n      school: schoolFilter || undefined,\n      // Only include if schoolFilter is provided\n      type: typeFilter || undefined,\n      // Only include if typeFilter is provided\n      filter: filter !== 'all' ? filter : undefined // Only include filter if it's not 'all'\n    };\n\n    // Remove any undefined values from the params object\n    const cleanedParams = Object.fromEntries(Object.entries(params).filter(([_, v]) => v !== undefined));\n    const response = await axios.get('/api/students', {\n      params: cleanedParams\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching students:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","fetchStudents","filter","year","searchTerm","schoolFilter","typeFilter","params","undefined","school","type","cleanedParams","Object","fromEntries","entries","_","v","response","get","data","error","console"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/api/studentAPI.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchStudents = async(filter, year, searchTerm, schoolFilter, typeFilter) => {\n    try {\n        const params = {\n            searchTerm,\n            year: year || undefined, // Only include if year is provided\n            school: schoolFilter || undefined, // Only include if schoolFilter is provided\n            type: typeFilter || undefined, // Only include if typeFilter is provided\n            filter: filter !== 'all' ? filter : undefined // Only include filter if it's not 'all'\n        };\n\n        // Remove any undefined values from the params object\n        const cleanedParams = Object.fromEntries(Object.entries(params).filter(([_, v]) => v !== undefined));\n\n        const response = await axios.get('/api/students', { params: cleanedParams });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching students:\", error);\n        throw error;\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAMC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,YAAY,EAAEC,UAAU,KAAK;EACtF,IAAI;IACA,MAAMC,MAAM,GAAG;MACXH,UAAU;MACVD,IAAI,EAAEA,IAAI,IAAIK,SAAS;MAAE;MACzBC,MAAM,EAAEJ,YAAY,IAAIG,SAAS;MAAE;MACnCE,IAAI,EAAEJ,UAAU,IAAIE,SAAS;MAAE;MAC/BN,MAAM,EAAEA,MAAM,KAAK,KAAK,GAAGA,MAAM,GAAGM,SAAS,CAAC;IAClD,CAAC;;IAED;IACA,MAAMG,aAAa,GAAGC,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAACP,MAAM,CAAC,CAACL,MAAM,CAAC,CAAC,CAACa,CAAC,EAAEC,CAAC,CAAC,KAAKA,CAAC,KAAKR,SAAS,CAAC,CAAC;IAEpG,MAAMS,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAC,eAAe,EAAE;MAAEX,MAAM,EAAEI;IAAc,CAAC,CAAC;IAC5E,OAAOM,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}