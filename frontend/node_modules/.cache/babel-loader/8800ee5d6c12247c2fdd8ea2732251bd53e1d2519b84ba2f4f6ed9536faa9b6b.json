{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList({\n  filter,\n  year,\n  searchTerm,\n  schoolFilter,\n  typeFilter,\n  setSchoolFilter\n}) {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  useEffect(() => {\n    const loadStudents = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        const data = await fetchStudents(filter, year, searchTerm, schoolFilter, typeFilter);\n        console.log(\"Fetched data:\", data);\n        if (Array.isArray(data)) {\n          const groupedData = groupByRegNo(data);\n\n          // Filter students based on schoolFilter and typeFilter\n          const filteredStudents = Object.values(groupedData).filter(studentGroup => {\n            const firstStudent = studentGroup[0]; // Assuming all students in a group have the same school and type\n            const matchesSchool = schoolFilter ? firstStudent.School && firstStudent.School.toLowerCase() === schoolFilter.toLowerCase() : true;\n            const matchesType = typeFilter ? firstStudent.Type && firstStudent.Type.toLowerCase() === typeFilter.toLowerCase() : true;\n            return matchesSchool && matchesType;\n          });\n          setStudents(filteredStudents);\n        } else {\n          console.error('Fetched data is not an array:', data);\n          setStudents([]);\n          setError('Unexpected data format from server.');\n        }\n      } catch (error) {\n        console.error('Error loading students:', error);\n        setError('Failed to load student data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadStudents();\n  }, [filter, year, searchTerm, schoolFilter, typeFilter]); // Added schoolFilter and typeFilter as dependencies\n\n  const handleStudentClick = student => {\n    setSelectedStudent(student);\n  };\n  const closeModal = () => {\n    setSelectedStudent(null);\n  };\n  const studentCards = useMemo(() => {\n    return students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleStudentClick(student),\n      children: [/*#__PURE__*/_jsxDEV(StudentCard, {\n        student: student\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), \" \"]\n    }, student.Reg_No, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 42\n    }, this));\n  }, [students]);\n  const handleSchoolFilterChange = school => {\n    setSchoolFilter(school); // Update the school filter when a button is clicked\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: '20px',\n        fontSize: '30px'\n      },\n      children: \" Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      style: {\n        marginLeft: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"student-filter-button\",\n        onClick: () => handleSchoolFilterChange('SCOPE'),\n        children: \" SCOPE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"student-filter-button\",\n        onClick: () => handleSchoolFilterChange('SENSE'),\n        children: \" SENSE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 74\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"student-filter-button\",\n        onClick: () => handleSchoolFilterChange('SMEC'),\n        children: \" SMEC \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 74\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 74\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-cards-container\",\n      children: [\" \", students.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No students found matching this criteria. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 39\n      }, this) : studentCards, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }, this), \" \", selectedStudent && /*#__PURE__*/_jsxDEV(StudentDetailModal, {\n      student: selectedStudent,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 34\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"ZLnU49YJApvCpt6bxpjR0q7Ty8o=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","StudentCard","StudentDetailModal","fetchStudents","groupByRegNo","jsxDEV","_jsxDEV","StudentList","filter","year","searchTerm","schoolFilter","typeFilter","setSchoolFilter","_s","students","setStudents","loading","setLoading","error","setError","selectedStudent","setSelectedStudent","loadStudents","data","console","log","Array","isArray","groupedData","filteredStudents","Object","values","studentGroup","firstStudent","matchesSchool","School","toLowerCase","matchesType","Type","handleStudentClick","student","closeModal","studentCards","map","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Reg_No","handleSchoolFilterChange","school","className","style","marginLeft","fontSize","marginBottom","length","onClose","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\n\nfunction StudentList({ filter, year, searchTerm, schoolFilter, typeFilter, setSchoolFilter }) {\n    const [students, setStudents] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedStudent, setSelectedStudent] = useState(null);\n\n    useEffect(() => {\n        const loadStudents = async() => {\n            setLoading(true);\n            setError(null);\n\n            try {\n                const data = await fetchStudents(filter, year, searchTerm, schoolFilter, typeFilter);\n                console.log(\"Fetched data:\", data);\n\n                if (Array.isArray(data)) {\n                    const groupedData = groupByRegNo(data);\n\n                    // Filter students based on schoolFilter and typeFilter\n                    const filteredStudents = Object.values(groupedData).filter(studentGroup => {\n                        const firstStudent = studentGroup[0]; // Assuming all students in a group have the same school and type\n                        const matchesSchool = schoolFilter ?\n                            firstStudent.School && firstStudent.School.toLowerCase() === schoolFilter.toLowerCase() :\n                            true;\n\n                        const matchesType = typeFilter ?\n                            firstStudent.Type && firstStudent.Type.toLowerCase() === typeFilter.toLowerCase() :\n                            true;\n\n                        return matchesSchool && matchesType;\n                    });\n\n                    setStudents(filteredStudents);\n                } else {\n                    console.error('Fetched data is not an array:', data);\n                    setStudents([]);\n                    setError('Unexpected data format from server.');\n                }\n            } catch (error) {\n                console.error('Error loading students:', error);\n                setError('Failed to load student data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadStudents();\n    }, [filter, year, searchTerm, schoolFilter, typeFilter]); // Added schoolFilter and typeFilter as dependencies\n\n    const handleStudentClick = (student) => {\n        setSelectedStudent(student);\n    };\n\n    const closeModal = () => {\n        setSelectedStudent(null);\n    };\n\n    const studentCards = useMemo(() => {\n        return students.map(student => ( <\n            div key = { student.Reg_No }\n            onClick = {\n                () => handleStudentClick(student) } >\n            <\n            StudentCard student = { student }\n            /> <\n            /div>\n        ));\n    }, [students]);\n\n    const handleSchoolFilterChange = (school) => {\n        setSchoolFilter(school); // Update the school filter when a button is clicked\n    };\n\n    if (loading) {\n        return <p > Loading... < /p>;\n    }\n\n    if (error) {\n        return <p className = \"error-message\" > { error } < /p>;\n    }\n\n    return ( <\n        div className = \"student-list\" >\n        <\n        h2 style = {\n            { marginLeft: '20px', fontSize: '30px' } } > Students < /h2> <\n        div className = \"button-container\"\n        style = {\n            { marginLeft: '20px', marginBottom: '20px' } } >\n        <\n        button className = \"student-filter-button\"\n        onClick = {\n            () => handleSchoolFilterChange('SCOPE') } > SCOPE < /button> <\n        button className = \"student-filter-button\"\n        onClick = {\n            () => handleSchoolFilterChange('SENSE') } > SENSE < /button> <\n        button className = \"student-filter-button\"\n        onClick = {\n            () => handleSchoolFilterChange('SMEC') } > SMEC < /button> <\n        /div> <\n        div className = \"student-cards-container\" > {\n            students.length === 0 ? ( <\n                p > No students found matching this criteria. < /p>\n            ) : (\n                studentCards\n            )\n        } <\n        /div> {\n            selectedStudent && ( <\n                StudentDetailModal student = { selectedStudent }\n                onClose = { closeModal }\n                />\n            )\n        } <\n        /div>\n    );\n}\n\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}