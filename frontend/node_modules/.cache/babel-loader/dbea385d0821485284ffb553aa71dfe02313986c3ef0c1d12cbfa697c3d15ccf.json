{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './Monitoring.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Monitoring() {\n  _s();\n  const [numYears, setNumYears] = useState(2);\n  const [selectedYears, setSelectedYears] = useState([]);\n  const [companyList, setCompanyList] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState('');\n  const [placementData, setPlacementData] = useState([]);\n  const fetchCompanies = async year => {\n    try {\n      const response = await axios.get('/api/companies', {\n        params: {\n          year\n        }\n      });\n      if (Array.isArray(response.data)) {\n        setCompanyList(response.data);\n      } else {\n        console.error('Invalid company data structure:', response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching companies:', error);\n    }\n  };\n  useEffect(() => {\n    if (selectedYears.length > 0) {\n      fetchCompanies(selectedYears[0]);\n    }\n  }, [selectedYears]);\n  const handleNumYearsChange = e => {\n    const num = Number(e.target.value);\n    if (num >= 2 && num <= 20) {\n      setNumYears(num);\n      setSelectedYears(new Array(num).fill(''));\n    } else {\n      alert(\"Please select a number of years between 2 and 20.\");\n    }\n  };\n  const handleYearChange = (index, e) => {\n    const newYear = e.target.value;\n    if (selectedYears.includes(newYear)) {\n      alert('Year already selected! Please select a different year.');\n      return;\n    }\n    const newSelectedYears = [...selectedYears];\n    newSelectedYears[index] = newYear;\n    setSelectedYears(newSelectedYears);\n    fetchCompanies(newYear); // Fetch companies when a year is selected\n  };\n  const handleCompanyChange = e => {\n    setSelectedCompany(e.target.value);\n  };\n  const fetchPlacementData = async () => {\n    const payload = {\n      years: selectedYears,\n      company: selectedCompany || null\n    };\n    try {\n      const response = await axios.post('/api/placement', payload);\n      if (Array.isArray(response.data)) {\n        setPlacementData(response.data);\n        console.log('Placement Data:', response.data); // Debug log\n      } else {\n        console.error('Invalid placement data structure:', response.data);\n      }\n    } catch (error) {\n      console.error('Error fetching placement data:', error);\n    }\n  };\n  const labels = [...new Set(placementData.map(item => item.ApplicationStatus))];\n  const chartData = {\n    labels: labels,\n    datasets: selectedYears.map((year, index) => {\n      const yearData = placementData.filter(item => item.Year === year);\n      const counts = {};\n\n      // Ensure to count based on the current year\n      yearData.forEach(item => {\n        counts[item.ApplicationStatus] = (counts[item.ApplicationStatus] || 0) + (item.count || 0);\n      });\n      return {\n        label: `${year} Placements`,\n        data: labels.map(label => counts[label] || 0),\n        // Default to 0 if no data\n        backgroundColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 0.6)`,\n        borderColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 1)`,\n        borderWidth: 1\n      };\n    })\n  };\n  console.log('Chart Data:', chartData); // Debug log\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monitoring-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Monitoring Placements \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numYears\",\n      children: \" Select number of years to compare(min 2, max 20): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 43\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"numYears\",\n      type: \"number\",\n      value: numYears,\n      onChange: handleNumYearsChange,\n      min: \"2\",\n      max: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 98\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-selection-container\",\n      children: [\" \", Array.from({\n        length: numYears\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `year${index}`,\n          children: [\" Year \", index + 1, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: `year${index}`,\n          value: selectedYears[index] || '',\n          onChange: e => handleYearChange(index, e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Select Year \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), \" \", Array.from({\n            length: 20\n          }, (_, i) => 2025 - i).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [\" \", year, \" \"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 84\n          }, this)), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 84\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 66\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"company\",\n      children: \" Select Company(Optional): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"company\",\n      value: selectedCompany,\n      onChange: handleCompanyChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" All Companies \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), \" \", companyList.length > 0 ? companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: company.name,\n        children: [\" \", company.name, \" \"]\n      }, company._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 48\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" No Companies Available \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 73\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"onee\",\n      onClick: fetchPlacementData,\n      children: \" Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 18\n    }, this), \" \", placementData.length > 0 && labels.length > 0 &&\n    /*#__PURE__*/\n    // Ensure both have values\n    _jsxDEV(\"div\", {\n      className: \"monitoring-chart\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 14\n  }, this);\n}\n_s(Monitoring, \"DCIJ1D09J/xRPoYSnfvkgzG0mnk=\");\n_c = Monitoring;\nexport default Monitoring;\nvar _c;\n$RefreshReg$(_c, \"Monitoring\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","Monitoring","_s","numYears","setNumYears","selectedYears","setSelectedYears","companyList","setCompanyList","selectedCompany","setSelectedCompany","placementData","setPlacementData","fetchCompanies","year","response","get","params","Array","isArray","data","console","error","length","handleNumYearsChange","e","num","Number","target","value","fill","alert","handleYearChange","index","newYear","includes","newSelectedYears","handleCompanyChange","fetchPlacementData","payload","years","company","post","log","labels","Set","map","item","ApplicationStatus","chartData","datasets","yearData","filter","Year","counts","forEach","count","label","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","min","max","from","_","i","name","_id","onClick","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport './Monitoring.css';\n\nfunction Monitoring() {\n    const [numYears, setNumYears] = useState(2);\n    const [selectedYears, setSelectedYears] = useState([]);\n    const [companyList, setCompanyList] = useState([]);\n    const [selectedCompany, setSelectedCompany] = useState('');\n    const [placementData, setPlacementData] = useState([]);\n\n    const fetchCompanies = async(year) => {\n        try {\n            const response = await axios.get('/api/companies', { params: { year } });\n            if (Array.isArray(response.data)) {\n                setCompanyList(response.data);\n            } else {\n                console.error('Invalid company data structure:', response.data);\n            }\n        } catch (error) {\n            console.error('Error fetching companies:', error);\n        }\n    };\n\n    useEffect(() => {\n        if (selectedYears.length > 0) {\n            fetchCompanies(selectedYears[0]);\n        }\n    }, [selectedYears]);\n\n    const handleNumYearsChange = (e) => {\n        const num = Number(e.target.value);\n        if (num >= 2 && num <= 20) {\n            setNumYears(num);\n            setSelectedYears(new Array(num).fill(''));\n        } else {\n            alert(\"Please select a number of years between 2 and 20.\");\n        }\n    };\n\n    const handleYearChange = (index, e) => {\n        const newYear = e.target.value;\n        if (selectedYears.includes(newYear)) {\n            alert('Year already selected! Please select a different year.');\n            return;\n        }\n        const newSelectedYears = [...selectedYears];\n        newSelectedYears[index] = newYear;\n        setSelectedYears(newSelectedYears);\n        fetchCompanies(newYear); // Fetch companies when a year is selected\n    };\n\n    const handleCompanyChange = (e) => {\n        setSelectedCompany(e.target.value);\n    };\n\n    const fetchPlacementData = async() => {\n        const payload = {\n            years: selectedYears,\n            company: selectedCompany || null,\n        };\n\n        try {\n            const response = await axios.post('/api/placement', payload);\n            if (Array.isArray(response.data)) {\n                setPlacementData(response.data);\n                console.log('Placement Data:', response.data); // Debug log\n            } else {\n                console.error('Invalid placement data structure:', response.data);\n            }\n        } catch (error) {\n            console.error('Error fetching placement data:', error);\n        }\n    };\n\n    const labels = [...new Set(placementData.map(item => item.ApplicationStatus))];\n\n    const chartData = {\n        labels: labels,\n        datasets: selectedYears.map((year, index) => {\n            const yearData = placementData.filter(item => item.Year === year);\n            const counts = {};\n\n            // Ensure to count based on the current year\n            yearData.forEach(item => {\n                counts[item.ApplicationStatus] = (counts[item.ApplicationStatus] || 0) + (item.count || 0);\n            });\n\n            return {\n                label: `${year} Placements`,\n                data: labels.map(label => counts[label] || 0), // Default to 0 if no data\n                backgroundColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 0.6)`,\n                borderColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 1)`,\n                borderWidth: 1,\n            };\n        }),\n    };\n\n    console.log('Chart Data:', chartData); // Debug log\n\n    return ( <\n        div className = \"monitoring-container\" >\n        <\n        h2 > Monitoring Placements < /h2> <\n        label htmlFor = \"numYears\" > Select number of years to compare(min 2, max 20): < /label> <\n        input id = \"numYears\"\n        type = \"number\"\n        value = { numYears }\n        onChange = { handleNumYearsChange }\n        min = \"2\"\n        max = \"20\" /\n        >\n        <\n        div className = \"year-selection-container\" > {\n            Array.from({ length: numYears }).map((_, index) => ( <\n                div key = { index }\n                className = \"year-dropdown\" >\n                <\n                label htmlFor = { `year${index}` } > Year { index + 1 }: < /label> <\n                select id = { `year${index}` }\n                value = { selectedYears[index] || '' }\n                onChange = {\n                    (e) => handleYearChange(index, e) } >\n                <\n                option value = \"\" > Select Year < /option> {\n                    Array.from({ length: 20 }, (_, i) => 2025 - i).map((year) => ( <\n                        option key = { year }\n                        value = { year } > { year } < /option>\n                    ))\n                } <\n                /select> <\n                /div>\n            ))\n        } <\n        /div> <\n        label htmlFor = \"company\" > Select Company(Optional): < /label> <\n        select id = \"company\"\n        value = { selectedCompany }\n        onChange = { handleCompanyChange } >\n        <\n        option value = \"\" > All Companies < /option> {\n            companyList.length > 0 ? (\n                companyList.map((company) => ( <\n                    option key = { company._id }\n                    value = { company.name } > { company.name } < /option>\n                ))\n            ) : ( <\n                option value = \"\" > No Companies Available < /option>\n            )\n        } <\n        /select> <\n        button className = \"onee\"\n        onClick = { fetchPlacementData } > Submit < /button> {\n            placementData.length > 0 && labels.length > 0 && ( // Ensure both have values\n                <\n                div className = \"monitoring-chart\" >\n                <\n                Bar data = { chartData }\n                /> <\n                /div>\n            )\n        } <\n        /div>\n    );\n}\n\nexport default Monitoring;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}