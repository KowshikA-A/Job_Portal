{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/VerticalNavBar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './VerticalNavBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VerticalNavBar({\n  onFilterChange,\n  onYearChange,\n  toggleCompanyList,\n  showCompanyList,\n  onSchoolChange\n}) {\n  _s();\n  const [tooltip, setTooltip] = useState('');\n  const [tooltipPosition, setTooltipPosition] = useState({\n    top: 0,\n    left: 0\n  });\n  const [schools] = useState(['SMEC', 'SCOPE', 'SENSE']); // Static list of schools\n  const [types] = useState(['Super dream internship', 'Super dream offer', 'Dream offer', 'Dream internship', 'Restricted dream']); // Static list of types\n  const [years] = useState([2023, 2024, 2025]); // Example years\n  const [loading] = useState(false); // Static loading state\n\n  const handleMouseEnter = (text, event) => {\n    setTooltip(text);\n    const {\n      top,\n      left,\n      height\n    } = event.currentTarget.getBoundingClientRect();\n    const adjustedTop = top + height + window.scrollY;\n    const adjustedLeft = left + window.scrollX;\n    setTooltipPosition({\n      top: adjustedTop,\n      left: adjustedLeft\n    });\n  };\n  const handleMouseLeave = () => {\n    setTooltip('');\n  };\n  const handleSchoolChange = event => {\n    const selectedSchool = event.target.value;\n    onSchoolChange(selectedSchool); // Pass selected school filter to the parent component\n  };\n  const handleTypeChange = event => {\n    const selectedType = event.target.value;\n    onFilterChange('Type', selectedType); // Pass selected type filter to the parent component\n  };\n  const handleYearChange = event => {\n    const selectedYear = event.target.value;\n    onYearChange(selectedYear); // Trigger onYearChange with the selected year\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vertical-nav\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onFilterChange('All Students'),\n      children: \" All Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onFilterChange('Placed'),\n      children: \" Placed Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 41\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onFilterChange('Not placed'),\n      children: \" Not Placed Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 44\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleSchoolChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" Select School \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this), \" \", schools.map(school => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: school,\n        children: [\" \", school, \" \"]\n      }, school, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 39\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleYearChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" Select Year \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), \" \", years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: year,\n        children: [\"Year \", year, \" \"]\n      }, year, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 27\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: handleTypeChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" Select Type \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this), \" \", types.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: type,\n        children: [\" \", type, \" \"]\n      }, type, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 23\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCompanyList,\n      children: [\" \", showCompanyList ? 'Hide Companies' : 'Companies Visited', \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip\",\n      style: {\n        top: tooltipPosition.top,\n        left: tooltipPosition.left\n      },\n      children: [\" \", tooltip, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 1\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 14\n  }, this);\n}\n_s(VerticalNavBar, \"ywS4TzViyTm03nFU5lFX0SOGnYw=\");\n_c = VerticalNavBar;\nexport default VerticalNavBar;\nvar _c;\n$RefreshReg$(_c, \"VerticalNavBar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","VerticalNavBar","onFilterChange","onYearChange","toggleCompanyList","showCompanyList","onSchoolChange","_s","tooltip","setTooltip","tooltipPosition","setTooltipPosition","top","left","schools","types","years","loading","handleMouseEnter","text","event","height","currentTarget","getBoundingClientRect","adjustedTop","window","scrollY","adjustedLeft","scrollX","handleMouseLeave","handleSchoolChange","selectedSchool","target","value","handleTypeChange","selectedType","handleYearChange","selectedYear","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onChange","map","school","year","type","style","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/VerticalNavBar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './VerticalNavBar.css';\n\nfunction VerticalNavBar({ onFilterChange, onYearChange, toggleCompanyList, showCompanyList, onSchoolChange }) {\n    const [tooltip, setTooltip] = useState('');\n    const [tooltipPosition, setTooltipPosition] = useState({ top: 0, left: 0 });\n    const [schools] = useState(['SMEC', 'SCOPE', 'SENSE']); // Static list of schools\n    const [types] = useState(['Super dream internship', 'Super dream offer', 'Dream offer', 'Dream internship', 'Restricted dream']); // Static list of types\n    const [years] = useState([2023, 2024, 2025]); // Example years\n    const [loading] = useState(false); // Static loading state\n\n    const handleMouseEnter = (text, event) => {\n        setTooltip(text);\n        const { top, left, height } = event.currentTarget.getBoundingClientRect();\n        const adjustedTop = top + height + window.scrollY;\n        const adjustedLeft = left + window.scrollX;\n\n        setTooltipPosition({ top: adjustedTop, left: adjustedLeft });\n    };\n\n    const handleMouseLeave = () => {\n        setTooltip('');\n    };\n\n    const handleSchoolChange = (event) => {\n        const selectedSchool = event.target.value;\n        onSchoolChange(selectedSchool); // Pass selected school filter to the parent component\n    };\n\n    const handleTypeChange = (event) => {\n        const selectedType = event.target.value;\n        onFilterChange('Type', selectedType); // Pass selected type filter to the parent component\n    };\n\n    const handleYearChange = (event) => {\n        const selectedYear = event.target.value;\n        onYearChange(selectedYear); // Trigger onYearChange with the selected year\n    };\n\n    if (loading) {\n        return <div > Loading... < /div>;\n    }\n\n    return ( <\n            div className = \"vertical-nav\" >\n            <\n            button onClick = {\n                () => onFilterChange('All Students')\n            } > All Students < /button> <\n            button onClick = {\n                () => onFilterChange('Placed')\n            } > Placed Students < /button> <\n            button onClick = {\n                () => onFilterChange('Not placed')\n            } > Not Placed Students < /button>\n\n            <\n            select onChange = { handleSchoolChange } >\n            <\n            option value = \"\" > Select School < /option> {\n            schools.map((school) => ( <\n                option key = { school }\n                value = { school } > { school } <\n                /option>\n            ))\n        } <\n        /select>\n\n    <\n    select onChange = { handleYearChange } >\n        <\n        option value = \"\" > Select Year < /option> {\n    years.map((year) => ( <\n        option key = { year }\n        value = { year } >\n        Year { year } <\n        /option>\n    ))\n} <\n/select>\n\n<\nselect onChange = { handleTypeChange } >\n    <\n    option value = \"\" > Select Type < /option> {\ntypes.map((type) => ( <\n    option key = { type }\n    value = { type } > { type } <\n    /option>\n))\n} <\n/select>\n\n<\nbutton onClick = { toggleCompanyList } > { showCompanyList ? 'Hide Companies' : 'Companies Visited' } <\n    /button>\n\n<\ndiv className = \"tooltip\"\nstyle = {\n        { top: tooltipPosition.top, left: tooltipPosition.left }\n    } > { tooltip } <\n    /div> < /\n    div >\n);\n}\n\nexport default VerticalNavBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}