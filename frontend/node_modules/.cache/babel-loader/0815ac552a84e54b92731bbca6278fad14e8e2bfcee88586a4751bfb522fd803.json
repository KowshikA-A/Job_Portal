{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/CompanyList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyList = () => {\n  _s();\n  const [year, setYear] = useState('');\n  const [companies, setCompanies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleYearChange = event => {\n    setYear(event.target.value);\n  };\n  const fetchCompanies = async () => {\n    if (!year) return;\n    setLoading(true);\n    setError(null);\n    try {\n      const response = await axios.get(`http://localhost:1000/api/companies?year=${year}`);\n      setCompanies(response.data);\n    } catch (error) {\n      setError('Failed to fetch companies.');\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchCompanies();\n  }, [year]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Company List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"year\",\n      children: \" Select Year: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 42\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"year\",\n      value: year,\n      onChange: handleYearChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" Select a year \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2021\",\n        children: \" 2021 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 62\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2022\",\n        children: \" 2022 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 57\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2023\",\n        children: \" 2023 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 57\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"2024\",\n        children: \" 2024 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 57\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 65\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchCompanies,\n      children: \" Get Companies \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 26\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 32\n    }, this), \" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [\" \", companies.map(company => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", company.name, \" - Placed: \", company.placedCount, \" \"]\n      }, company.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 62\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 25\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 18\n  }, this);\n};\n_s(CompanyList, \"Yeg9JYnZgrb5VPCcU44SLC//BI0=\");\n_c = CompanyList;\nexport default CompanyList;\nvar _c;\n$RefreshReg$(_c, \"CompanyList\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","CompanyList","_s","year","setYear","companies","setCompanies","loading","setLoading","error","setError","handleYearChange","event","target","value","fetchCompanies","response","get","data","console","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","onClick","map","company","name","placedCount","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/CompanyList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\n\nconst CompanyList = () => {\n        const [year, setYear] = useState('');\n        const [companies, setCompanies] = useState([]);\n        const [loading, setLoading] = useState(false);\n        const [error, setError] = useState(null);\n\n        const handleYearChange = (event) => {\n            setYear(event.target.value);\n        };\n\n        const fetchCompanies = async() => {\n            if (!year) return;\n\n            setLoading(true);\n            setError(null);\n\n            try {\n                const response = await axios.get(`http://localhost:1000/api/companies?year=${year}`);\n                setCompanies(response.data);\n            } catch (error) {\n                setError('Failed to fetch companies.');\n                console.error(error);\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        useEffect(() => {\n            fetchCompanies();\n        }, [year]);\n\n        return ( <\n                div >\n                <\n                h2 > Company List < /h2> <\n                label htmlFor = \"year\" > Select Year: < /label> <\n                select id = \"year\"\n                value = { year }\n                onChange = { handleYearChange } >\n                <\n                option value = \"\" > Select a year < /option> <\n                option value = \"2021\" > 2021 < /option> <\n                option value = \"2022\" > 2022 < /option> <\n                option value = \"2023\" > 2023 < /option> <\n                option value = \"2024\" > 2024 < /option> <\n                /select> <\n                button onClick = { fetchCompanies } > Get Companies < /button>\n\n                {\n                    loading && < p > Loading... < /p>} {\n                        error && < p > { error } < /p>}\n\n                        <\n                        ul > {\n                                companies.map((company) => ( <\n                                    li key = { company.name } > { company.name } - Placed: { company.placedCount } <\n                                    /li>\n                                ))\n                            } <\n                            /ul> <\n                            /div>\n                    );\n                };\n\n                export default CompanyList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}