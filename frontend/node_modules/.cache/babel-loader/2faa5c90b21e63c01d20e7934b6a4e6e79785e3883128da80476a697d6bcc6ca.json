{"ast":null,"code":"export function groupByRegNo(students) {\n  return students.reduce((acc, student) => {\n    const regNo = student.Reg_No;\n    if (!acc[regNo]) {\n      // If Reg_No does not exist in the accumulator, create an entry\n      acc[regNo] = {\n        Name: student.Name,\n        Reg_No: student.Reg_No,\n        Year: student.Year,\n        Applications: []\n      };\n    }\n\n    // Push the application to the Applications array\n    acc[regNo].Applications.push({\n      Company: student.Company,\n      ApplicationStatus: student.ApplicationStatus\n    });\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["groupByRegNo","students","reduce","acc","student","regNo","Reg_No","Name","Year","Applications","push","Company","ApplicationStatus"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/utils/groupByRegNo.js"],"sourcesContent":["export function groupByRegNo(students) {\n    return students.reduce((acc, student) => {\n        const regNo = student.Reg_No;\n\n        if (!acc[regNo]) {\n            // If Reg_No does not exist in the accumulator, create an entry\n            acc[regNo] = {\n                Name: student.Name,\n                Reg_No: student.Reg_No,\n                Year: student.Year,\n                Applications: []\n            };\n        }\n\n        // Push the application to the Applications array\n        acc[regNo].Applications.push({\n            Company: student.Company,\n            ApplicationStatus: student.ApplicationStatus\n        });\n\n        return acc;\n    }, {});\n}"],"mappings":"AAAA,OAAO,SAASA,YAAYA,CAACC,QAAQ,EAAE;EACnC,OAAOA,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IACrC,MAAMC,KAAK,GAAGD,OAAO,CAACE,MAAM;IAE5B,IAAI,CAACH,GAAG,CAACE,KAAK,CAAC,EAAE;MACb;MACAF,GAAG,CAACE,KAAK,CAAC,GAAG;QACTE,IAAI,EAAEH,OAAO,CAACG,IAAI;QAClBD,MAAM,EAAEF,OAAO,CAACE,MAAM;QACtBE,IAAI,EAAEJ,OAAO,CAACI,IAAI;QAClBC,YAAY,EAAE;MAClB,CAAC;IACL;;IAEA;IACAN,GAAG,CAACE,KAAK,CAAC,CAACI,YAAY,CAACC,IAAI,CAAC;MACzBC,OAAO,EAAEP,OAAO,CAACO,OAAO;MACxBC,iBAAiB,EAAER,OAAO,CAACQ;IAC/B,CAAC,CAAC;IAEF,OAAOT,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}