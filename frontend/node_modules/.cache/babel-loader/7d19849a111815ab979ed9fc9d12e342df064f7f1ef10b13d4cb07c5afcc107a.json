{"ast":null,"code":"export function groupByRegNo(students){return students.reduce((acc,student)=>{const regNo=student.Reg_No;if(!acc[regNo]){// If Reg_No does not exist in the accumulator, create an entry\nacc[regNo]={Name:student.Name,Reg_No:student.Reg_No,Year:student.Year,School:student.School,Applications:[]};}// Push the application details to the Applications array\nacc[regNo].Applications.push({Company:student.Company,ApplicationStatus:student.ApplicationStatus,Type:student.Type,CTC:student.CTC});return acc;},{});}","map":{"version":3,"names":["groupByRegNo","students","reduce","acc","student","regNo","Reg_No","Name","Year","School","Applications","push","Company","ApplicationStatus","Type","CTC"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/utils/groupByRegNo.js"],"sourcesContent":["export function groupByRegNo(students) {\n    return students.reduce((acc, student) => {\n        const regNo = student.Reg_No;\n\n        if (!acc[regNo]) {\n            // If Reg_No does not exist in the accumulator, create an entry\n            acc[regNo] = {\n                Name: student.Name,\n                Reg_No: student.Reg_No,\n                Year: student.Year,\n                School: student.School,\n                Applications: []\n            };\n        }\n\n        // Push the application details to the Applications array\n        acc[regNo].Applications.push({\n            Company: student.Company,\n            ApplicationStatus: student.ApplicationStatus,\n            Type: student.Type,\n            CTC: student.CTC\n        });\n\n        return acc;\n    }, {});\n}"],"mappings":"AAAA,MAAO,SAAS,CAAAA,YAAYA,CAACC,QAAQ,CAAE,CACnC,MAAO,CAAAA,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,CAAEC,OAAO,GAAK,CACrC,KAAM,CAAAC,KAAK,CAAGD,OAAO,CAACE,MAAM,CAE5B,GAAI,CAACH,GAAG,CAACE,KAAK,CAAC,CAAE,CACb;AACAF,GAAG,CAACE,KAAK,CAAC,CAAG,CACTE,IAAI,CAAEH,OAAO,CAACG,IAAI,CAClBD,MAAM,CAAEF,OAAO,CAACE,MAAM,CACtBE,IAAI,CAAEJ,OAAO,CAACI,IAAI,CAClBC,MAAM,CAAEL,OAAO,CAACK,MAAM,CACtBC,YAAY,CAAE,EAClB,CAAC,CACL,CAEA;AACAP,GAAG,CAACE,KAAK,CAAC,CAACK,YAAY,CAACC,IAAI,CAAC,CACzBC,OAAO,CAAER,OAAO,CAACQ,OAAO,CACxBC,iBAAiB,CAAET,OAAO,CAACS,iBAAiB,CAC5CC,IAAI,CAAEV,OAAO,CAACU,IAAI,CAClBC,GAAG,CAAEX,OAAO,CAACW,GACjB,CAAC,CAAC,CAEF,MAAO,CAAAZ,GAAG,CACd,CAAC,CAAE,CAAC,CAAC,CAAC,CACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}