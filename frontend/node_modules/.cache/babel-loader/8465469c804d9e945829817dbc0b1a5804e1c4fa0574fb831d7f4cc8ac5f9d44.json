{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/CTCChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2'; // Import Line chart\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register necessary Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst CTCChart = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const [loading, setLoading] = useState(true); // Track loading state\n\n  useEffect(() => {\n    // Fetch data from the backend\n    axios.get('/api/students/ctc-by-school-year').then(response => {\n      const data = response.data;\n      console.log('Backend data:', data); // Debug: Check data structure\n\n      if (!data || data.length === 0) {\n        console.log(\"No data received\");\n        setLoading(false);\n        return;\n      }\n\n      // Get unique schools and years\n      const schools = [...new Set(data.map(item => item.school))];\n      const years = [...new Set(data.map(item => item.year))].sort((a, b) => a - b); // Sort years numerically\n\n      // Create color palette for each school\n      const colors = schools.map((_, index) => `hsl(${index * 360 / schools.length}, 70%, 50%)`);\n\n      // Initialize datasets for each school\n      const datasets = schools.map((school, index) => {\n        // Get max CTC data for each school and year\n        const schoolData = years.map(year => {\n          const item = data.find(d => d.school === school && d.year === year);\n          return item ? item.maxCTC : null; // Return max CTC or null if no data\n        });\n        console.log(`${school} Data:`, schoolData); // Debug: Check data for each school\n\n        return {\n          label: school,\n          data: schoolData,\n          backgroundColor: 'transparent',\n          // No background for lines\n          borderColor: colors[index],\n          // Different color for each school\n          borderWidth: 2,\n          // Width of the line\n          fill: false,\n          // Do not fill under the line\n          tension: 0.4 // Smooth curve\n        };\n      });\n\n      // Set the data for the chart\n      setChartData({\n        labels: years,\n        datasets\n      });\n      setLoading(false); // Stop loading after data is set\n    }).catch(error => {\n      console.error(\"Error fetching data:\", error);\n      setLoading(false); // Stop loading on error\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Max CTC by School and Year \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), \" \", loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading chart data... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 25\n    }, this) : chartData ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart-container\",\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false,\n          // Allow height to be controlled\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Year'\n              }\n            },\n            y: {\n              beginAtZero: false,\n              // Adjust Y-axis to start from the lowest CTC value\n              title: {\n                display: true,\n                text: 'CTC in LPA'\n              },\n              ticks: {\n                callback: function (value) {\n                  return value + ' LPA'; // Format the Y-axis values as 'LPA'\n                }\n              }\n            }\n          },\n          plugins: {\n            legend: {\n              position: 'top',\n              labels: {\n                boxWidth: 20,\n                // Size of the box next to each legend item\n                padding: 15 // Padding between legend items\n              }\n            },\n            tooltip: {\n              callbacks: {\n                label: function (tooltipItem) {\n                  return tooltipItem.raw + ' LPA'; // Format tooltips\n                }\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No data available to display. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 14\n  }, this);\n};\n_s(CTCChart, \"yu6F9SEAxwq5/JesOMjgMRR2m1s=\");\n_c = CTCChart;\nexport default CTCChart;\nvar _c;\n$RefreshReg$(_c, \"CTCChart\");","map":{"version":3,"names":["React","useEffect","useState","Line","axios","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","CTCChart","_s","chartData","setChartData","loading","setLoading","get","then","response","data","console","log","length","schools","Set","map","item","school","years","year","sort","a","b","colors","_","index","datasets","schoolData","find","d","maxCTC","label","backgroundColor","borderColor","borderWidth","fill","tension","labels","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","options","responsive","maintainAspectRatio","scales","x","title","display","text","y","beginAtZero","ticks","callback","value","plugins","legend","position","boxWidth","padding","tooltip","callbacks","tooltipItem","raw","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/CTCChart.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Line } from 'react-chartjs-2'; // Import Line chart\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register necessary Chart.js components\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\n\nconst CTCChart = () => {\n    const [chartData, setChartData] = useState(null);\n    const [loading, setLoading] = useState(true); // Track loading state\n\n    useEffect(() => {\n        // Fetch data from the backend\n        axios.get('/api/students/ctc-by-school-year')\n            .then(response => {\n                const data = response.data;\n                console.log('Backend data:', data); // Debug: Check data structure\n\n                if (!data || data.length === 0) {\n                    console.log(\"No data received\");\n                    setLoading(false);\n                    return;\n                }\n\n                // Get unique schools and years\n                const schools = [...new Set(data.map(item => item.school))];\n                const years = [...new Set(data.map(item => item.year))].sort((a, b) => a - b); // Sort years numerically\n\n                // Create color palette for each school\n                const colors = schools.map((_, index) => `hsl(${(index * 360) / schools.length}, 70%, 50%)`);\n\n                // Initialize datasets for each school\n                const datasets = schools.map((school, index) => {\n                    // Get max CTC data for each school and year\n                    const schoolData = years.map(year => {\n                        const item = data.find(d => d.school === school && d.year === year);\n                        return item ? item.maxCTC : null; // Return max CTC or null if no data\n                    });\n\n                    console.log(`${school} Data:`, schoolData); // Debug: Check data for each school\n\n                    return {\n                        label: school,\n                        data: schoolData,\n                        backgroundColor: 'transparent', // No background for lines\n                        borderColor: colors[index], // Different color for each school\n                        borderWidth: 2, // Width of the line\n                        fill: false, // Do not fill under the line\n                        tension: 0.4 // Smooth curve\n                    };\n                });\n\n                // Set the data for the chart\n                setChartData({\n                    labels: years,\n                    datasets\n                });\n                setLoading(false); // Stop loading after data is set\n            })\n            .catch(error => {\n                console.error(\"Error fetching data:\", error);\n                setLoading(false); // Stop loading on error\n            });\n    }, []);\n\n    return ( <\n        div >\n        <\n        h2 > Max CTC by School and Year < /h2> {\n            loading ? ( <\n                p > Loading chart data... < /p>\n            ) : chartData ? ( <\n                div className = \"chart-container\" >\n                <\n                Line data = { chartData }\n                options = {\n                    {\n                        responsive: true,\n                        maintainAspectRatio: false, // Allow height to be controlled\n                        scales: {\n                            x: {\n                                title: {\n                                    display: true,\n                                    text: 'Year'\n                                }\n                            },\n                            y: {\n                                beginAtZero: false, // Adjust Y-axis to start from the lowest CTC value\n                                title: {\n                                    display: true,\n                                    text: 'CTC in LPA'\n                                },\n                                ticks: {\n                                    callback: function(value) {\n                                        return value + ' LPA'; // Format the Y-axis values as 'LPA'\n                                    }\n                                }\n                            }\n                        },\n                        plugins: {\n                            legend: {\n                                position: 'top',\n                                labels: {\n                                    boxWidth: 20, // Size of the box next to each legend item\n                                    padding: 15 // Padding between legend items\n                                }\n                            },\n                            tooltip: {\n                                callbacks: {\n                                    label: function(tooltipItem) {\n                                        return tooltipItem.raw + ' LPA'; // Format tooltips\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n                /> <\n                /div>\n            ) : ( <\n                p > No data available to display. < /p>\n            )\n        } <\n        /div>\n    );\n};\n\nexport default CTCChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}