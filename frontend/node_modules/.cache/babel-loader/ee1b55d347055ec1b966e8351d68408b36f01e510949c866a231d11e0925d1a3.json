{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList({\n  filter,\n  year,\n  searchTerm\n}) {\n  _s();\n  const [students, setStudents] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  useEffect(() => {\n    const loadStudents = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchStudents(filter, year, searchTerm);\n        console.log('Fetched student data:', data); // Log to verify the data\n        if (Array.isArray(data)) {\n          // Apply searchTerm filter before grouping\n          const filteredData = data.filter(student => student.name.toLowerCase().includes(searchTerm.toLowerCase()));\n          const groupedData = groupByRegNo(filteredData); // Group by Reg_No\n          setStudents(groupedData);\n        } else {\n          console.error('Fetched data is not an array:', data);\n          setError('Unexpected data format from server.');\n        }\n      } catch (error) {\n        console.error('Error loading students:', error);\n        setError('Failed to load student data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadStudents();\n  }, [filter, year, searchTerm]);\n  const handleStudentClick = student => {\n    setSelectedStudent(student);\n  };\n  const closeModal = () => {\n    setSelectedStudent(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: '20px',\n        fontSize: '30px'\n      },\n      children: \" Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-cards-container\",\n      children: [\" \", Object.keys(students).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No students found matching this criteria. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 56\n      }, this) : Object.values(students).map(studentGroup => studentGroup.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleStudentClick(student),\n        children: [/*#__PURE__*/_jsxDEV(StudentCard, {\n          student: student\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), \" \"]\n      }, student.Reg_No, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 55\n      }, this))), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }, this), \" \", selectedStudent && /*#__PURE__*/_jsxDEV(StudentDetailModal, {\n      student: selectedStudent,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 34\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"yyozlw0A1m59L6xhmf2OcIuQ8pE=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","StudentCard","StudentDetailModal","fetchStudents","groupByRegNo","jsxDEV","_jsxDEV","StudentList","filter","year","searchTerm","_s","students","setStudents","loading","setLoading","error","setError","selectedStudent","setSelectedStudent","loadStudents","data","console","log","Array","isArray","filteredData","student","name","toLowerCase","includes","groupedData","handleStudentClick","closeModal","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginLeft","fontSize","Object","keys","length","values","map","studentGroup","onClick","Reg_No","onClose","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\n\nfunction StudentList({ filter, year, searchTerm }) {\n    const [students, setStudents] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedStudent, setSelectedStudent] = useState(null);\n\n    useEffect(() => {\n        const loadStudents = async() => {\n            try {\n                setLoading(true);\n                const data = await fetchStudents(filter, year, searchTerm);\n                console.log('Fetched student data:', data); // Log to verify the data\n                if (Array.isArray(data)) {\n                    // Apply searchTerm filter before grouping\n                    const filteredData = data.filter(student =>\n                        student.name.toLowerCase().includes(searchTerm.toLowerCase())\n                    );\n                    const groupedData = groupByRegNo(filteredData); // Group by Reg_No\n                    setStudents(groupedData);\n                } else {\n                    console.error('Fetched data is not an array:', data);\n                    setError('Unexpected data format from server.');\n                }\n            } catch (error) {\n                console.error('Error loading students:', error);\n                setError('Failed to load student data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadStudents();\n    }, [filter, year, searchTerm]);\n\n    const handleStudentClick = (student) => {\n        setSelectedStudent(student);\n    };\n\n    const closeModal = () => {\n        setSelectedStudent(null);\n    };\n\n    if (loading) {\n        return <p > Loading... < /p>;\n    }\n\n    if (error) {\n        return <p className = \"error-message\" > { error } < /p>;\n    }\n\n    return ( <\n            div className = \"student-list\" >\n            <\n            h2 style = {\n                { marginLeft: '20px', fontSize: '30px' }\n            } > Students < /h2> <\n            div className = \"student-cards-container\" > {\n                Object.keys(students).length === 0 ? ( <\n                    p > No students found matching this criteria. < /p>\n                ) : (\n                    Object.values(students).map((studentGroup) => (\n                        studentGroup.map(student => ( <\n                            div key = { student.Reg_No }\n                            onClick = {\n                                () => handleStudentClick(student)\n                            } >\n                            <\n                            StudentCard student = { student }\n                            /> < /\n                            div >\n                        ))\n                    ))\n                )\n            } <\n            /div> {\n            selectedStudent && ( <\n                StudentDetailModal student = { selectedStudent }\n                onClose = { closeModal }\n                />\n            )\n        } <\n        /div>\n);\n}\n\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}