{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './UploadPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst requiredColumns = ['Name', 'Reg_No', 'Year', 'School', 'Company', 'ApplicationStatus', 'Category', 'CTC'];\nconst UploadPage = () => {\n  _s();\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [statusType, setStatusType] = useState('');\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setUploadStatus('');\n    setStatusType('');\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      setStatusType('error');\n      setUploadStatus('Please select a file to upload');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setStatusType('success');\n      setUploadStatus(response.data.message || 'File uploaded successfully');\n      setSelectedFile(null);\n    } catch (error) {\n      let details = {};\n      let errorMessage = 'File validation failed';\n\n      // Check if error.response and error.response.data exist\n      if (error.response && error.response.data) {\n        details = error.response.data.details || {};\n        errorMessage = error.response.data.message || errorMessage;\n      }\n      let fullMessage = `${errorMessage}. `;\n      if (details.missingColumns && details.missingColumns.length) {\n        fullMessage += `Missing Columns: ${details.missingColumns.join(', ')}. `;\n      }\n      if (details.extraColumns && details.extraColumns.length) {\n        fullMessage += `Extra Columns: ${details.extraColumns.join(', ')}. `;\n      }\n      fullMessage += `Expected Columns: ${requiredColumns.join(', ')}.`;\n      setStatusType('error');\n      setUploadStatus(fullMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" File Upload \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Ensure your file matches the required format. \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"required-columns\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \" Required Columns: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\" \", requiredColumns.map((col, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", col, \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 51\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 39\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 65\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".csv,.json,.xlsx\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleFileUpload,\n      disabled: !selectedFile,\n      children: \"Upload \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), \" \", uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: statusType === 'success' ? 'success-message' : 'error-message',\n      children: [\" \", uploadStatus, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 31\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 14\n  }, this);\n};\n_s(UploadPage, \"GTdW2yg7U8fY3dMGOuqO0hj9lZ8=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","requiredColumns","UploadPage","_s","uploadStatus","setUploadStatus","statusType","setStatusType","selectedFile","setSelectedFile","handleFileChange","e","target","files","handleFileUpload","formData","FormData","append","response","post","headers","data","message","error","details","errorMessage","fullMessage","missingColumns","length","join","extraColumns","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","col","index","type","onChange","accept","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './UploadPage.css';\n\nconst requiredColumns = [\n    'Name',\n    'Reg_No',\n    'Year',\n    'School',\n    'Company',\n    'ApplicationStatus',\n    'Category',\n    'CTC',\n];\n\nconst UploadPage = () => {\n    const [uploadStatus, setUploadStatus] = useState('');\n    const [statusType, setStatusType] = useState('');\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n        setUploadStatus('');\n        setStatusType('');\n    };\n\n    const handleFileUpload = async() => {\n        if (!selectedFile) {\n            setStatusType('error');\n            setUploadStatus('Please select a file to upload');\n            return;\n        }\n\n        try {\n            const formData = new FormData();\n            formData.append('file', selectedFile);\n\n            const response = await axios.post('/api/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            setStatusType('success');\n            setUploadStatus(response.data.message || 'File uploaded successfully');\n            setSelectedFile(null);\n        } catch (error) {\n            let details = {};\n            let errorMessage = 'File validation failed';\n\n            // Check if error.response and error.response.data exist\n            if (error.response && error.response.data) {\n                details = error.response.data.details || {};\n                errorMessage = error.response.data.message || errorMessage;\n            }\n\n            let fullMessage = `${errorMessage}. `;\n            if (details.missingColumns && details.missingColumns.length) {\n                fullMessage += `Missing Columns: ${details.missingColumns.join(', ')}. `;\n            }\n            if (details.extraColumns && details.extraColumns.length) {\n                fullMessage += `Extra Columns: ${details.extraColumns.join(', ')}. `;\n            }\n            fullMessage += `Expected Columns: ${requiredColumns.join(', ')}.`;\n\n            setStatusType('error');\n            setUploadStatus(fullMessage);\n        }\n    };\n\n    return ( <\n        div className = \"upload-container\" >\n        <\n        h1 > File Upload < /h1> <\n        p > Ensure your file matches the required format. < /p> <\n        div className = \"required-columns\" >\n        <\n        h3 > Required Columns: < /h3> <\n        ul > {\n            requiredColumns.map((col, index) => ( <\n                li key = { index } > { col } < /li>\n            ))\n        } <\n        /ul> <\n        /div> <\n        input type = \"file\"\n        onChange = { handleFileChange }\n        accept = \".csv,.json,.xlsx\" /\n        >\n        <\n        button className = \"upload-button\"\n        onClick = { handleFileUpload }\n        disabled = {!selectedFile } >\n        Upload <\n        /button> {\n            uploadStatus && ( <\n                p className = { statusType === 'success' ? 'success-message' : 'error-message' } > { uploadStatus } <\n                /p>\n            )\n        } <\n        /div>\n    );\n};\n\nexport default UploadPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}