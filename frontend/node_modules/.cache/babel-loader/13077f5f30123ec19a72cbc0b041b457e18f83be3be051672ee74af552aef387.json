{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/UploadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './UploadPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = () => {\n  _s();\n  const [uploadStatus, setUploadStatus] = useState('');\n  const [statusType, setStatusType] = useState(''); // 'success' or 'error'\n  const [selectedFile, setSelectedFile] = useState(null);\n  const handleFileChange = e => {\n    setSelectedFile(e.target.files[0]);\n    setUploadStatus(''); // Clear any previous messages when a new file is selected\n    setStatusType('');\n  };\n  const handleFileUpload = async () => {\n    if (!selectedFile) {\n      setStatusType('error');\n      setUploadStatus('Please select a file to upload');\n      return;\n    }\n    try {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      const response = await axios.post('/api/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setStatusType('success');\n      setUploadStatus(response.data.message || 'File uploaded successfully'); // Success message from the backend\n      setSelectedFile(null);\n    } catch (error) {\n      console.error('Upload error:', error);\n      const errorMessage = error.response && error.response.data && error.response.data.message || 'An error occurred during upload. Please ensure the file has the correct format and required columns.';\n      setStatusType('error');\n      setUploadStatus(`Error uploading file: ${String(errorMessage)}`);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" File Upload \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        className: \"red-text\",\n        children: \" NOTE: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), \" The file you upload here will be added to the database. The file format should be '.CSV' or '.JSON'. \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 37\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \" Required columns: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"red-text\",\n        children: [\"Name, Reg_No, Year, School, Company, ApplicationStatus \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue-text\",\n          children: \" (Applied, Shortlisted, Placed, Not placed), \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 68\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"red-text\",\n          children: \" Category \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 97\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"blue-text\",\n          children: \" (Super dream internship, Super dream offer, Dream offer, Dream internship, Restricted dream offer), \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 60\n        }, this), \"CTC \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 51\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 20\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".csv,.json\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"upload-button\",\n      onClick: handleFileUpload,\n      disabled: !selectedFile,\n      children: \"Upload \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), \" \", uploadStatus && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: statusType === 'success' ? 'success-message' : 'error-message',\n      children: [\" \", uploadStatus, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 31\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 14\n  }, this);\n};\n_s(UploadPage, \"GTdW2yg7U8fY3dMGOuqO0hj9lZ8=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadPage","_s","uploadStatus","setUploadStatus","statusType","setStatusType","selectedFile","setSelectedFile","handleFileChange","e","target","files","handleFileUpload","formData","FormData","append","response","post","headers","data","message","error","console","errorMessage","String","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/UploadPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './UploadPage.css';\n\nconst UploadPage = () => {\n    const [uploadStatus, setUploadStatus] = useState('');\n    const [statusType, setStatusType] = useState(''); // 'success' or 'error'\n    const [selectedFile, setSelectedFile] = useState(null);\n\n    const handleFileChange = (e) => {\n        setSelectedFile(e.target.files[0]);\n        setUploadStatus(''); // Clear any previous messages when a new file is selected\n        setStatusType('');\n    };\n\n    const handleFileUpload = async() => {\n        if (!selectedFile) {\n            setStatusType('error');\n            setUploadStatus('Please select a file to upload');\n            return;\n        }\n\n        try {\n            const formData = new FormData();\n            formData.append('file', selectedFile);\n\n            const response = await axios.post('/api/upload', formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data',\n                },\n            });\n\n            setStatusType('success');\n            setUploadStatus(response.data.message || 'File uploaded successfully'); // Success message from the backend\n            setSelectedFile(null);\n        } catch (error) {\n            console.error('Upload error:', error);\n\n            const errorMessage =\n                (error.response && error.response.data && error.response.data.message) ||\n                'An error occurred during upload. Please ensure the file has the correct format and required columns.';\n\n            setStatusType('error');\n            setUploadStatus(`Error uploading file: ${String(errorMessage)}`);\n        }\n    };\n\n    return ( <\n            div className = \"upload-container\" >\n            <\n            h1 > File Upload < /h1> <\n            span >\n            <\n            strong className = \"red-text\" > NOTE: < /strong> The file you upload here will be added to the database. The file format should be '.CSV' or '.JSON'. < /\n            span > <\n            p >\n            <\n            strong > Required columns: < /strong> <\n            span className = \"red-text\" >\n            Name, Reg_No, Year, School, Company, ApplicationStatus <\n            span className = \"blue-text\" > (Applied, Shortlisted, Placed, Not placed), < /span> <\n            span className = \"red-text\" > Category < /span><\n            span className = \"blue-text\" > (Super dream internship, Super dream offer, Dream offer, Dream internship, Restricted dream offer), < /span>\n            CTC <\n            /span> < /\n            p > <\n            input type = \"file\"\n            onChange = { handleFileChange }\n            accept = \".csv,.json\" /\n            >\n            <\n            button className = \"upload-button\"\n            onClick = { handleFileUpload }\n            disabled = {!selectedFile } >\n            Upload <\n            /button> {\n            uploadStatus && ( <\n                p className = { statusType === 'success' ? 'success-message' : 'error-message' } > { uploadStatus } <\n                /p>\n            )\n        } <\n        /div>\n);\n};\n\nexport default UploadPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}