{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/Stats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Stats.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Stats = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:1000/api/stats');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const jsonData = await response.json();\n        setData(jsonData);\n      } catch (error) {\n        setError(error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"stats-container\",\n    children: [\" \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\" Error fetching data: \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 26\n    }, this), \" \", data.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"description\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          className: \"red-text\",\n          children: \" Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this), \" Displays total students, placed students, not placed students, and the highest CTC with top student information. \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, this), \" \", data.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stats-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"year\",\n          children: [\" Year: \", item.year, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"total-students\",\n          children: [\" Total Students: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", item.total, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 82\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 84\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"placed\",\n          children: [\" Placed: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", item.placed, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 66\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"not-placed\",\n          children: [\" Not Placed: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", item.notPlaced, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 74\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"max-ctc\",\n          children: [\" Highest CTC: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", item.maxCTC, \"LPA \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 72\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }, this), \" \", item.topStudent && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"top-student\",\n          children: [\"Top Student: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", item.topStudent.name, \"at \", item.topStudent.company, \"(\", item.topStudent.ctc, \") \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 54\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 58\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 57\n      }, this)), \" \"]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" No data available \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 27\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 18\n  }, this);\n};\n_s(Stats, \"cszHKwWEzDE0UtpvAgndrhx973E=\");\n_c = Stats;\nexport default Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Stats","_s","error","setError","data","setData","fetchData","response","fetch","ok","Error","jsonData","json","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","index","year","total","placed","notPlaced","maxCTC","topStudent","name","company","ctc","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/Stats.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Stats.css';\n\nconst Stats = () => {\n        const [error, setError] = useState(null);\n        const [data, setData] = useState([]);\n\n        useEffect(() => {\n            const fetchData = async() => {\n                try {\n                    const response = await fetch('http://localhost:1000/api/stats');\n                    if (!response.ok) {\n                        throw new Error('Network response was not ok');\n                    }\n                    const jsonData = await response.json();\n                    setData(jsonData);\n                } catch (error) {\n                    setError(error.message);\n                }\n            };\n\n            fetchData();\n        }, []);\n\n        return ( <\n            div className = \"stats-container\" > {\n                error && < p className = \"error-message\" > Error fetching data: { error } < /p>} {\n                    data.length > 0 ? ( <\n                        >\n                        <\n                        p className = \"description\" >\n                        <\n                        strong className = \"red-text\" > Description: < /strong> Displays total students, placed students, not placed students, and the highest CTC with top student information. <\n                        /p> {\n                            data.map((item, index) => ( <\n                                div key = { index }\n                                className = \"stats-card\" >\n                                <\n                                h4 className = \"year\" > Year: { item.year } < /h4> <\n                                p className = \"total-students\" > Total Students: < span > { item.total } < /span></p >\n                                <\n                                p className = \"placed\" > Placed: < span > { item.placed } < /span></p >\n                                <\n                                p className = \"not-placed\" > Not Placed: < span > { item.notPlaced } < /span></p >\n                                <\n                                p className = \"max-ctc\" > Highest CTC: < span > { item.maxCTC }\n                                LPA < /span></p > {\n                                    item.topStudent && ( <\n                                        p className = \"top-student\" >\n                                        Top Student: < span > { item.topStudent.name }\n                                        at { item.topStudent.company }({ item.topStudent.ctc }) < /span> <\n                                        /p>\n                                    )\n                                } <\n                                /div>\n                            ))\n                        } <\n                        />\n                    ) : ( <\n                        p > No data available < /p>\n                    )\n                } <\n                /div>\n            );\n        };\n\n        export default Stats;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}