{"ast":null,"code":"// api/studentAPI.js\nimport axios from 'axios';\n\n// api/studentAPI.js\nexport const fetchStudents = async (filter, year, searchTerm, schoolFilter, typeFilter) => {\n  try {\n    // Decide which API to call based on school or type filter\n    let url = '';\n    if (schoolFilter) {\n      url = `/api/students/school?schoolFilter=${schoolFilter}&filter=${filter}&year=${year}&searchTerm=${searchTerm}&typeFilter=${typeFilter}`;\n    } else if (typeFilter) {\n      url = `/api/students/type?typeFilter=${typeFilter}&filter=${filter}&year=${year}&searchTerm=${searchTerm}&schoolFilter=${schoolFilter}`;\n    } else {\n      // Handle case where no filter is selected\n      url = `/api/students/school?filter=${filter}&year=${year}&searchTerm=${searchTerm}&schoolFilter=${schoolFilter}&typeFilter=${typeFilter}`;\n    }\n    const response = await fetch(url);\n    if (!response.ok) {\n      throw new Error('Failed to fetch students');\n    }\n    const data = await response.json();\n    return data;\n  } catch (error) {\n    console.error('Error fetching students:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","fetchStudents","filter","year","searchTerm","schoolFilter","typeFilter","url","response","fetch","ok","Error","data","json","error","console"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/api/studentAPI.js"],"sourcesContent":["// api/studentAPI.js\nimport axios from 'axios';\n\n// api/studentAPI.js\nexport const fetchStudents = async(filter, year, searchTerm, schoolFilter, typeFilter) => {\n    try {\n        // Decide which API to call based on school or type filter\n        let url = '';\n\n        if (schoolFilter) {\n            url = `/api/students/school?schoolFilter=${schoolFilter}&filter=${filter}&year=${year}&searchTerm=${searchTerm}&typeFilter=${typeFilter}`;\n        } else if (typeFilter) {\n            url = `/api/students/type?typeFilter=${typeFilter}&filter=${filter}&year=${year}&searchTerm=${searchTerm}&schoolFilter=${schoolFilter}`;\n        } else {\n            // Handle case where no filter is selected\n            url = `/api/students/school?filter=${filter}&year=${year}&searchTerm=${searchTerm}&schoolFilter=${schoolFilter}&typeFilter=${typeFilter}`;\n        }\n\n        const response = await fetch(url);\n        if (!response.ok) {\n            throw new Error('Failed to fetch students');\n        }\n        const data = await response.json();\n        return data;\n    } catch (error) {\n        console.error('Error fetching students:', error);\n        throw error;\n    }\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAMC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,YAAY,EAAEC,UAAU,KAAK;EACtF,IAAI;IACA;IACA,IAAIC,GAAG,GAAG,EAAE;IAEZ,IAAIF,YAAY,EAAE;MACdE,GAAG,GAAG,qCAAqCF,YAAY,WAAWH,MAAM,SAASC,IAAI,eAAeC,UAAU,eAAeE,UAAU,EAAE;IAC7I,CAAC,MAAM,IAAIA,UAAU,EAAE;MACnBC,GAAG,GAAG,iCAAiCD,UAAU,WAAWJ,MAAM,SAASC,IAAI,eAAeC,UAAU,iBAAiBC,YAAY,EAAE;IAC3I,CAAC,MAAM;MACH;MACAE,GAAG,GAAG,+BAA+BL,MAAM,SAASC,IAAI,eAAeC,UAAU,iBAAiBC,YAAY,eAAeC,UAAU,EAAE;IAC7I;IAEA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;IACjC,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}