{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupStudents } from '../utils/groupByReg'; // Use the updated groupStudents function\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList({\n  filter,\n  year,\n  searchTerm\n}) {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  const [groupBy, setGroupBy] = useState('Reg_No'); // Default group by Reg_No\n\n  useEffect(() => {\n    const loadStudents = async () => {\n      setLoading(true);\n      setError(null);\n      try {\n        // Fetch student data based on filters (year, searchTerm, and groupBy)\n        const data = await fetchStudents(filter, year, searchTerm);\n        console.log(\"Fetched data:\", data);\n        if (Array.isArray(data)) {\n          // Group students based on the groupBy criteria (Reg_No or School)\n          const groupedData = groupStudents(data, groupBy);\n          console.log(\"Grouped data:\", groupedData);\n\n          // If the groupBy is School, update the students to be displayed based on the selected school\n          if (groupBy === 'School') {\n            // Display all students grouped by school\n            setStudents(groupedData);\n          } else {\n            // Display all students grouped by Reg_No\n            setStudents(groupedData);\n          }\n        } else {\n          console.error('Fetched data is not an array:', data);\n          setStudents([]);\n          setError('Unexpected data format from server.');\n        }\n      } catch (error) {\n        console.error('Error loading students:', error);\n        setError('Failed to load student data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadStudents();\n  }, [filter, year, searchTerm, groupBy]);\n  const handleStudentClick = student => {\n    setSelectedStudent(student);\n  };\n  const closeModal = () => {\n    setSelectedStudent(null);\n  };\n  const handleSchoolFilterChange = school => {\n    // Set groupBy to School and filter students by the selected school\n    setGroupBy('School');\n    setStudents(prevData => prevData[school] || []);\n  };\n  const handleClearFilter = () => {\n    // Clear school filter and revert back to grouping by Reg_No\n    setGroupBy('Reg_No');\n    // Optionally, reset the students state to display all students grouped by Reg_No\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: '20px',\n        fontSize: '30px'\n      },\n      children: \" Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      style: {\n        marginLeft: '20px',\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"student-filter-button\",\n        onClick: () => handleSchoolFilterChange('SCOPE'),\n        children: \" SCOPE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"student-filter-button\",\n        onClick: () => handleSchoolFilterChange('SENSE'),\n        children: \" SENSE \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 34\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"student-filter-button\",\n        onClick: () => handleSchoolFilterChange('SMEC'),\n        children: \" SMEC \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 34\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"student-filter-button\",\n        onClick: handleClearFilter,\n        children: \" All Students \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 33\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 72\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-cards-container\",\n      children: [\" \", students.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No students found matching this criteria. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 43\n      }, this) : Object.keys(students).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", key, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 29\n        }, this), \" \", / * This could be Reg_No or School * /, \" \", students[key].map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleStudentClick(student),\n          children: [/*#__PURE__*/_jsxDEV(StudentCard, {\n            student: student\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 33\n          }, this), \" \"]\n        }, student.Reg_No, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 60\n        }, this)), \" \"]\n      }, key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 56\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), selectedStudent && /*#__PURE__*/_jsxDEV(StudentDetailModal, {\n      student: selectedStudent,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 30\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"5DDgQ/yXSfWy7SdBWYQlKAgG1Eo=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","StudentCard","StudentDetailModal","fetchStudents","groupStudents","jsxDEV","_jsxDEV","StudentList","filter","year","searchTerm","_s","students","setStudents","loading","setLoading","error","setError","selectedStudent","setSelectedStudent","groupBy","setGroupBy","loadStudents","data","console","log","Array","isArray","groupedData","handleStudentClick","student","closeModal","handleSchoolFilterChange","school","prevData","handleClearFilter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginLeft","fontSize","marginBottom","onClick","length","Object","keys","map","key","Reg_No","onClose","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupStudents } from '../utils/groupByReg'; // Use the updated groupStudents function\n\nfunction StudentList({ filter, year, searchTerm }) {\n    const [students, setStudents] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedStudent, setSelectedStudent] = useState(null);\n    const [groupBy, setGroupBy] = useState('Reg_No'); // Default group by Reg_No\n\n    useEffect(() => {\n        const loadStudents = async() => {\n            setLoading(true);\n            setError(null);\n\n            try {\n                // Fetch student data based on filters (year, searchTerm, and groupBy)\n                const data = await fetchStudents(filter, year, searchTerm);\n                console.log(\"Fetched data:\", data);\n\n                if (Array.isArray(data)) {\n                    // Group students based on the groupBy criteria (Reg_No or School)\n                    const groupedData = groupStudents(data, groupBy);\n\n                    console.log(\"Grouped data:\", groupedData);\n\n                    // If the groupBy is School, update the students to be displayed based on the selected school\n                    if (groupBy === 'School') {\n                        // Display all students grouped by school\n                        setStudents(groupedData);\n                    } else {\n                        // Display all students grouped by Reg_No\n                        setStudents(groupedData);\n                    }\n                } else {\n                    console.error('Fetched data is not an array:', data);\n                    setStudents([]);\n                    setError('Unexpected data format from server.');\n                }\n            } catch (error) {\n                console.error('Error loading students:', error);\n                setError('Failed to load student data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadStudents();\n    }, [filter, year, searchTerm, groupBy]);\n\n    const handleStudentClick = (student) => {\n        setSelectedStudent(student);\n    };\n\n    const closeModal = () => {\n        setSelectedStudent(null);\n    };\n\n    const handleSchoolFilterChange = (school) => {\n        // Set groupBy to School and filter students by the selected school\n        setGroupBy('School');\n        setStudents((prevData) => prevData[school] || []);\n    };\n\n    const handleClearFilter = () => {\n        // Clear school filter and revert back to grouping by Reg_No\n        setGroupBy('Reg_No');\n        // Optionally, reset the students state to display all students grouped by Reg_No\n    };\n\n    if (loading) {\n        return <div className = \"loading-spinner\" > Loading... < /div>;\n    }\n\n    if (error) {\n        return <p className = \"error-message\" > { error } < /p>;\n    }\n\n    return ( <\n            div className = \"student-list\" >\n            <\n            h2 style = {\n                { marginLeft: '20px', fontSize: '30px' }\n            } > Students < /h2>\n\n            { /* Buttons for SCOPE, SENSE, SMEC, and All Students */ } <\n            div className = \"button-container\"\n            style = {\n                { marginLeft: '20px', marginBottom: '20px' }\n            } >\n            <\n            button className = \"student-filter-button\"\n            onClick = {\n                () => handleSchoolFilterChange('SCOPE')\n            } > SCOPE < /button> <\n            button className = \"student-filter-button\"\n            onClick = {\n                () => handleSchoolFilterChange('SENSE')\n            } > SENSE < /button> <\n            button className = \"student-filter-button\"\n            onClick = {\n                () => handleSchoolFilterChange('SMEC')\n            } > SMEC < /button> <\n            button className = \"student-filter-button\"\n            onClick = { handleClearFilter } > All Students < /button> < /\n            div >\n\n            <\n            div className = \"student-cards-container\" > {\n                students.length === 0 ? ( <\n                    p > No students found matching this criteria. < /p>\n                ) : (\n                    Object.keys(students).map(key => ( <\n                            div key = { key } >\n                            <\n                            h3 > { key } < /h3> {/ * This could be Reg_No or School * /} {\n                            students[key].map(student => ( <\n                                div key = { student.Reg_No }\n                                onClick = {\n                                    () => handleStudentClick(student)\n                                } >\n                                <\n                                StudentCard student = { student }\n                                /> < /\n                                div >\n                            ))\n                        } <\n                        /div>\n                    ))\n            )\n        } <\n        /div>\n\n    {\n        selectedStudent && ( <\n            StudentDetailModal student = { selectedStudent }\n            onClose = { closeModal }\n            />\n        )\n    } <\n    /div>\n);\n}\n\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}