{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport VerticalNavBar from './VerticalNavBar';\nimport { fetchStudents } from './api'; // Assuming you have an API method for fetching data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList() {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [schoolFilter, setSchoolFilter] = useState('');\n  const [yearFilter, setYearFilter] = useState('');\n  const [typeFilter, setTypeFilter] = useState('');\n  const [showCompanyList, setShowCompanyList] = useState(false);\n  useEffect(() => {\n    const loadStudents = async () => {\n      const fetchedStudents = await fetchStudents(); // Fetch students from the API\n      setStudents(fetchedStudents);\n    };\n    loadStudents();\n  }, []);\n  const toggleCompanyList = () => {\n    setShowCompanyList(prevState => !prevState);\n  };\n  const filteredStudents = students.filter(student => {\n    const matchesSchool = schoolFilter ? student.school === schoolFilter : true;\n    const matchesYear = yearFilter ? student.year === yearFilter : true;\n    const matchesType = typeFilter ? student.type === typeFilter : true;\n    return matchesSchool && matchesYear && matchesType;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(VerticalNavBar, {\n      onFilterChange: (filterType, value) => {\n        if (filterType === 'School') {\n          setSchoolFilter(value);\n        } else if (filterType === 'Year') {\n          setYearFilter(value);\n        } else if (filterType === 'Type') {\n          setTypeFilter(value);\n        }\n      },\n      onYearChange: setYearFilter,\n      toggleCompanyList: toggleCompanyList,\n      showCompanyList: showCompanyList,\n      schoolFilter: schoolFilter,\n      yearFilter: yearFilter,\n      typeFilter: typeFilter,\n      setSchoolFilter: setSchoolFilter,\n      setYearFilter: setYearFilter,\n      setTypeFilter: setTypeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", filteredStudents.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", student.Name, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", student.Reg_No, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 46\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", student.Year, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 46\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", student.Company, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 44\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", student.Applitatus, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 47\n        }, this), \" \"]\n      }, student._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 47\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"OOLuMN0kPIqf6xdQyZN0EWl0fkY=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","VerticalNavBar","fetchStudents","jsxDEV","_jsxDEV","StudentList","_s","students","setStudents","schoolFilter","setSchoolFilter","yearFilter","setYearFilter","typeFilter","setTypeFilter","showCompanyList","setShowCompanyList","loadStudents","fetchedStudents","toggleCompanyList","prevState","filteredStudents","filter","student","matchesSchool","school","matchesYear","year","matchesType","type","children","onFilterChange","filterType","value","onYearChange","fileName","_jsxFileName","lineNumber","columnNumber","map","Name","Reg_No","Year","Company","Applitatus","_id","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport VerticalNavBar from './VerticalNavBar';\nimport { fetchStudents } from './api'; // Assuming you have an API method for fetching data\n\nfunction StudentList() {\n    const [students, setStudents] = useState([]);\n    const [schoolFilter, setSchoolFilter] = useState('');\n    const [yearFilter, setYearFilter] = useState('');\n    const [typeFilter, setTypeFilter] = useState('');\n    const [showCompanyList, setShowCompanyList] = useState(false);\n\n    useEffect(() => {\n        const loadStudents = async() => {\n            const fetchedStudents = await fetchStudents(); // Fetch students from the API\n            setStudents(fetchedStudents);\n        };\n\n        loadStudents();\n    }, []);\n\n    const toggleCompanyList = () => {\n        setShowCompanyList(prevState => !prevState);\n    };\n\n    const filteredStudents = students.filter(student => {\n        const matchesSchool = schoolFilter ? student.school === schoolFilter : true;\n        const matchesYear = yearFilter ? student.year === yearFilter : true;\n        const matchesType = typeFilter ? student.type === typeFilter : true;\n        return matchesSchool && matchesYear && matchesType;\n    });\n\n    return ( <\n        div >\n        <\n        VerticalNavBar onFilterChange = {\n            (filterType, value) => {\n                if (filterType === 'School') {\n                    setSchoolFilter(value);\n                } else if (filterType === 'Year') {\n                    setYearFilter(value);\n                } else if (filterType === 'Type') {\n                    setTypeFilter(value);\n                }\n            }\n        }\n        onYearChange = { setYearFilter }\n        toggleCompanyList = { toggleCompanyList }\n        showCompanyList = { showCompanyList }\n        schoolFilter = { schoolFilter }\n        yearFilter = { yearFilter }\n        typeFilter = { typeFilter }\n        setSchoolFilter = { setSchoolFilter }\n        setYearFilter = { setYearFilter }\n        setTypeFilter = { setTypeFilter }\n        />\n\n        <\n        div > {\n            filteredStudents.map(student => ( <\n                div key = { student._id } >\n                <\n                h3 > { student.Name } < /h3> <\n                p > { student.Reg_No } < /p> <\n                p > { student.Year } < /p> <\n                p > { student.Company } < /p> <\n                p > { student.Applitatus } < /p> < /\n                div >\n            ))\n        } <\n        /div> < /\n        div >\n    );\n}\n\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}