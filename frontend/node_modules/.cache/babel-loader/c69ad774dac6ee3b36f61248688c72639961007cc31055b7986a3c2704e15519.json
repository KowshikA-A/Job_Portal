{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // To make API requests\nimport { Bar } from 'react-chartjs-2'; // For the chart\nimport 'chart.js/auto';\nimport './Monitoring.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Monitoring() {\n  _s();\n  const [numYears, setNumYears] = useState(2); // Default number of years\n  const [selectedYears, setSelectedYears] = useState([]); // Selected years\n  const [companyList, setCompanyList] = useState([]); // Company list from API\n  const [selectedCompany, setSelectedCompany] = useState(''); // Selected company\n  const [placementData, setPlacementData] = useState([]); // Placement data for chart\n\n  // Fetch the list of companies on component mount\n  useEffect(() => {\n    axios.get('/api/company') // Ensure this matches your backend route\n    .then(response => {\n      // Check the response structure\n      console.log('Company Response:', response.data); // Debugging line\n      if (Array.isArray(response.data)) {\n        setCompanyList(response.data);\n      } else {\n        console.error('Invalid company data structure:', response.data);\n      }\n    }).catch(error => {\n      console.error('Error fetching companies:', error);\n    });\n  }, []);\n\n  // Handle changes in the number of years to compare\n  const handleNumYearsChange = e => {\n    const num = Number(e.target.value);\n    if (num >= 2 && num <= 20) {\n      // Allow up to 20 years\n      setNumYears(num);\n      setSelectedYears(new Array(num).fill('')); // Reset the selected years array\n    } else {\n      alert(\"Please select a number of years between 2 and 20.\");\n    }\n  };\n\n  // Handle year selection change\n  const handleYearChange = (index, e) => {\n    const newSelectedYears = [...selectedYears];\n    newSelectedYears[index] = e.target.value;\n    setSelectedYears(newSelectedYears);\n  };\n\n  // Handle company selection change\n  const handleCompanyChange = e => {\n    setSelectedCompany(e.target.value);\n  };\n\n  // Fetch placement data based on selected years and company\n  const fetchPlacementData = () => {\n    const payload = {\n      years: selectedYears,\n      company: selectedCompany || null\n    };\n    axios.post('/api/placement', payload).then(response => {\n      if (Array.isArray(response.data)) {\n        setPlacementData(response.data);\n      } else {\n        console.error('Invalid placement data structure:', response.data);\n      }\n    }).catch(error => {\n      console.error('Error fetching placement data:', error);\n    });\n  };\n\n  // Prepare data for the chart\n  const chartData = {\n    labels: placementData.map(item => typeof item.status === 'string' ? item.status : 'Invalid Status'),\n    datasets: [{\n      label: `Placements for ${selectedCompany || 'All Companies'}`,\n      data: placementData.map(item => typeof item.count === 'number' ? item.count : 0),\n      backgroundColor: 'rgba(75, 192, 192, 0.6)',\n      borderColor: 'rgba(75, 192, 192, 1)',\n      borderWidth: 1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"monitoring-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Monitoring Placements \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"numYears\",\n      children: \" Select number of years to compare(min 2, max 20): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"numYears\",\n      type: \"number\",\n      value: numYears,\n      onChange: handleNumYearsChange,\n      min: \"2\",\n      max: \"20\" // Set max to 20\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 98\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"year-selection-container\",\n      children: [\" \", Array.from({\n        length: numYears\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"year-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `year${index}`,\n          children: [\" Year \", index + 1, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n          id: `year${index}`,\n          value: selectedYears[index] || '',\n          onChange: e => handleYearChange(index, e),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Select Year \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this), \" \", Array.from({\n            length: 20\n          }, (_, i) => 2025 - i).map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [\" \", year, \" \"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 82\n          }, this)), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 84\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 66\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 57\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"company\",\n      children: \" Select Company(Optional): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 46\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"select\", {\n      id: \"company\",\n      value: selectedCompany,\n      onChange: handleCompanyChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" All Companies \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), \" \", companyList.length > 0 ? companyList.map(company => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: company.name,\n        children: [\" \", company.name || 'Invalid Company', \" \"]\n      }, company._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 48\n      }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \" No Companies Available \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 19\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 73\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"onee\",\n      onClick: fetchPlacementData,\n      children: \" Submit \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), \" \", placementData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-chart\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 43\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 14\n  }, this);\n}\n_s(Monitoring, \"DCIJ1D09J/xRPoYSnfvkgzG0mnk=\");\n_c = Monitoring;\nexport default Monitoring;\nvar _c;\n$RefreshReg$(_c, \"Monitoring\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","Monitoring","_s","numYears","setNumYears","selectedYears","setSelectedYears","companyList","setCompanyList","selectedCompany","setSelectedCompany","placementData","setPlacementData","get","then","response","console","log","data","Array","isArray","error","catch","handleNumYearsChange","e","num","Number","target","value","fill","alert","handleYearChange","index","newSelectedYears","handleCompanyChange","fetchPlacementData","payload","years","company","post","chartData","labels","map","item","status","datasets","label","count","backgroundColor","borderColor","borderWidth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","onChange","min","max","from","length","_","i","year","name","_id","onClick","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/Monitoring.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'; // To make API requests\nimport { Bar } from 'react-chartjs-2'; // For the chart\nimport 'chart.js/auto';\nimport './Monitoring.css'; // Import the CSS file\n\nfunction Monitoring() {\n    const [numYears, setNumYears] = useState(2); // Default number of years\n    const [selectedYears, setSelectedYears] = useState([]); // Selected years\n    const [companyList, setCompanyList] = useState([]); // Company list from API\n    const [selectedCompany, setSelectedCompany] = useState(''); // Selected company\n    const [placementData, setPlacementData] = useState([]); // Placement data for chart\n\n    // Fetch the list of companies on component mount\n    useEffect(() => {\n        axios.get('/api/company') // Ensure this matches your backend route\n            .then((response) => {\n                // Check the response structure\n                console.log('Company Response:', response.data); // Debugging line\n                if (Array.isArray(response.data)) {\n                    setCompanyList(response.data);\n                } else {\n                    console.error('Invalid company data structure:', response.data);\n                }\n            })\n            .catch((error) => {\n                console.error('Error fetching companies:', error);\n            });\n    }, []);\n\n    // Handle changes in the number of years to compare\n    const handleNumYearsChange = (e) => {\n        const num = Number(e.target.value);\n        if (num >= 2 && num <= 20) { // Allow up to 20 years\n            setNumYears(num);\n            setSelectedYears(new Array(num).fill('')); // Reset the selected years array\n        } else {\n            alert(\"Please select a number of years between 2 and 20.\");\n        }\n    };\n\n    // Handle year selection change\n    const handleYearChange = (index, e) => {\n        const newSelectedYears = [...selectedYears];\n        newSelectedYears[index] = e.target.value;\n        setSelectedYears(newSelectedYears);\n    };\n\n    // Handle company selection change\n    const handleCompanyChange = (e) => {\n        setSelectedCompany(e.target.value);\n    };\n\n    // Fetch placement data based on selected years and company\n    const fetchPlacementData = () => {\n        const payload = {\n            years: selectedYears,\n            company: selectedCompany || null,\n        };\n\n        axios.post('/api/placement', payload)\n            .then((response) => {\n                if (Array.isArray(response.data)) {\n                    setPlacementData(response.data);\n                } else {\n                    console.error('Invalid placement data structure:', response.data);\n                }\n            })\n            .catch((error) => {\n                console.error('Error fetching placement data:', error);\n            });\n    };\n\n    // Prepare data for the chart\n    const chartData = {\n        labels: placementData.map(item => (typeof item.status === 'string' ? item.status : 'Invalid Status')),\n        datasets: [{\n            label: `Placements for ${selectedCompany || 'All Companies'}`,\n            data: placementData.map(item => (typeof item.count === 'number' ? item.count : 0)),\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgba(75, 192, 192, 1)',\n            borderWidth: 1,\n        }],\n    };\n\n    return ( <\n        div className = \"monitoring-container\" >\n        <\n        h2 > Monitoring Placements < /h2>\n\n        <\n        label htmlFor = \"numYears\" > Select number of years to compare(min 2, max 20): < /label> <\n        input id = \"numYears\"\n        type = \"number\"\n        value = { numYears }\n        onChange = { handleNumYearsChange }\n        min = \"2\"\n        max = \"20\" // Set max to 20\n        /\n        >\n\n        { /* Year selection dropdowns side by side */ } <\n        div className = \"year-selection-container\" > {\n            Array.from({ length: numYears }).map((_, index) => ( <\n                div key = { index }\n                className = \"year-dropdown\" >\n                <\n                label htmlFor = { `year${index}` } > Year { index + 1 }: < /label> <\n                select id = { `year${index}` }\n                value = { selectedYears[index] || '' }\n                onChange = {\n                    (e) => handleYearChange(index, e) } >\n                <\n                option value = \"\" > Select Year < /option> {\n                    Array.from({ length: 20 }, (_, i) => 2025 - i).map(year => ( <\n                        option key = { year }\n                        value = { year } > { year } < /option>\n                    ))\n                } <\n                /select> <\n                /div>\n            ))\n        } <\n        /div>\n\n        { /* Company selection dropdown */ } <\n        label htmlFor = \"company\" > Select Company(Optional): < /label> <\n        select id = \"company\"\n        value = { selectedCompany }\n        onChange = { handleCompanyChange } >\n        <\n        option value = \"\" > All Companies < /option> {\n            companyList.length > 0 ? (\n                companyList.map((company) => ( <\n                    option key = { company._id }\n                    value = { company.name } > { company.name || 'Invalid Company' } <\n                    /option>\n                ))\n            ) : ( <\n                option value = \"\" > No Companies Available < /option>\n            )\n        } <\n        /select>\n\n        <\n        button className = \"onee\"\n        onClick = { fetchPlacementData } > Submit < /button>\n\n        { /* Display the chart if there is placement data */ } {\n            placementData.length > 0 && ( <\n                div className = \"monitoring-chart\" >\n                <\n                Bar data = { chartData }\n                /> <\n                /div>\n            )\n        } <\n        /div>\n    );\n}\n\nexport default Monitoring;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}