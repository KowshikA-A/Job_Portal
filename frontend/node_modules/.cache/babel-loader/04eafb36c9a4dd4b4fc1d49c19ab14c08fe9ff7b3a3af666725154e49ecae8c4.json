{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/LessData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\n// Register the necessary components for Chart.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\nconst LessData = () => {\n  _s();\n  const [placementData, setPlacementData] = useState([]);\n  const [selectedYears, setSelectedYears] = useState([2023, 2024]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/api/your-endpoint'); // Update with your API endpoint\n        const data = await response.json();\n        setPlacementData(data);\n        console.log('Fetched Placement Data:', data); // Debugging line\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const normalizeStatus = status => {\n    switch (status) {\n      case 'Applied':\n        return 'Applied';\n      case 'Shortlisted':\n        return 'Shortlisted';\n      case 'Placed':\n        return 'Placed';\n      case 'Not Placed':\n        return 'Not Placed';\n      default:\n        return 'Unknown';\n    }\n  };\n  const handleYearChange = year => {\n    setSelectedYears(prevYears => prevYears.includes(year) ? prevYears.filter(y => y !== year) : [...prevYears, year]);\n  };\n  const labels = [...new Set(placementData.map(item => normalizeStatus(item.ApplicationStatus)))];\n  console.log('Labels:', labels); // Debugging line\n\n  const chartData = {\n    labels: labels,\n    datasets: selectedYears.map((year, index) => {\n      const yearData = placementData.filter(item => item.Year === parseInt(year));\n      const counts = {};\n      yearData.forEach(item => {\n        const status = normalizeStatus(item.ApplicationStatus);\n        counts[status] = (counts[status] || 0) + 1;\n      });\n      return {\n        label: `${year} Placements`,\n        data: labels.map(label => counts[label] || 0),\n        backgroundColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 0.6)`,\n        borderColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 1)`,\n        borderWidth: 1\n      };\n    })\n  };\n  console.log('Chart Data:', chartData); // Debugging line\n\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      datalabels: {\n        anchor: 'end',\n        align: 'end',\n        formatter: value => value,\n        color: 'white'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedYears.includes(2023),\n          onChange: () => handleYearChange(2023)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 9\n        }, this), \"2023 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: selectedYears.includes(2024),\n          onChange: () => handleYearChange(2024)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 9\n        }, this), \"2024 \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), \" \", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monitoring-chart\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: options,\n        plugins: [ChartDataLabels]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 14\n  }, this);\n};\n_s(LessData, \"ADaBE8jGiyAP4TKf+PDq4Hh2IoY=\");\n_c = LessData;\nexport default LessData;\nvar _c;\n$RefreshReg$(_c, \"LessData\");","map":{"version":3,"names":["React","useEffect","useState","Bar","ChartDataLabels","Chart","ChartJS","Title","Tooltip","Legend","BarElement","CategoryScale","LinearScale","jsxDEV","_jsxDEV","register","LessData","_s","placementData","setPlacementData","selectedYears","setSelectedYears","fetchData","response","fetch","data","json","console","log","error","normalizeStatus","status","handleYearChange","year","prevYears","includes","filter","y","labels","Set","map","item","ApplicationStatus","chartData","datasets","index","yearData","Year","parseInt","counts","forEach","label","backgroundColor","borderColor","borderWidth","options","responsive","plugins","legend","position","datalabels","anchor","align","formatter","value","color","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/LessData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport { Chart as ChartJS, Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale } from 'chart.js';\n\n// Register the necessary components for Chart.js\nChartJS.register(Title, Tooltip, Legend, BarElement, CategoryScale, LinearScale);\n\nconst LessData = () => {\n    const [placementData, setPlacementData] = useState([]);\n    const [selectedYears, setSelectedYears] = useState([2023, 2024]);\n\n    useEffect(() => {\n        const fetchData = async() => {\n            try {\n                const response = await fetch('/api/your-endpoint'); // Update with your API endpoint\n                const data = await response.json();\n                setPlacementData(data);\n                console.log('Fetched Placement Data:', data); // Debugging line\n            } catch (error) {\n                console.error('Error fetching data:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const normalizeStatus = (status) => {\n        switch (status) {\n            case 'Applied':\n                return 'Applied';\n            case 'Shortlisted':\n                return 'Shortlisted';\n            case 'Placed':\n                return 'Placed';\n            case 'Not Placed':\n                return 'Not Placed';\n            default:\n                return 'Unknown';\n        }\n    };\n\n    const handleYearChange = (year) => {\n        setSelectedYears(prevYears =>\n            prevYears.includes(year) ? prevYears.filter(y => y !== year) : [...prevYears, year]\n        );\n    };\n\n    const labels = [...new Set(placementData.map(item => normalizeStatus(item.ApplicationStatus)))];\n    console.log('Labels:', labels); // Debugging line\n\n    const chartData = {\n        labels: labels,\n        datasets: selectedYears.map((year, index) => {\n            const yearData = placementData.filter(item => item.Year === parseInt(year));\n            const counts = {};\n\n            yearData.forEach(item => {\n                const status = normalizeStatus(item.ApplicationStatus);\n                counts[status] = (counts[status] || 0) + 1;\n            });\n\n            return {\n                label: `${year} Placements`,\n                data: labels.map(label => counts[label] || 0),\n                backgroundColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 0.6)`,\n                borderColor: `rgba(${(index + 1) * 50}, ${(index + 1) * 100}, ${(index + 1) * 150}, 1)`,\n                borderWidth: 1,\n            };\n        }),\n    };\n\n    console.log('Chart Data:', chartData); // Debugging line\n\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: {\n                position: 'top',\n            },\n            datalabels: {\n                anchor: 'end',\n                align: 'end',\n                formatter: (value) => value,\n                color: 'white',\n            },\n        },\n    };\n\n    return ( <\n        div >\n        <\n        div >\n        <\n        label >\n        <\n        input type = \"checkbox\"\n        checked = { selectedYears.includes(2023) }\n        onChange = {\n            () => handleYearChange(2023) }\n        />\n        2023 <\n        /label> <\n        label >\n        <\n        input type = \"checkbox\"\n        checked = { selectedYears.includes(2024) }\n        onChange = {\n            () => handleYearChange(2024) }\n        />\n        2024 <\n        /label> { /* Add more years as needed */ } <\n        /div> <\n        div className = \"monitoring-chart\" >\n        <\n        Bar data = { chartData }\n        options = { options }\n        plugins = {\n            [ChartDataLabels] }\n        /> <\n        /div> <\n        /div>\n    );\n};\n\nexport default LessData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}