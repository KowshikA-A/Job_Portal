{"ast":null,"code":"import React,{useState,useEffect}from'react';import StudentCard from'./StudentCard';import'./StudentList.css';import{fetchStudents}from'../api/studentAPI';import{groupByRegNo}from'../../../backend/utils/groupByRegNo';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function StudentList(_ref){let{filter,year,searchTerm}=_ref;const[students,setStudents]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// New error state\nuseEffect(()=>{const loadStudents=async()=>{try{setLoading(true);// Start loading before the request\nconst data=await fetchStudents(filter,year,searchTerm);if(Array.isArray(data)){const groupedData=groupByRegNo(data);setStudents(groupedData);}else{console.error('Fetched data is not an array:',data);setError('Unexpected data format from server.');}}catch(error){console.error('Error loading students:',error);setError('Failed to load student data.');}finally{setLoading(false);// Stop loading after the request is done\n}};loadStudents();},[filter,year,searchTerm]);if(loading){return/*#__PURE__*/_jsx(\"p\",{children:\" Loading... \"});}if(error){return/*#__PURE__*/_jsxs(\"p\",{className:\"error-message\",children:[\" \",error,\" \"]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"student-list\",children:[/*#__PURE__*/_jsx(\"h2\",{style:{marginLeft:'20px',fontSize:'30px'},children:\" Students \"}),\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"student-cards-container\",children:[\" \",students.length>0?students.map(student=>/*#__PURE__*/_jsx(StudentCard,{student:student},student.Reg_No)):/*#__PURE__*/_jsx(\"p\",{children:\" No students found matching this criteria. \"}),\" \"]}),\" \"]});}export default StudentList;","map":{"version":3,"names":["React","useState","useEffect","StudentCard","fetchStudents","groupByRegNo","jsx","_jsx","jsxs","_jsxs","StudentList","_ref","filter","year","searchTerm","students","setStudents","loading","setLoading","error","setError","loadStudents","data","Array","isArray","groupedData","console","children","className","style","marginLeft","fontSize","length","map","student","Reg_No"],"sources":["/Users/roopakowshika/placement/placementfrontend/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport StudentCard from './StudentCard';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../../../backend/utils/groupByRegNo';\n\nfunction StudentList({ filter, year, searchTerm }) {\n    const [students, setStudents] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null); // New error state\n\n    useEffect(() => {\n        const loadStudents = async() => {\n            try {\n                setLoading(true); // Start loading before the request\n                const data = await fetchStudents(filter, year, searchTerm);\n\n                if (Array.isArray(data)) {\n                    const groupedData = groupByRegNo(data);\n                    setStudents(groupedData);\n                } else {\n                    console.error('Fetched data is not an array:', data);\n                    setError('Unexpected data format from server.');\n                }\n            } catch (error) {\n                console.error('Error loading students:', error);\n                setError('Failed to load student data.');\n            } finally {\n                setLoading(false); // Stop loading after the request is done\n            }\n        };\n\n        loadStudents();\n    }, [filter, year, searchTerm]);\n\n    if (loading) {\n        return <p > Loading... < /p>; \n    }\n\n    if (error) {\n        return <p className = \"error-message\" > { error } < /p>; \n    }\n\n    return ( <\n        div className = \"student-list\" >\n        <\n        h2 style = {\n            { marginLeft: '20px', fontSize: '30px' }\n        } > Students < /h2> <\n        div className = \"student-cards-container\" > {\n            students.length > 0 ? (\n                students.map(student => ( <\n                    StudentCard key = { student.Reg_No }\n                    student = { student }\n                    />\n                ))\n            ) : ( <\n                p > No students found matching this criteria. < /p>\n            )\n        } <\n        /div> < /\n        div >\n    );\n}\n\nexport default StudentList;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,WAAW,KAAM,eAAe,CACvC,MAAO,mBAAmB,CAC1B,OAASC,aAAa,KAAQ,mBAAmB,CACjD,OAASC,YAAY,KAAQ,qCAAqC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEnE,QAAS,CAAAC,WAAWA,CAAAC,IAAA,CAA+B,IAA9B,CAAEC,MAAM,CAAEC,IAAI,CAAEC,UAAW,CAAC,CAAAH,IAAA,CAC7C,KAAM,CAACI,QAAQ,CAAEC,WAAW,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAE;AAE1CC,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAmB,YAAY,CAAG,KAAAA,CAAA,GAAW,CAC5B,GAAI,CACAH,UAAU,CAAC,IAAI,CAAC,CAAE;AAClB,KAAM,CAAAI,IAAI,CAAG,KAAM,CAAAlB,aAAa,CAACQ,MAAM,CAAEC,IAAI,CAAEC,UAAU,CAAC,CAE1D,GAAIS,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,CAAE,CACrB,KAAM,CAAAG,WAAW,CAAGpB,YAAY,CAACiB,IAAI,CAAC,CACtCN,WAAW,CAACS,WAAW,CAAC,CAC5B,CAAC,IAAM,CACHC,OAAO,CAACP,KAAK,CAAC,+BAA+B,CAAEG,IAAI,CAAC,CACpDF,QAAQ,CAAC,qCAAqC,CAAC,CACnD,CACJ,CAAE,MAAOD,KAAK,CAAE,CACZO,OAAO,CAACP,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/CC,QAAQ,CAAC,8BAA8B,CAAC,CAC5C,CAAC,OAAS,CACNF,UAAU,CAAC,KAAK,CAAC,CAAE;AACvB,CACJ,CAAC,CAEDG,YAAY,CAAC,CAAC,CAClB,CAAC,CAAE,CAACT,MAAM,CAAEC,IAAI,CAAEC,UAAU,CAAC,CAAC,CAE9B,GAAIG,OAAO,CAAE,CACT,mBAAOV,IAAA,MAAAoB,QAAA,CAAI,cAAY,CAAI,CAAC,CAChC,CAEA,GAAIR,KAAK,CAAE,CACP,mBAAOV,KAAA,MAAGmB,SAAS,CAAG,eAAe,CAAAD,QAAA,EAAE,GAAC,CAAER,KAAK,CAAE,GAAC,EAAI,CAAC,CAC3D,CAEA,mBAASV,KAAA,QACDmB,SAAS,CAAG,cAAc,CAAAD,QAAA,eAC9BpB,IAAA,OACGsB,KAAK,CACJ,CAAEC,UAAU,CAAE,MAAM,CAAEC,QAAQ,CAAE,MAAO,CAC1C,CAAAJ,QAAA,CAAE,YAAU,CAAK,CAAC,IAAC,cAAAlB,KAAA,QAChBmB,SAAS,CAAG,yBAAyB,CAAAD,QAAA,EAAE,GAAC,CACxCZ,QAAQ,CAACiB,MAAM,CAAG,CAAC,CACfjB,QAAQ,CAACkB,GAAG,CAACC,OAAO,eAAM3B,IAAA,CACtBJ,WAAW,EACX+B,OAAO,CAAKA,OAAS,EADDA,OAAO,CAACC,MAE3B,CACJ,CAAC,cACA5B,IAAA,MAAAoB,QAAA,CACC,6CAA2C,CAAI,CACrD,CACJ,GAAC,EACE,CAAC,IAAC,EACF,CAAC,CAEb,CAEA,cAAe,CAAAjB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}