{"ast":null,"code":"import axios from'axios';export const fetchStudents=async(filter,year,searchTerm,schoolFilter,typeFilter)=>{try{const params={searchTerm,year:year||undefined,// Only include if year is provided\nschool:schoolFilter||undefined,// Only include if schoolFilter is provided\ntype:typeFilter||undefined,// Only include if typeFilter is provided\nfilter:filter!=='all'?filter:undefined// Only include filter if it's not 'all'\n};// Remove any undefined values from the params object\nconst cleanedParams=Object.fromEntries(Object.entries(params).filter(_ref=>{let[_,v]=_ref;return v!==undefined;}));const response=await axios.get('/api/students',{params:cleanedParams});return response.data;}catch(error){console.error(\"Error fetching students:\",error);throw error;}};","map":{"version":3,"names":["axios","fetchStudents","filter","year","searchTerm","schoolFilter","typeFilter","params","undefined","school","type","cleanedParams","Object","fromEntries","entries","_ref","_","v","response","get","data","error","console"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/api/studentAPI.js"],"sourcesContent":["import axios from 'axios';\n\nexport const fetchStudents = async(filter, year, searchTerm, schoolFilter, typeFilter) => {\n    try {\n        const params = {\n            searchTerm,\n            year: year || undefined, // Only include if year is provided\n            school: schoolFilter || undefined, // Only include if schoolFilter is provided\n            type: typeFilter || undefined, // Only include if typeFilter is provided\n            filter: filter !== 'all' ? filter : undefined // Only include filter if it's not 'all'\n        };\n\n        // Remove any undefined values from the params object\n        const cleanedParams = Object.fromEntries(Object.entries(params).filter(([_, v]) => v !== undefined));\n\n        const response = await axios.get('/api/students', { params: cleanedParams });\n        return response.data;\n    } catch (error) {\n        console.error(\"Error fetching students:\", error);\n        throw error;\n    }\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,MAAO,MAAM,CAAAC,aAAa,CAAG,KAAAA,CAAMC,MAAM,CAAEC,IAAI,CAAEC,UAAU,CAAEC,YAAY,CAAEC,UAAU,GAAK,CACtF,GAAI,CACA,KAAM,CAAAC,MAAM,CAAG,CACXH,UAAU,CACVD,IAAI,CAAEA,IAAI,EAAIK,SAAS,CAAE;AACzBC,MAAM,CAAEJ,YAAY,EAAIG,SAAS,CAAE;AACnCE,IAAI,CAAEJ,UAAU,EAAIE,SAAS,CAAE;AAC/BN,MAAM,CAAEA,MAAM,GAAK,KAAK,CAAGA,MAAM,CAAGM,SAAU;AAClD,CAAC,CAED;AACA,KAAM,CAAAG,aAAa,CAAGC,MAAM,CAACC,WAAW,CAACD,MAAM,CAACE,OAAO,CAACP,MAAM,CAAC,CAACL,MAAM,CAACa,IAAA,MAAC,CAACC,CAAC,CAAEC,CAAC,CAAC,CAAAF,IAAA,OAAK,CAAAE,CAAC,GAAKT,SAAS,GAAC,CAAC,CAEpG,KAAM,CAAAU,QAAQ,CAAG,KAAM,CAAAlB,KAAK,CAACmB,GAAG,CAAC,eAAe,CAAE,CAAEZ,MAAM,CAAEI,aAAc,CAAC,CAAC,CAC5E,MAAO,CAAAO,QAAQ,CAACE,IAAI,CACxB,CAAE,MAAOC,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,CAAEA,KAAK,CAAC,CAChD,KAAM,CAAAA,KAAK,CACf,CACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}