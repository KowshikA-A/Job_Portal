{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList({\n  filter,\n  year,\n  searchTerm,\n  schoolFilter,\n  typeFilter\n}) {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n  useEffect(() => {\n    const loadStudents = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch students based on filters\n        const data = await fetchStudents(filter, year, searchTerm, schoolFilter, typeFilter);\n        if (Array.isArray(data)) {\n          const groupedData = groupByRegNo(data); // Group students by Reg_No\n          setStudents(Object.values(groupedData));\n        } else {\n          setError('Unexpected data format from server.');\n        }\n      } catch (error) {\n        setError('Failed to load student data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadStudents();\n  }, [filter, year, searchTerm, schoolFilter, typeFilter]);\n  const handleStudentClick = student => setSelectedStudent(student);\n  const closeModal = () => setSelectedStudent(null);\n  const studentCards = useMemo(() => students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => handleStudentClick(student),\n    children: [/*#__PURE__*/_jsxDEV(StudentCard, {\n      student: student\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), \" \"]\n  }, student.Reg_No, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 66\n  }, this)), [students]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" Loading... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    className: \"error-message\",\n    children: [\" \", error, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: '20px',\n        fontSize: '30px'\n      },\n      children: \" Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-cards-container\",\n      children: [\" \", students.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No students found matching this criteria. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 41\n      }, this) : studentCards, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 78\n    }, this), \" \", selectedStudent && /*#__PURE__*/_jsxDEV(StudentDetailModal, {\n      student: selectedStudent,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 40\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"ZLnU49YJApvCpt6bxpjR0q7Ty8o=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","StudentCard","StudentDetailModal","fetchStudents","groupByRegNo","jsxDEV","_jsxDEV","StudentList","filter","year","searchTerm","schoolFilter","typeFilter","_s","students","setStudents","loading","setLoading","error","setError","selectedStudent","setSelectedStudent","loadStudents","data","Array","isArray","groupedData","Object","values","handleStudentClick","student","closeModal","studentCards","map","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Reg_No","className","style","marginLeft","fontSize","length","onClose","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { groupByRegNo } from '../utils/groupByRegNo';\n\nfunction StudentList({ filter, year, searchTerm, schoolFilter, typeFilter }) {\n    const [students, setStudents] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedStudent, setSelectedStudent] = useState(null);\n\n    useEffect(() => {\n        const loadStudents = async() => {\n            try {\n                setLoading(true);\n                setError(null);\n\n                // Fetch students based on filters\n                const data = await fetchStudents(filter, year, searchTerm, schoolFilter, typeFilter);\n                if (Array.isArray(data)) {\n                    const groupedData = groupByRegNo(data); // Group students by Reg_No\n                    setStudents(Object.values(groupedData));\n                } else {\n                    setError('Unexpected data format from server.');\n                }\n            } catch (error) {\n                setError('Failed to load student data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadStudents();\n    }, [filter, year, searchTerm, schoolFilter, typeFilter]);\n\n    const handleStudentClick = (student) => setSelectedStudent(student);\n    const closeModal = () => setSelectedStudent(null);\n\n    const studentCards = useMemo(() => students.map(student => ( <\n        div key = { student.Reg_No }\n        onClick = {\n            () => handleStudentClick(student) } >\n        <\n        StudentCard student = { student }\n        /> <\n        /div>\n    )), [students]);\n\n    if (loading) return <p > Loading... < /p>;\n    if (error) return <p className = \"error-message\" > { error } < /p>;\n\n    return ( <\n            div className = \"student-list\" >\n            <\n            h2 style = {\n                { marginLeft: '20px', fontSize: '30px' } } > Students < /h2> <\n            div className = \"student-cards-container\" > {\n                students.length === 0 ? < p > No students found matching this criteria. < /p> : studentCards} <\n                /div> {\n                    selectedStudent && < StudentDetailModal student = { selectedStudent }\n                    onClose = { closeModal }\n                    />} <\n                    /div>\n                );\n            }\n\n            export default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}