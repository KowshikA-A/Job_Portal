{"ast":null,"code":"export function groupByRegNo(students) {\n  return students.reduce((acc, student) => {\n    // Check if the Reg_No already exists in the accumulator object\n    if (acc[student.Reg_No]) {\n      // Push a new application object to the Applications array for the specific Reg_No\n      acc[student.Reg_No].Applications.push({\n        Company: student.Company,\n        ApplicationStatus: student.ApplicationStatus,\n        CTC: student.CTC\n      });\n    } else {\n      // If Reg_No doesn't exist, create a new entry with Applications array\n      acc[student.Reg_No] = {\n        Name: student.Name,\n        Reg_No: student.Reg_No,\n        Year: student.Year,\n        School: student.School,\n        Type: student.Type,\n        Applications: [{\n          Company: student.Company,\n          ApplicationStatus: student.ApplicationStatus,\n          CTC: student.CTC\n        }]\n      };\n    }\n    return acc;\n  }, {});\n}","map":{"version":3,"names":["groupByRegNo","students","reduce","acc","student","Reg_No","Applications","push","Company","ApplicationStatus","CTC","Name","Year","School","Type"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/utils/groupByRegNo.js"],"sourcesContent":["export function groupByRegNo(students) {\n    return students.reduce((acc, student) => {\n        // Check if the Reg_No already exists in the accumulator object\n        if (acc[student.Reg_No]) {\n            // Push a new application object to the Applications array for the specific Reg_No\n            acc[student.Reg_No].Applications.push({\n                Company: student.Company,\n                ApplicationStatus: student.ApplicationStatus,\n                CTC: student.CTC\n            });\n        } else {\n            // If Reg_No doesn't exist, create a new entry with Applications array\n            acc[student.Reg_No] = {\n                Name: student.Name,\n                Reg_No: student.Reg_No,\n                Year: student.Year,\n                School: student.School,\n                Type: student.Type,\n                Applications: [{\n                    Company: student.Company,\n                    ApplicationStatus: student.ApplicationStatus,\n                    CTC: student.CTC\n                }]\n            };\n        }\n        return acc;\n    }, {});\n}"],"mappings":"AAAA,OAAO,SAASA,YAAYA,CAACC,QAAQ,EAAE;EACnC,OAAOA,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IACrC;IACA,IAAID,GAAG,CAACC,OAAO,CAACC,MAAM,CAAC,EAAE;MACrB;MACAF,GAAG,CAACC,OAAO,CAACC,MAAM,CAAC,CAACC,YAAY,CAACC,IAAI,CAAC;QAClCC,OAAO,EAAEJ,OAAO,CAACI,OAAO;QACxBC,iBAAiB,EAAEL,OAAO,CAACK,iBAAiB;QAC5CC,GAAG,EAAEN,OAAO,CAACM;MACjB,CAAC,CAAC;IACN,CAAC,MAAM;MACH;MACAP,GAAG,CAACC,OAAO,CAACC,MAAM,CAAC,GAAG;QAClBM,IAAI,EAAEP,OAAO,CAACO,IAAI;QAClBN,MAAM,EAAED,OAAO,CAACC,MAAM;QACtBO,IAAI,EAAER,OAAO,CAACQ,IAAI;QAClBC,MAAM,EAAET,OAAO,CAACS,MAAM;QACtBC,IAAI,EAAEV,OAAO,CAACU,IAAI;QAClBR,YAAY,EAAE,CAAC;UACXE,OAAO,EAAEJ,OAAO,CAACI,OAAO;UACxBC,iBAAiB,EAAEL,OAAO,CAACK,iBAAiB;UAC5CC,GAAG,EAAEN,OAAO,CAACM;QACjB,CAAC;MACL,CAAC;IACL;IACA,OAAOP,GAAG;EACd,CAAC,EAAE,CAAC,CAAC,CAAC;AACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}