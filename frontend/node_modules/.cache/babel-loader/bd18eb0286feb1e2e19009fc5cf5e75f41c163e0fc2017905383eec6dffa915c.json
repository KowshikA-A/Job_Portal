{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList({\n  filter,\n  year,\n  searchTerm,\n  schoolFilter,\n  typeFilter\n}) {\n  _s();\n  const [students, setStudents] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n\n  // Load students when filters change\n  useEffect(() => {\n    const loadStudents = async () => {\n      try {\n        setLoading(true);\n        setError(null);\n\n        // Fetch students from the API\n        const data = await fetchStudents(filter, year, searchTerm, schoolFilter, typeFilter);\n        console.log(\"Fetched data:\", data); // Check the fetched data\n\n        if (Array.isArray(data)) {\n          // Apply filters directly on fetched data\n          const filteredStudents = data.filter(student => {\n            const matchesSchool = schoolFilter ? student.School === schoolFilter : true;\n            const matchesType = typeFilter ? student.Type === typeFilter : true;\n            return matchesSchool && matchesType;\n          });\n          setStudents(filteredStudents);\n        } else {\n          setStudents([]); // Set students to an empty array\n          setError('Unexpected data format from server.');\n        }\n      } catch (error) {\n        console.error('Error loading students:', error);\n        setError('Failed to load student data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadStudents();\n  }, [filter, year, searchTerm, schoolFilter, typeFilter]);\n\n  // Handle student click to view details\n  const handleStudentClick = student => {\n    setSelectedStudent(student);\n  };\n\n  // Close student detail modal\n  const closeModal = () => {\n    setSelectedStudent(null);\n  };\n\n  // Memoize student cards for performance\n  const studentCards = useMemo(() => {\n    return students.map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => handleStudentClick(student),\n      children: [/*#__PURE__*/_jsxDEV(StudentCard, {\n        student: student\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), \" \"]\n    }, student.Reg_No, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 42\n    }, this));\n  }, [students]);\n\n  // Render loading or error states\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: '20px',\n        fontSize: '30px'\n      },\n      children: \" Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-cards-container\",\n      children: [\" \", students.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No students found matching this criteria. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 39\n      }, this) : studentCards, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 74\n    }, this), selectedStudent && /*#__PURE__*/_jsxDEV(StudentDetailModal, {\n      student: selectedStudent,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 34\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"ZLnU49YJApvCpt6bxpjR0q7Ty8o=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","StudentCard","StudentDetailModal","fetchStudents","jsxDEV","_jsxDEV","StudentList","filter","year","searchTerm","schoolFilter","typeFilter","_s","students","setStudents","loading","setLoading","error","setError","selectedStudent","setSelectedStudent","loadStudents","data","console","log","Array","isArray","filteredStudents","student","matchesSchool","School","matchesType","Type","handleStudentClick","closeModal","studentCards","map","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","Reg_No","className","style","marginLeft","fontSize","length","onClose","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport StudentCard from './StudentCard';\nimport StudentDetailModal from './StudentDetailModal';\nimport './StudentList.css';\nimport { fetchStudents } from '../api/studentAPI';\n\nfunction StudentList({ filter, year, searchTerm, schoolFilter, typeFilter }) {\n    const [students, setStudents] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedStudent, setSelectedStudent] = useState(null);\n\n    // Load students when filters change\n    useEffect(() => {\n        const loadStudents = async() => {\n            try {\n                setLoading(true);\n                setError(null);\n\n                // Fetch students from the API\n                const data = await fetchStudents(filter, year, searchTerm, schoolFilter, typeFilter);\n                console.log(\"Fetched data:\", data); // Check the fetched data\n\n                if (Array.isArray(data)) {\n                    // Apply filters directly on fetched data\n                    const filteredStudents = data.filter(student => {\n                        const matchesSchool = schoolFilter ? student.School === schoolFilter : true;\n                        const matchesType = typeFilter ? student.Type === typeFilter : true;\n                        return matchesSchool && matchesType;\n                    });\n\n                    setStudents(filteredStudents);\n                } else {\n                    setStudents([]); // Set students to an empty array\n                    setError('Unexpected data format from server.');\n                }\n            } catch (error) {\n                console.error('Error loading students:', error);\n                setError('Failed to load student data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadStudents();\n    }, [filter, year, searchTerm, schoolFilter, typeFilter]);\n\n    // Handle student click to view details\n    const handleStudentClick = (student) => {\n        setSelectedStudent(student);\n    };\n\n    // Close student detail modal\n    const closeModal = () => {\n        setSelectedStudent(null);\n    };\n\n    // Memoize student cards for performance\n    const studentCards = useMemo(() => {\n        return students.map(student => ( <\n            div key = { student.Reg_No }\n            onClick = {\n                () => handleStudentClick(student) } >\n            <\n            StudentCard student = { student }\n            /> <\n            /div>\n        ));\n    }, [students]);\n\n    // Render loading or error states\n    if (loading) {\n        return <p > Loading... < /p>;\n    }\n\n    if (error) {\n        return <p className = \"error-message\" > { error } < /p>;\n    }\n\n    return ( <\n        div className = \"student-list\" >\n        <\n        h2 style = {\n            { marginLeft: '20px', fontSize: '30px' } } > Students < /h2> <\n        div className = \"student-cards-container\" > {\n            students.length === 0 ? ( <\n                p > No students found matching this criteria. < /p>\n            ) : (\n                studentCards\n            )\n        } <\n        /div>\n\n        {\n            selectedStudent && ( <\n                StudentDetailModal student = { selectedStudent }\n                onClose = { closeModal }\n                />\n            )\n        } <\n        /div>\n    );\n}\n\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}