{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/MoreData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport './MoreData.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoreData = () => {\n  _s();\n  const [years, setYears] = useState([]);\n  const [firstYear, setFirstYear] = useState('');\n  const [secondYear, setSecondYear] = useState('');\n  const [data, setData] = useState(null);\n\n  // Fetch unique years from the backend\n  useEffect(() => {\n    const fetchUniqueYears = async () => {\n      try {\n        const response = await axios.get('http://localhost:1000/api/suggest-years');\n        console.log('Fetched years:', response.data.years); // Log the fetched years\n        setYears(response.data.years || []); // Ensure it's an array\n      } catch (error) {\n        console.error('Error fetching years:', error);\n      }\n    };\n    fetchUniqueYears();\n  }, []);\n\n  // Function to generate a range of the next 5 years starting from the selected year\n  const generateYearRange = startYear => {\n    const start = parseInt(startYear, 10);\n    return Array.from({\n      length: 5\n    }, (v, i) => start + i);\n  };\n\n  // Function to handle the compare logic, fetch data, and set the bar chart data\n  const handleCompare = async () => {\n    if (firstYear && secondYear) {\n      const firstYearRange = generateYearRange(firstYear);\n      const secondYearRange = generateYearRange(secondYear);\n      try {\n        const response = await axios.post('http://localhost:1000/api/compare-years', {\n          firstYearRange,\n          secondYearRange\n        });\n\n        // Check if response has data\n        if (response.data) {\n          const {\n            firstYearData,\n            secondYearData\n          } = response.data;\n\n          // Prepare data for the grouped bar chart\n          const labels = firstYearData.map(item => item._id); // Use application statuses as labels\n\n          const chartData = {\n            labels,\n            // Labels for the chart\n            datasets: [{\n              label: `Data for ${firstYearRange.join(', ')}`,\n              data: firstYearData.map(item => item.count),\n              // Extract counts for first year\n              backgroundColor: 'rgba(75, 192, 192, 0.6)'\n            }, {\n              label: `Data for ${secondYearRange.join(', ')}`,\n              data: secondYearData.map(item => item.count),\n              // Extract counts for second year\n              backgroundColor: 'rgba(153, 102, 255, 0.6)'\n            }]\n          };\n          setData(chartData); // Update the chart with the fetched data\n        } else {\n          console.warn('No data returned from the server.');\n          setData(null); // Reset chart data if no data is returned\n        }\n      } catch (error) {\n        console.error('Error comparing year ranges:', error);\n        setData(null); // Reset chart data on error\n      }\n    } else {\n      console.log('Please select both years.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"more-data-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Compare Placement Statistics \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 17\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selectors\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdowns\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: firstYear,\n          onChange: e => setFirstYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Select Year for First Range \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this), \" \", years.length > 0 ? years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [\" \", year, \" \"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 43\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" No Years Available \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 23\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: secondYear,\n          onChange: e => setSecondYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" Select Year for Second Range \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), \" \", years.length > 0 ? years.map(year => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: year,\n            children: [\" \", year, \" \"]\n          }, year, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 35\n          }, this)) : /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \" No Years Available \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCompare,\n          className: \"submitt-btn\",\n          children: \"Submit \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 5\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 5\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 58\n    }, this), data && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(Bar, {\n        data: data,\n        options: {\n          responsive: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 18\n  }, this);\n};\n_s(MoreData, \"iD9GM8VgJPFHxN4NR+R7LvyZZAQ=\");\n_c = MoreData;\nexport default MoreData;\nvar _c;\n$RefreshReg$(_c, \"MoreData\");","map":{"version":3,"names":["React","useState","useEffect","axios","Bar","jsxDEV","_jsxDEV","MoreData","_s","years","setYears","firstYear","setFirstYear","secondYear","setSecondYear","data","setData","fetchUniqueYears","response","get","console","log","error","generateYearRange","startYear","start","parseInt","Array","from","length","v","i","handleCompare","firstYearRange","secondYearRange","post","firstYearData","secondYearData","labels","map","item","_id","chartData","datasets","label","join","count","backgroundColor","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","year","onClick","options","responsive","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/MoreData.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport './MoreData.css';\n\nconst MoreData = () => {\n        const [years, setYears] = useState([]);\n        const [firstYear, setFirstYear] = useState('');\n        const [secondYear, setSecondYear] = useState('');\n        const [data, setData] = useState(null);\n\n        // Fetch unique years from the backend\n        useEffect(() => {\n            const fetchUniqueYears = async() => {\n                try {\n                    const response = await axios.get('http://localhost:1000/api/suggest-years');\n                    console.log('Fetched years:', response.data.years); // Log the fetched years\n                    setYears(response.data.years || []); // Ensure it's an array\n                } catch (error) {\n                    console.error('Error fetching years:', error);\n                }\n            };\n\n            fetchUniqueYears();\n        }, []);\n\n        // Function to generate a range of the next 5 years starting from the selected year\n        const generateYearRange = (startYear) => {\n            const start = parseInt(startYear, 10);\n            return Array.from({ length: 5 }, (v, i) => start + i);\n        };\n\n        // Function to handle the compare logic, fetch data, and set the bar chart data\n        const handleCompare = async() => {\n            if (firstYear && secondYear) {\n                const firstYearRange = generateYearRange(firstYear);\n                const secondYearRange = generateYearRange(secondYear);\n\n                try {\n                    const response = await axios.post('http://localhost:1000/api/compare-years', {\n                        firstYearRange,\n                        secondYearRange,\n                    });\n\n                    // Check if response has data\n                    if (response.data) {\n                        const { firstYearData, secondYearData } = response.data;\n\n                        // Prepare data for the grouped bar chart\n                        const labels = firstYearData.map(item => item._id); // Use application statuses as labels\n\n                        const chartData = {\n                            labels, // Labels for the chart\n                            datasets: [{\n                                    label: `Data for ${firstYearRange.join(', ')}`,\n                                    data: firstYearData.map(item => item.count), // Extract counts for first year\n                                    backgroundColor: 'rgba(75, 192, 192, 0.6)',\n                                },\n                                {\n                                    label: `Data for ${secondYearRange.join(', ')}`,\n                                    data: secondYearData.map(item => item.count), // Extract counts for second year\n                                    backgroundColor: 'rgba(153, 102, 255, 0.6)',\n                                },\n                            ],\n                        };\n\n                        setData(chartData); // Update the chart with the fetched data\n                    } else {\n                        console.warn('No data returned from the server.');\n                        setData(null); // Reset chart data if no data is returned\n                    }\n                } catch (error) {\n                    console.error('Error comparing year ranges:', error);\n                    setData(null); // Reset chart data on error\n                }\n            } else {\n                console.log('Please select both years.');\n            }\n        };\n\n        return ( <\n                div className = \"more-data-page\" >\n                <\n                h2 > Compare Placement Statistics < /h2> <\n                div className = \"selectors\" >\n                <\n                div className = \"dropdowns\" >\n                <\n                select value = { firstYear }\n                onChange = {\n                    (e) => setFirstYear(e.target.value)\n                } >\n                <\n                option value = \"\" > Select Year\n                for First Range < /option> {\n                years.length > 0 ? (\n                    years.map((year) => ( <\n                        option key = { year }\n                        value = { year } > { year } < /option>\n                    ))\n                ) : ( <\n                    option value = \"\" > No Years Available < /option>\n                )\n            } <\n            /select>\n\n        <\n        select value = { secondYear }\n        onChange = {\n                (e) => setSecondYear(e.target.value)\n            } >\n            <\n            option value = \"\" > Select Year\n        for Second Range < /option> {\n        years.length > 0 ? (\n            years.map((year) => ( <\n                option key = { year }\n                value = { year } > { year } < /option>\n            ))\n        ) : ( <\n            option value = \"\" > No Years Available < /option>\n        )\n    } <\n    /select> < /\n    div >\n\n    <\n    div className = \"button-container\" >\n    <\n    button onClick = { handleCompare }\nclassName = \"submitt-btn\" >\n    Submit <\n    /button> < /\n    div > <\n    /div>\n\n{\n    data && ( <\n        div className = \"results\" >\n        <\n        Bar data = { data }\n        options = {\n            { responsive: true }\n        }\n        /> < /\n        div >\n    )\n} <\n/div>\n);\n};\n\nexport default MoreData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}