{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentCard.js\";\nimport React from 'react';\nimport './StudentCard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentCard({\n  student\n}) {\n  console.log('Student data in StudentCard:', student);\n  if (!student) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \" Invalid student data \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 16\n    }, this);\n  }\n  const companies = student.Companies || [];\n  const statuses = student.Statuses || [];\n\n  // Determine the card color based on the statuses\n  const getStatusColor = statuses => {\n    if (statuses.includes('Placed')) {\n      return {\n        background: '#d4edda',\n        border: 'green'\n      }; // Light green for placed\n    } else if (statuses.includes('Shortlisted')) {\n      return {\n        background: '#fff3cd',\n        border: 'orange'\n      }; // Light orange for shortlisted\n    } else if (statuses.includes('Not Placed')) {\n      return {\n        background: '#f8d7da',\n        border: 'red'\n      }; // Light red for not placed\n    } else if (statuses.includes('Applied')) {\n      return {\n        background: '#f8f9fa',\n        border: 'white'\n      }; // Light grey for applied\n    }\n    return {\n      background: '#ffffff',\n      border: '#dee2e6'\n    }; // Default to white\n  };\n  const {\n    background,\n    border\n  } = getStatusColor(statuses); // Get the color based on statuses\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-card\",\n    style: {\n      backgroundColor: background,\n      borderColor: border\n    } // Set background color and border color\n    ,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", student.Name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Reg No: \", student.Reg_No, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Year: \", student.Year, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 46\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-companies\",\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [\" \", companies.map((company, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [\" \", company, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), \": \", statuses[index], \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 49\n        }, this)), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 42\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 14\n  }, this);\n}\n_c = StudentCard;\nexport default StudentCard;\nvar _c;\n$RefreshReg$(_c, \"StudentCard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StudentCard","student","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","companies","Companies","statuses","Statuses","getStatusColor","includes","background","border","className","style","backgroundColor","borderColor","Name","Reg_No","Year","map","company","index","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentCard.js"],"sourcesContent":["import React from 'react';\nimport './StudentCard.css';\n\nfunction StudentCard({ student }) {\n    console.log('Student data in StudentCard:', student);\n\n    if (!student) {\n        return <div > Invalid student data < /div>;\n    }\n\n    const companies = student.Companies || [];\n    const statuses = student.Statuses || [];\n\n    // Determine the card color based on the statuses\n    const getStatusColor = (statuses) => {\n        if (statuses.includes('Placed')) {\n            return { background: '#d4edda', border: 'green' }; // Light green for placed\n        } else if (statuses.includes('Shortlisted')) {\n            return { background: '#fff3cd', border: 'orange' }; // Light orange for shortlisted\n        } else if (statuses.includes('Not Placed')) {\n            return { background: '#f8d7da', border: 'red' }; // Light red for not placed\n        } else if (statuses.includes('Applied')) {\n            return { background: '#f8f9fa', border: 'white' }; // Light grey for applied\n        }\n        return { background: '#ffffff', border: '#dee2e6' }; // Default to white\n    };\n\n    const { background, border } = getStatusColor(statuses); // Get the color based on statuses\n\n    return ( <\n        div className = \"student-card\"\n        style = {\n            { backgroundColor: background, borderColor: border } } // Set background color and border color\n        >\n        <\n        h3 > { student.Name } < /h3> <\n        p > Reg No: { student.Reg_No } < /p> <\n        p > Year: { student.Year } < /p> <\n        div className = \"student-companies\" >\n        <\n        ul > {\n            companies.map((company, index) => ( <\n                li key = { index } >\n                <\n                strong > { company } < /strong>: {statuses[index]} <\n                /li>\n            ))\n        } <\n        /ul> <\n        /div> <\n        /div>\n    );\n}\n\nexport default StudentCard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}