{"ast":null,"code":"var _jsxFileName = \"/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction StudentList({\n  filter,\n  year,\n  searchTerm\n}) {\n  _s();\n  const [students, setStudents] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [selectedStudent, setSelectedStudent] = useState(null);\n\n  // Helper function to safely handle string toLowerCase conversion\n  const safeToLowerCase = str => str ? str.toLowerCase() : '';\n  useEffect(() => {\n    const loadStudents = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchStudents(filter, year, searchTerm);\n        console.log('Fetched student data:', data); // Log to verify the data\n        if (Array.isArray(data)) {\n          // Optionally filter students based on search term here (if needed)\n          if (searchTerm) {\n            data = data.filter(student => safeToLowerCase(student.Reg_No).includes(safeToLowerCase(searchTerm)) || safeToLowerCase(student.Name).includes(safeToLowerCase(searchTerm)) // Add more fields to search as needed\n            );\n          }\n          const groupedData = groupByRegNo(data); // Group by Reg_No\n          setStudents(groupedData);\n        } else {\n          console.error('Fetched data is not an array:', data);\n          setError('Unexpected data format from server.');\n        }\n      } catch (error) {\n        console.error('Error loading students:', error);\n        setError('Failed to load student data.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadStudents();\n  }, [filter, year, searchTerm]);\n  const handleStudentClick = student => {\n    setSelectedStudent(student);\n  };\n  const closeModal = () => {\n    setSelectedStudent(null);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \" Loading... \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        marginLeft: '20px',\n        fontSize: '30px'\n      },\n      children: \" Students \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"student-cards-container\",\n      children: [\" \", Object.keys(students).length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \" No students found matching this criteria. \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 56\n      }, this) : Object.values(students).map(student => /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => handleStudentClick(student),\n        children: [/*#__PURE__*/_jsxDEV(StudentCard, {\n          student: student\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), \" \"]\n      }, student.Reg_No, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 64\n      }, this)), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 33\n    }, this), \" \", selectedStudent && /*#__PURE__*/_jsxDEV(StudentDetailModal, {\n      student: selectedStudent,\n      onClose: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 34\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 14\n  }, this);\n}\n_s(StudentList, \"yyozlw0A1m59L6xhmf2OcIuQ8pE=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["StudentList","filter","year","searchTerm","_s","students","setStudents","useState","loading","setLoading","error","setError","selectedStudent","setSelectedStudent","safeToLowerCase","str","toLowerCase","useEffect","loadStudents","data","fetchStudents","console","log","Array","isArray","student","Reg_No","includes","Name","groupedData","groupByRegNo","handleStudentClick","closeModal","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginLeft","fontSize","Object","keys","length","values","map","onClick","StudentCard","StudentDetailModal","onClose","_c","$RefreshReg$"],"sources":["/Users/roopakowshika/placement/placement__/frontend/src/components/StudentList.js"],"sourcesContent":["function StudentList({ filter, year, searchTerm }) {\n    const [students, setStudents] = useState({});\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [selectedStudent, setSelectedStudent] = useState(null);\n\n    // Helper function to safely handle string toLowerCase conversion\n    const safeToLowerCase = (str) => (str ? str.toLowerCase() : '');\n\n    useEffect(() => {\n        const loadStudents = async() => {\n            try {\n                setLoading(true);\n                const data = await fetchStudents(filter, year, searchTerm);\n                console.log('Fetched student data:', data); // Log to verify the data\n                if (Array.isArray(data)) {\n                    // Optionally filter students based on search term here (if needed)\n                    if (searchTerm) {\n                        data = data.filter(student =>\n                            safeToLowerCase(student.Reg_No).includes(safeToLowerCase(searchTerm)) ||\n                            safeToLowerCase(student.Name).includes(safeToLowerCase(searchTerm)) // Add more fields to search as needed\n                        );\n                    }\n\n                    const groupedData = groupByRegNo(data); // Group by Reg_No\n                    setStudents(groupedData);\n                } else {\n                    console.error('Fetched data is not an array:', data);\n                    setError('Unexpected data format from server.');\n                }\n            } catch (error) {\n                console.error('Error loading students:', error);\n                setError('Failed to load student data.');\n            } finally {\n                setLoading(false);\n            }\n        };\n\n        loadStudents();\n    }, [filter, year, searchTerm]);\n\n    const handleStudentClick = (student) => {\n        setSelectedStudent(student);\n    };\n\n    const closeModal = () => {\n        setSelectedStudent(null);\n    };\n\n    if (loading) {\n        return <p > Loading... < /p>;\n    }\n\n    if (error) {\n        return <p className = \"error-message\" > { error } < /p>;\n    }\n\n    return ( <\n            div className = \"student-list\" >\n            <\n            h2 style = {\n                { marginLeft: '20px', fontSize: '30px' }\n            } > Students < /h2> <\n            div className = \"student-cards-container\" > {\n                Object.keys(students).length === 0 ? ( <\n                    p > No students found matching this criteria. < /p>\n                ) : (\n                    Object.values(students).map((student) => ( <\n                        div key = { student.Reg_No }\n                        onClick = {\n                            () => handleStudentClick(student)\n                        } >\n                        <\n                        StudentCard student = { student }\n                        /> < /\n                        div >\n                    ))\n                )\n            } <\n            /div> {\n            selectedStudent && ( <\n                StudentDetailModal student = { selectedStudent }\n                onClose = { closeModal }\n                />\n            )\n        } <\n        /div>\n);\n}\n\nexport default StudentList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}